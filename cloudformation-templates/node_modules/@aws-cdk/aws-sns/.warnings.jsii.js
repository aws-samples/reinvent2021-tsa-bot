function _aws_cdk_aws_sns_SubscriptionProtocol(p) {
}
function _aws_cdk_aws_sns_BetweenCondition(p) {
}
function _aws_cdk_aws_sns_CfnTopicPolicyProps(p) {
}
function _aws_cdk_aws_sns_StringConditions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if ("blacklist" in p)
        print("@aws-cdk/aws-sns.StringConditions#blacklist", "use `denylist`");
    if ("whitelist" in p)
        print("@aws-cdk/aws-sns.StringConditions#whitelist", "use `allowlist`");
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_TopicProps(p) {
}
function _aws_cdk_aws_sns_CfnSubscriptionProps(p) {
}
function _aws_cdk_aws_sns_SubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.topic))
        _aws_cdk_aws_sns_ITopic(p.topic);
    if (!visitedObjects.has(p.protocol))
        _aws_cdk_aws_sns_SubscriptionProtocol(p.protocol);
    if (!visitedObjects.has(p.filterPolicy))
        _aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_TopicSubscriptionConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.protocol))
        _aws_cdk_aws_sns_SubscriptionProtocol(p.protocol);
    if (!visitedObjects.has(p.filterPolicy))
        _aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_TopicPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.topics))
        _aws_cdk_aws_sns_ITopic(p.topics);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_ITopicSubscription(p) {
}
function _aws_cdk_aws_sns_NumericConditions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.between))
        _aws_cdk_aws_sns_BetweenCondition(p.between);
    if (!visitedObjects.has(p.betweenStrict))
        _aws_cdk_aws_sns_BetweenCondition(p.betweenStrict);
    if ("whitelist" in p)
        print("@aws-cdk/aws-sns.NumericConditions#whitelist", "use `allowlist`");
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_SubscriptionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.protocol))
        _aws_cdk_aws_sns_SubscriptionProtocol(p.protocol);
    if (!visitedObjects.has(p.filterPolicy))
        _aws_cdk_aws_sns_SubscriptionFilter(p.filterPolicy);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_TopicPolicy(p) {
}
function _aws_cdk_aws_sns_Subscription(p) {
}
function _aws_cdk_aws_sns_Topic(p) {
}
function _aws_cdk_aws_sns_SubscriptionFilter(p) {
}
function _aws_cdk_aws_sns_CfnTopicPolicy(p) {
}
function _aws_cdk_aws_sns_CfnSubscription(p) {
}
function _aws_cdk_aws_sns_CfnTopicProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.tags))
        require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sns_CfnTopic(p) {
}
function _aws_cdk_aws_sns_CfnTopic_SubscriptionProperty(p) {
}
function _aws_cdk_aws_sns_ITopic(p) {
}
function _aws_cdk_aws_sns_TopicBase(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
const visitedObjects = new Set();
class DeprecationError extends Error {
}
module.exports = { print, _aws_cdk_aws_sns_SubscriptionProtocol, _aws_cdk_aws_sns_BetweenCondition, _aws_cdk_aws_sns_CfnTopicPolicyProps, _aws_cdk_aws_sns_StringConditions, _aws_cdk_aws_sns_TopicProps, _aws_cdk_aws_sns_CfnSubscriptionProps, _aws_cdk_aws_sns_SubscriptionProps, _aws_cdk_aws_sns_TopicSubscriptionConfig, _aws_cdk_aws_sns_TopicPolicyProps, _aws_cdk_aws_sns_ITopicSubscription, _aws_cdk_aws_sns_NumericConditions, _aws_cdk_aws_sns_SubscriptionOptions, _aws_cdk_aws_sns_TopicPolicy, _aws_cdk_aws_sns_Subscription, _aws_cdk_aws_sns_Topic, _aws_cdk_aws_sns_SubscriptionFilter, _aws_cdk_aws_sns_CfnTopicPolicy, _aws_cdk_aws_sns_CfnSubscription, _aws_cdk_aws_sns_CfnTopicProps, _aws_cdk_aws_sns_CfnTopic, _aws_cdk_aws_sns_CfnTopic_SubscriptionProperty, _aws_cdk_aws_sns_ITopic, _aws_cdk_aws_sns_TopicBase };
module.exports.DeprecationError = DeprecationError;
