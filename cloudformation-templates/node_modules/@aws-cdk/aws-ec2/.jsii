{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudwatch": "1.134.0",
    "@aws-cdk/aws-iam": "1.134.0",
    "@aws-cdk/aws-kms": "1.134.0",
    "@aws-cdk/aws-logs": "1.134.0",
    "@aws-cdk/aws-s3": "1.134.0",
    "@aws-cdk/aws-s3-assets": "1.134.0",
    "@aws-cdk/aws-ssm": "1.134.0",
    "@aws-cdk/cloud-assembly-schema": "1.134.0",
    "@aws-cdk/core": "1.134.0",
    "@aws-cdk/cx-api": "1.134.0",
    "@aws-cdk/region-info": "1.134.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::EC2",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.46.0 (build cd08c55)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "ec2"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-ec2",
  "readme": {
    "markdown": "# Amazon EC2 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n\nThe `@aws-cdk/aws-ec2` package contains primitives for setting up networking and\ninstances.\n\n```ts nofixture\nimport * as ec2 from '@aws-cdk/aws-ec2';\n```\n\n## VPC\n\nMost projects need a Virtual Private Cloud to provide security by means of\nnetwork partitioning. This is achieved by creating an instance of\n`Vpc`:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'VPC');\n```\n\nAll default constructs require EC2 instances to be launched inside a VPC, so\nyou should generally start by defining a VPC whenever you need to launch\ninstances for your project.\n\n### Subnet Types\n\nA VPC consists of one or more subnets that instances can be placed into. CDK\ndistinguishes three different subnet types:\n\n* **Public (`SubnetType.PUBLIC`)** - public subnets connect directly to the Internet using an\n  Internet Gateway. If you want your instances to have a public IP address\n  and be directly reachable from the Internet, you must place them in a\n  public subnet.\n* **Private with Internet Access (`SubnetType.PRIVATE_WITH_NAT`)** - instances in private subnets are not directly routable from the\n  Internet, and connect out to the Internet via a NAT gateway. By default, a\n  NAT gateway is created in every public subnet for maximum availability. Be\n  aware that you will be charged for NAT gateways.\n* **Isolated (`SubnetType.PRIVATE_ISOLATED`)** - isolated subnets do not route from or to the Internet, and\n  as such do not require NAT gateways. They can only connect to or be\n  connected to from other instances in the same VPC. A default VPC configuration\n  will not include isolated subnets,\n\nA default VPC configuration will create public and **private** subnets. However, if\n`natGateways:0` **and** `subnetConfiguration` is undefined, default VPC configuration\nwill create public and **isolated** subnets. See [*Advanced Subnet Configuration*](#advanced-subnet-configuration)\nbelow for information on how to change the default subnet configuration.\n\nConstructs using the VPC will \"launch instances\" (or more accurately, create\nElastic Network Interfaces) into one or more of the subnets. They all accept\na property called `subnetSelection` (sometimes called `vpcSubnets`) to allow\nyou to select in what subnet to place the ENIs, usually defaulting to\n*private* subnets if the property is omitted.\n\nIf you would like to save on the cost of NAT gateways, you can use\n*isolated* subnets instead of *private* subnets (as described in Advanced\n*Subnet Configuration*). If you need private instances to have\ninternet connectivity, another option is to reduce the number of NAT gateways\ncreated by setting the `natGateways` property to a lower value (the default\nis one NAT gateway per availability zone). Be aware that this may have\navailability implications for your application.\n\n[Read more about\nsubnets](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html).\n\n### Control over availability zones\n\nBy default, a VPC will spread over at most 3 Availability Zones available to\nit. To change the number of Availability Zones that the VPC will spread over,\nspecify the `maxAzs` property when defining it.\n\nThe number of Availability Zones that are available depends on the *region*\nand *account* of the Stack containing the VPC. If the [region and account are\nspecified](https://docs.aws.amazon.com/cdk/latest/guide/environments.html) on\nthe Stack, the CLI will [look up the existing Availability\nZones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#using-regions-availability-zones-describe)\nand get an accurate count. If region and account are not specified, the stack\ncould be deployed anywhere and it will have to make a safe choice, limiting\nitself to 2 Availability Zones.\n\nTherefore, to get the VPC to spread over 3 or more availability zones, you\nmust specify the environment where the stack will be deployed.\n\nYou can gain full control over the availability zones selection strategy by overriding the Stack's [`get availabilityZones()`](https://github.com/aws/aws-cdk/blob/master/packages/@aws-cdk/core/lib/stack.ts) method:\n\n```text\n// This example is only available in TypeScript\n\nclass MyStack extends Stack {\n\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    // ...\n  }\n\n  get availabilityZones(): string[] {\n    return ['us-west-2a', 'us-west-2b'];\n  }\n\n}\n```\n\nNote that overriding the `get availabilityZones()` method will override the default behavior for all constructs defined within the Stack.\n\n### Choosing subnets for resources\n\nWhen creating resources that create Elastic Network Interfaces (such as\ndatabases or instances), there is an option to choose which subnets to place\nthem in. For example, a VPC endpoint by default is placed into a subnet in\nevery availability zone, but you can override which subnets to use. The property\nis typically called one of `subnets`, `vpcSubnets` or `subnetSelection`.\n\nThe example below will place the endpoint into two AZs (`us-east-1a` and `us-east-1c`),\nin Isolated subnets:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  subnets: {\n    subnetType: ec2.SubnetType.ISOLATED,\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});\n```\n\nYou can also specify specific subnet objects for granular control:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const subnet1: ec2.Subnet;\ndeclare const subnet2: ec2.Subnet;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  subnets: {\n    subnets: [subnet1, subnet2]\n  }\n});\n```\n\nWhich subnets are selected is evaluated as follows:\n\n* `subnets`: if specific subnet objects are supplied, these are selected, and no other\n  logic is used.\n* `subnetType`/`subnetGroupName`: otherwise, a set of subnets is selected by\n  supplying either type or name:\n  * `subnetType` will select all subnets of the given type.\n  * `subnetGroupName` should be used to distinguish between multiple groups of subnets of\n    the same type (for example, you may want to separate your application instances and your\n    RDS instances into two distinct groups of Isolated subnets).\n  * If neither are given, the first available subnet group of a given type that\n    exists in the VPC will be used, in this order: Private, then Isolated, then Public.\n    In short: by default ENIs will preferentially be placed in subnets not connected to\n    the Internet.\n* `availabilityZones`/`onePerAz`: finally, some availability-zone based filtering may be done.\n  This filtering by availability zones will only be possible if the VPC has been created or\n  looked up in a non-environment agnostic stack (so account and region have been set and\n  availability zones have been looked up).\n  * `availabilityZones`: only the specific subnets from the selected subnet groups that are\n    in the given availability zones will be returned.\n  * `onePerAz`: per availability zone, a maximum of one subnet will be returned (Useful for resource\n    types that do not allow creating two ENIs in the same availability zone).\n* `subnetFilters`: additional filtering on subnets using any number of user-provided filters which\n  extend `SubnetFilter`.  The following methods on the `SubnetFilter` class can be used to create\n  a filter:\n  * `byIds`: chooses subnets from a list of ids\n  * `availabilityZones`: chooses subnets in the provided list of availability zones\n  * `onePerAz`: chooses at most one subnet per availability zone\n  * `containsIpAddresses`: chooses a subnet which contains *any* of the listed ip addresses\n  * `byCidrMask`: chooses subnets that have the provided CIDR netmask\n\n### Using NAT instances\n\nBy default, the `Vpc` construct will create NAT *gateways* for you, which\nare managed by AWS. If you would prefer to use your own managed NAT\n*instances* instead, specify a different value for the `natGatewayProvider`\nproperty, as follows:\n\n```ts lit=test/integ.nat-instances.lit.ts\n    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });\n```\n\nThe construct will automatically search for the most recent NAT gateway AMI.\nIf you prefer to use a custom AMI, use `machineImage:\nMachineImage.genericLinux({ ... })` and configure the right AMI ID for the\nregions you want to deploy to.\n\nBy default, the NAT instances will route all traffic. To control what traffic\ngets routed, pass `allowAllTraffic: false` and access the\n`NatInstanceProvider.connections` member after having passed it to the VPC:\n\n```ts\ndeclare const instanceType: ec2.InstanceType;\n\nconst provider = ec2.NatProvider.instance({\n  instanceType,\n  allowAllTraffic: false,\n});\nnew ec2.Vpc(this, 'TheVPC', {\n  natGatewayProvider: provider,\n});\nprovider.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/8'), ec2.Port.tcp(80));\n```\n\n### Advanced Subnet Configuration\n\nIf the default VPC configuration (public and private subnets spanning the\nsize of the VPC) don't suffice for you, you can configure what subnets to\ncreate by specifying the `subnetConfiguration` property. It allows you\nto configure the number and size of all subnets. Specifying an advanced\nsubnet configuration could look like this:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  // 'cidr' configures the IP range and size of the entire VPC.\n  // The IP space will be divided over the configured subnets.\n  cidr: '10.0.0.0/21',\n\n  // 'maxAzs' configures the maximum number of availability zones to use\n  maxAzs: 3,\n\n  // 'subnetConfiguration' specifies the \"subnet groups\" to create.\n  // Every subnet group will have a subnet for each AZ, so this\n  // configuration will create `3 groups × 3 AZs = 9` subnets.\n  subnetConfiguration: [\n    {\n      // 'subnetType' controls Internet access, as described above.\n      subnetType: ec2.SubnetType.PUBLIC,\n\n      // 'name' is used to name this particular subnet group. You will have to\n      // use the name for subnet selection if you have more than one subnet\n      // group of the same type.\n      name: 'Ingress',\n\n      // 'cidrMask' specifies the IP addresses in the range of of individual\n      // subnets in the group. Each of the subnets in this group will contain\n      // `2^(32 address bits - 24 subnet bits) - 2 reserved addresses = 254`\n      // usable IP addresses.\n      //\n      // If 'cidrMask' is left out the available address space is evenly\n      // divided across the remaining subnet groups.\n      cidrMask: 24,\n    },\n    {\n      cidrMask: 24,\n      name: 'Application',\n      subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n    },\n    {\n      cidrMask: 28,\n      name: 'Database',\n      subnetType: ec2.SubnetType.PRIVATE_ISOLATED,\n\n      // 'reserved' can be used to reserve IP address space. No resources will\n      // be created for this subnet, but the IP range will be kept available for\n      // future creation of this subnet, or even for future subdivision.\n      reserved: true\n    }\n  ],\n});\n```\n\nThe example above is one possible configuration, but the user can use the\nconstructs above to implement many other network configurations.\n\nThe `Vpc` from the above configuration in a Region with three\navailability zones will be the following:\n\nSubnet Name       |Type      |IP Block      |AZ|Features\n------------------|----------|--------------|--|--------\nIngressSubnet1    |`PUBLIC`  |`10.0.0.0/24` |#1|NAT Gateway\nIngressSubnet2    |`PUBLIC`  |`10.0.1.0/24` |#2|NAT Gateway\nIngressSubnet3    |`PUBLIC`  |`10.0.2.0/24` |#3|NAT Gateway\nApplicationSubnet1|`PRIVATE` |`10.0.3.0/24` |#1|Route to NAT in IngressSubnet1\nApplicationSubnet2|`PRIVATE` |`10.0.4.0/24` |#2|Route to NAT in IngressSubnet2\nApplicationSubnet3|`PRIVATE` |`10.0.5.0/24` |#3|Route to NAT in IngressSubnet3\nDatabaseSubnet1   |`ISOLATED`|`10.0.6.0/28` |#1|Only routes within the VPC\nDatabaseSubnet2   |`ISOLATED`|`10.0.6.16/28`|#2|Only routes within the VPC\nDatabaseSubnet3   |`ISOLATED`|`10.0.6.32/28`|#3|Only routes within the VPC\n\n### Accessing the Internet Gateway\n\nIf you need access to the internet gateway, you can get its ID like so:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst igwId = vpc.internetGatewayId;\n```\n\nFor a VPC with only `ISOLATED` subnets, this value will be undefined.\n\nThis is only supported for VPCs created in the stack - currently you're\nunable to get the ID for imported VPCs. To do that you'd have to specifically\nlook up the Internet Gateway by name, which would require knowing the name\nbeforehand.\n\nThis can be useful for configuring routing using a combination of gateways:\nfor more information see [Routing](#routing) below.\n\n#### Routing\n\nIt's possible to add routes to any subnets using the `addRoute()` method. If for\nexample you want an isolated subnet to have a static route via the default\nInternet Gateway created for the public subnet - perhaps for routing a VPN\nconnection - you can do so like this:\n\n```ts\nconst vpc = new ec2.Vpc(this, \"VPC\", {\n  subnetConfiguration: [{\n      subnetType: ec2.SubnetType.PUBLIC,\n      name: 'Public',\n    },{\n      subnetType: ec2.SubnetType.ISOLATED,\n      name: 'Isolated',\n    }]\n});\n\n(vpc.isolatedSubnets[0] as ec2.Subnet).addRoute(\"StaticRoute\", {\n    routerId: vpc.internetGatewayId!,\n    routerType: ec2.RouterType.GATEWAY,\n    destinationCidrBlock: \"8.8.8.8/32\",\n})\n```\n\n*Note that we cast to `Subnet` here because the list of subnets only returns an\n`ISubnet`.*\n\n### Reserving subnet IP space\n\nThere are situations where the IP space for a subnet or number of subnets\nwill need to be reserved. This is useful in situations where subnets would\nneed to be added after the vpc is originally deployed, without causing IP\nrenumbering for existing subnets. The IP space for a subnet may be reserved\nby setting the `reserved` subnetConfiguration property to true, as shown\nbelow:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  natGateways: 1,\n  subnetConfiguration: [\n    {\n      cidrMask: 26,\n      name: 'Public',\n      subnetType: ec2.SubnetType.PUBLIC,\n    },\n    {\n      cidrMask: 26,\n      name: 'Application1',\n      subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n    },\n    {\n      cidrMask: 26,\n      name: 'Application2',\n      subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n      reserved: true,   // <---- This subnet group is reserved\n    },\n    {\n      cidrMask: 27,\n      name: 'Database',\n      subnetType: ec2.SubnetType.ISOLATED,\n    }\n  ],\n});\n```\n\nIn the example above, the subnet for Application2 is not actually provisioned\nbut its IP space is still reserved. If in the future this subnet needs to be\nprovisioned, then the `reserved: true` property should be removed. Reserving\nparts of the IP space prevents the other subnets from getting renumbered.\n\n### Sharing VPCs between stacks\n\nIf you are creating multiple `Stack`s inside the same CDK application, you\ncan reuse a VPC defined in one Stack in another by simply passing the VPC\ninstance around:\n\n```ts lit=test/integ.share-vpcs.lit.ts\n/**\n * Stack1 creates the VPC\n */\nclass Stack1 extends cdk.Stack {\n  public readonly vpc: ec2.Vpc;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    this.vpc = new ec2.Vpc(this, 'VPC');\n  }\n}\n\ninterface Stack2Props extends cdk.StackProps {\n  vpc: ec2.IVpc;\n}\n\n/**\n * Stack2 consumes the VPC\n */\nclass Stack2 extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: Stack2Props) {\n    super(scope, id, props);\n\n    // Pass the VPC to a construct that needs it\n    new ConstructThatTakesAVpc(this, 'Construct', {\n      vpc: props.vpc,\n    });\n  }\n}\n\nconst stack1 = new Stack1(app, 'Stack1');\nconst stack2 = new Stack2(app, 'Stack2', {\n  vpc: stack1.vpc,\n});\n```\n\n### Importing an existing VPC\n\nIf your VPC is created outside your CDK app, you can use `Vpc.fromLookup()`.\nThe CDK CLI will search for the specified VPC in the the stack's region and\naccount, and import the subnet configuration. Looking up can be done by VPC\nID, but more flexibly by searching for a specific tag on the VPC.\n\nSubnet types will be determined from the `aws-cdk:subnet-type` tag on the\nsubnet if it exists, or the presence of a route to an Internet Gateway\notherwise. Subnet names will be determined from the `aws-cdk:subnet-name` tag\non the subnet if it exists, or will mirror the subnet type otherwise (i.e.\na public subnet will have the name `\"Public\"`).\n\nThe result of the `Vpc.fromLookup()` operation will be written to a file\ncalled `cdk.context.json`. You must commit this file to source control so\nthat the lookup values are available in non-privileged environments such\nas CI build steps, and to ensure your template builds are repeatable.\n\nHere's how `Vpc.fromLookup()` can be used:\n\n```ts lit=test/integ.import-default-vpc.lit.ts\nconst vpc = ec2.Vpc.fromLookup(stack, 'VPC', {\n  // This imports the default VPC but you can also\n  // specify a 'vpcName' or 'tags'.\n  isDefault: true,\n});\n```\n\n`Vpc.fromLookup` is the recommended way to import VPCs. If for whatever\nreason you do not want to use the context mechanism to look up a VPC at\nsynthesis time, you can also use `Vpc.fromVpcAttributes`. This has the\nfollowing limitations:\n\n* Every subnet group in the VPC must have a subnet in each availability zone\n  (for example, each AZ must have both a public and private subnet). Asymmetric\n  VPCs are not supported.\n* All VpcId, SubnetId, RouteTableId, ... parameters must either be known at\n  synthesis time, or they must come from deploy-time list parameters whose\n  deploy-time lengths are known at synthesis time.\n\nUsing `Vpc.fromVpcAttributes()` looks like this:\n\n```ts\nconst vpc = ec2.Vpc.fromVpcAttributes(this, 'VPC', {\n  vpcId: 'vpc-1234',\n  availabilityZones: ['us-east-1a', 'us-east-1b'],\n\n  // Either pass literals for all IDs\n  publicSubnetIds: ['s-12345', 's-67890'],\n\n  // OR: import a list of known length\n  privateSubnetIds: Fn.importListValue('PrivateSubnetIds', 2),\n\n  // OR: split an imported string to a list of known length\n  isolatedSubnetIds: Fn.split(',', ssm.StringParameter.valueForStringParameter(this, `MyParameter`), 2),\n});\n```\n\n## Allowing Connections\n\nIn AWS, all network traffic in and out of **Elastic Network Interfaces** (ENIs)\nis controlled by **Security Groups**. You can think of Security Groups as a\nfirewall with a set of rules. By default, Security Groups allow no incoming\n(ingress) traffic and all outgoing (egress) traffic. You can add ingress rules\nto them to allow incoming traffic streams. To exert fine-grained control over\negress traffic, set `allowAllOutbound: false` on the `SecurityGroup`, after\nwhich you can add egress traffic rules.\n\nYou can manipulate Security Groups directly:\n\n```ts fixture=with-vpc\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', {\n  vpc,\n  description: 'Allow ssh access to ec2 instances',\n  allowAllOutbound: true   // Can be set to false\n});\nmySecurityGroup.addIngressRule(ec2.Peer.anyIpv4(), ec2.Port.tcp(22), 'allow ssh access from the world');\n```\n\nAll constructs that create ENIs on your behalf (typically constructs that create\nEC2 instances or other VPC-connected resources) will all have security groups\nautomatically assigned. Those constructs have an attribute called\n**connections**, which is an object that makes it convenient to update the\nsecurity groups. If you want to allow connections between two constructs that\nhave security groups, you have to add an **Egress** rule to one Security Group,\nand an **Ingress** rule to the other. The connections object will automatically\ntake care of this for you:\n\n```ts\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\ndeclare const appFleet: autoscaling.AutoScalingGroup;\ndeclare const dbFleet: autoscaling.AutoScalingGroup;\n\n// Allow connections from anywhere\nloadBalancer.connections.allowFromAnyIpv4(ec2.Port.tcp(443), 'Allow inbound HTTPS');\n\n// The same, but an explicit IP address\nloadBalancer.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/32'), ec2.Port.tcp(443), 'Allow inbound HTTPS');\n\n// Allow connection between AutoScalingGroups\nappFleet.connections.allowTo(dbFleet, ec2.Port.tcp(443), 'App can call database');\n```\n\n### Connection Peers\n\nThere are various classes that implement the connection peer part:\n\n```ts\ndeclare const appFleet: autoscaling.AutoScalingGroup;\ndeclare const dbFleet: autoscaling.AutoScalingGroup;\n\n// Simple connection peers\nlet peer = ec2.Peer.ipv4('10.0.0.0/16');\npeer = ec2.Peer.anyIpv4();\npeer = ec2.Peer.ipv6('::0/0');\npeer = ec2.Peer.anyIpv6();\npeer = ec2.Peer.prefixList('pl-12345');\nappFleet.connections.allowTo(peer, ec2.Port.tcp(443), 'Allow outbound HTTPS');\n```\n\nAny object that has a security group can itself be used as a connection peer:\n\n```ts\ndeclare const fleet1: autoscaling.AutoScalingGroup;\ndeclare const fleet2: autoscaling.AutoScalingGroup;\ndeclare const appFleet: autoscaling.AutoScalingGroup;\n\n// These automatically create appropriate ingress and egress rules in both security groups\nfleet1.connections.allowTo(fleet2, ec2.Port.tcp(80), 'Allow between fleets');\n\nappFleet.connections.allowFromAnyIpv4(ec2.Port.tcp(80), 'Allow from load balancer');\n```\n\n### Port Ranges\n\nThe connections that are allowed are specified by port ranges. A number of classes provide\nthe connection specifier:\n\n```ts\nec2.Port.tcp(80)\nec2.Port.tcpRange(60000, 65535)\nec2.Port.allTcp()\nec2.Port.allTraffic()\n```\n\n> NOTE: This set is not complete yet; for example, there is no library support for ICMP at the moment.\n> However, you can write your own classes to implement those.\n\n### Default Ports\n\nSome Constructs have default ports associated with them. For example, the\nlistener of a load balancer does (it's the public port), or instances of an\nRDS database (it's the port the database is accepting connections on).\n\nIf the object you're calling the peering method on has a default port associated with it, you can call\n`allowDefaultPortFrom()` and omit the port specifier. If the argument has an associated default port, call\n`allowDefaultPortTo()`.\n\nFor example:\n\n```ts\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const appFleet: autoscaling.AutoScalingGroup;\ndeclare const rdsDatabase: rds.DatabaseCluster;\n\n// Port implicit in listener\nlistener.connections.allowDefaultPortFromAnyIpv4('Allow public');\n\n// Port implicit in peer\nappFleet.connections.allowDefaultPortTo(rdsDatabase, 'Fleet can access database');\n```\n\n### Security group rules\n\nBy default, security group wills be added inline to the security group in the output cloud formation\ntemplate, if applicable.  This includes any static rules by ip address and port range.  This\noptimization helps to minimize the size of the template.\n\nIn some environments this is not desirable, for example if your security group access is controlled\nvia tags. You can disable inline rules per security group or globally via the context key\n`@aws-cdk/aws-ec2.securityGroupDisableInlineRules`.\n\n```ts fixture=with-vpc\nconst mySecurityGroupWithoutInlineRules = new ec2.SecurityGroup(this, 'SecurityGroup', {\n  vpc,\n  description: 'Allow ssh access to ec2 instances',\n  allowAllOutbound: true,\n  disableInlineRules: true\n});\n//This will add the rule as an external cloud formation construct\nmySecurityGroupWithoutInlineRules.addIngressRule(ec2.Peer.anyIpv4(), ec2.Port.tcp(22), 'allow ssh access from the world');\n```\n\n### Importing an existing security group\n\nIf you know the ID and the configuration of the security group to import, you can use `SecurityGroup.fromSecurityGroupId`:\n\n```ts\nconst sg = ec2.SecurityGroup.fromSecurityGroupId(this, 'SecurityGroupImport', 'sg-1234', {\n  allowAllOutbound: true,\n});\n```\n\nAlternatively, use lookup methods to import security groups if you do not know the ID or the configuration details. Method `SecurityGroup.fromLookupByName` looks up a security group if the secruity group ID is unknown.\n\n```ts fixture=with-vpc\nconst sg = ec2.SecurityGroup.fromLookupByName(this, 'SecurityGroupLookup', 'security-group-name', vpc);\n```\n\nIf the security group ID is known and configuration details are unknown, use method `SecurityGroup.fromLookupById` instead. This method will lookup property `allowAllOutbound` from the current configuration of the security group.\n\n```ts\nconst sg = ec2.SecurityGroup.fromLookupById(this, 'SecurityGroupLookup', 'sg-1234');\n```\n\nThe result of `SecurityGroup.fromLookupByName` and `SecurityGroup.fromLookupById` operations will be written to a file called `cdk.context.json`. You must commit this file to source control so that the lookup values are available in non-privileged environments such as CI build steps, and to ensure your template builds are repeatable.\n\n## Machine Images (AMIs)\n\nAMIs control the OS that gets launched when you start your EC2 instance. The EC2\nlibrary contains constructs to select the AMI you want to use.\n\nDepending on the type of AMI, you select it a different way. Here are some\nexamples of things you might want to use:\n\n```ts lit=test/example.images.lit.ts\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n```\n\n> NOTE: The AMIs selected by `MachineImage.lookup()` will be cached in\n> `cdk.context.json`, so that your AutoScalingGroup instances aren't replaced while\n> you are making unrelated changes to your CDK app.\n>\n> To query for the latest AMI again, remove the relevant cache entry from\n> `cdk.context.json`, or use the `cdk context` command. For more information, see\n> [Runtime Context](https://docs.aws.amazon.com/cdk/latest/guide/context.html) in the CDK\n> developer guide.\n>\n> `MachineImage.genericLinux()`, `MachineImage.genericWindows()` will use `CfnMapping` in\n> an agnostic stack.\n\n## Special VPC configurations\n\n### VPN connections to a VPC\n\nCreate your VPC with VPN connections by specifying the `vpnConnections` props (keys are construct `id`s):\n\n```ts\nconst vpc = new ec2.Vpc(this, 'MyVpc', {\n  vpnConnections: {\n    dynamic: { // Dynamic routing (BGP)\n      ip: '1.2.3.4'\n    },\n    static: { // Static routing\n      ip: '4.5.6.7',\n      staticRoutes: [\n        '192.168.10.0/24',\n        '192.168.20.0/24'\n      ]\n    }\n  }\n});\n```\n\nTo create a VPC that can accept VPN connections, set `vpnGateway` to `true`:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'MyVpc', {\n  vpnGateway: true\n});\n```\n\nVPN connections can then be added:\n\n```ts fixture=with-vpc\nvpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\n```\n\nBy default, routes will be propagated on the route tables associated with the private subnets. If no\nprivate subnets exists, isolated subnets are used. If no isolated subnets exists, public subnets are\nused. Use the `Vpc` property `vpnRoutePropagation` to customize this behavior.\n\nVPN connections expose [metrics (cloudwatch.Metric)](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-cloudwatch/README.md) across all tunnels in the account/region and per connection:\n\n```ts fixture=with-vpc\n// Across all tunnels in the account/region\nconst allDataOut = ec2.VpnConnection.metricAllTunnelDataOut();\n\n// For a specific vpn connection\nconst vpnConnection = vpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\nconst state = vpnConnection.metricTunnelState();\n```\n\n### VPC endpoints\n\nA VPC endpoint enables you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC and the other service does not leave the Amazon network.\n\nEndpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components that allow communication between instances in your VPC and services without imposing availability risks or bandwidth constraints on your network traffic.\n\n```ts lit=test/integ.vpc-endpoint.lit.ts\n    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });\n```\n\nBy default, CDK will place a VPC endpoint in one subnet per AZ. If you wish to override the AZs CDK places the VPC endpoint in,\nuse the `subnets` parameter as follows:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});\n```\n\nPer the [AWS documentation](https://aws.amazon.com/premiumsupport/knowledge-center/interface-endpoint-availability-zone/), not all\nVPC endpoint services are available in all AZs. If you specify the parameter `lookupSupportedAzs`, CDK attempts to discover which\nAZs an endpoint service is available in, and will ensure the VPC endpoint is not placed in a subnet that doesn't match those AZs.\nThese AZs will be stored in cdk.context.json.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  lookupSupportedAzs: true\n});\n```\n\nPre-defined AWS services are defined in the [InterfaceVpcEndpointAwsService](lib/vpc-endpoint.ts) class, and can be used to\ncreate VPC endpoints without having to configure name, ports, etc. For example, a Keyspaces endpoint can be created for\nuse in your VPC:\n\n``` ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: ec2.InterfaceVpcEndpointAwsService.KEYSPACES,\n});\n```\n\n#### Security groups for interface VPC endpoints\n\nBy default, interface VPC endpoints create a new security group and traffic is **not**\nautomatically allowed from the VPC CIDR.\n\nUse the `connections` object to allow traffic to flow to the endpoint:\n\n```ts\ndeclare const myEndpoint: ec2.InterfaceVpcEndpoint;\n\nmyEndpoint.connections.allowDefaultPortFromAnyIpv4();\n```\n\nAlternatively, existing security groups can be used by specifying the `securityGroups` prop.\n\n### VPC endpoint services\n\nA VPC endpoint service enables you to expose a Network Load Balancer(s) as a provider service to consumers, who connect to your service over a VPC endpoint. You can restrict access to your service via allowed principals (anything that extends ArnPrincipal), and require that new connections be manually accepted.\n\n```ts\ndeclare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});\n```\n\nEndpoint services support private DNS, which makes it easier for clients to connect to your service by automatically setting up DNS in their VPC.\nYou can enable private DNS on an endpoint service like so:\n\n```ts\nimport { HostedZone, VpcEndpointServiceDomainName } from '@aws-cdk/aws-route53';\ndeclare const zone: HostedZone;\ndeclare const vpces: ec2.VpcEndpointService;\n\nnew VpcEndpointServiceDomainName(this, 'EndpointDomain', {\n  endpointService: vpces,\n  domainName: 'my-stuff.aws-cdk.dev',\n  publicHostedZone: zone,\n});\n```\n\nNote: The domain name must be owned (registered through Route53) by the account the endpoint service is in, or delegated to the account.\nThe VpcEndpointServiceDomainName will handle the AWS side of domain verification, the process for which can be found\n[here](https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-dns-validation.html)\n\n### Client VPN endpoint\n\nAWS Client VPN is a managed client-based VPN service that enables you to securely access your AWS\nresources and resources in your on-premises network. With Client VPN, you can access your resources\nfrom any location using an OpenVPN-based VPN client.\n\nUse the `addClientVpnEndpoint()` method to add a client VPN endpoint to a VPC:\n\n```ts fixture=client-vpn\nvpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  // Mutual authentication\n  clientCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/client-certificate-id',\n  // User-based authentication\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n```\n\nThe endpoint must use at least one [authentication method](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/client-authentication.html):\n\n* Mutual authentication with a client certificate\n* User-based authentication (directory or federated)\n\nIf user-based authentication is used, the [self-service portal URL](https://docs.aws.amazon.com/vpn/latest/clientvpn-user/self-service-portal.html)\nis made available via a CloudFormation output.\n\nBy default, a new security group is created and logging is enabled. Moreover, a rule to\nauthorize all users to the VPC CIDR is created.\n\nTo customize authorization rules, set the `authorizeAllUsersToVpcCidr` prop to `false`\nand use `addAuthorizationRule()`:\n\n```ts fixture=client-vpn\nconst endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});\n```\n\nUse `addRoute()` to configure network routes:\n\n```ts fixture=client-vpn\nconst endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n\n// Client-to-client access\nendpoint.addRoute('Route', {\n  cidr: '10.100.0.0/16',\n  target: ec2.ClientVpnRouteTarget.local(),\n});\n```\n\nUse the `connections` object of the endpoint to allow traffic to other security groups.\n\n## Instances\n\nYou can use the `Instance` class to start up a single EC2 instance. For production setups, we recommend\nyou use an `AutoScalingGroup` from the `aws-autoscaling` module instead, as AutoScalingGroups will take\ncare of restarting your instance if it ever fails.\n\n### Configuring Instances using CloudFormation Init (cfn-init)\n\nCloudFormation Init allows you to configure your instances by writing files to them, installing software\npackages, starting services and running arbitrary commands. By default, if any of the instance setup\ncommands throw an error, the deployment will fail and roll back to the previously known good state.\nThe following documentation also applies to `AutoScalingGroup`s.\n\nFor the full set of capabilities of this system, see the documentation for\n[`AWS::CloudFormation::Init`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html).\nHere is an example of applying some configuration to an instance:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});\n```\n\nYou can have services restarted after the init process has made changes to the system.\nTo do that, instantiate an `InitServiceRestartHandle` and pass it to the config elements\nthat need to trigger the restart and the service itself. For example, the following\nconfig writes a config file for nginx, extracts an archive to the root directory, and then\nrestarts nginx so that it picks up the new config and files:\n\n```ts\ndeclare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);\n```\n\n### Bastion Hosts\n\nA bastion host functions as an instance used to access servers and resources in a VPC without open up the complete VPC on a network level.\nYou can use bastion hosts using a standard SSH connection targeting port 22 on the host. As an alternative, you can connect the SSH connection\nfeature of AWS Systems Manager Session Manager, which does not need an opened security group. (https://aws.amazon.com/about-aws/whats-new/2019/07/session-manager-launches-tunneling-support-for-ssh-and-scp/)\n\nA default bastion host for use via SSM can be configured like:\n\n```ts fixture=with-vpc\nconst host = new ec2.BastionHostLinux(this, 'BastionHost', { vpc });\n```\n\nIf you want to connect from the internet using SSH, you need to place the host into a public subnet. You can then configure allowed source hosts.\n\n```ts fixture=with-vpc\nconst host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  subnetSelection: { subnetType: ec2.SubnetType.PUBLIC },\n});\nhost.allowSshAccessFrom(ec2.Peer.ipv4('1.2.3.4/32'));\n```\n\nAs there are no SSH public keys deployed on this machine, you need to use [EC2 Instance Connect](https://aws.amazon.com/de/blogs/compute/new-using-amazon-ec2-instance-connect-for-ssh-access-to-your-ec2-instances/)\nwith the command `aws ec2-instance-connect send-ssh-public-key` to provide your SSH public key.\n\nEBS volume for the bastion host can be encrypted like:\n\n```ts fixture=with-vpc\nconst host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});\n```\n\n### Block Devices\n\nTo add EBS block device mappings, specify the `blockDevices` property. The following example sets the EBS-backed\nroot device (`/dev/sda1`) size to 50 GiB, and adds another EBS-backed device mapped to `/dev/sdm` that is 100 GiB in\nsize:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50),\n    },\n    {\n      deviceName: '/dev/sdm',\n      volume: ec2.BlockDeviceVolume.ebs(100),\n    },\n  ],\n});\n\n```\n\n### Volumes\n\nWhereas a `BlockDeviceVolume` is an EBS volume that is created and destroyed as part of the creation and destruction of a specific instance. A `Volume` is for when you want an EBS volume separate from any particular instance. A `Volume` is an EBS block device that can be attached to, or detached from, any instance at any time. Some types of `Volume`s can also be attached to multiple instances at the same time to allow you to have shared storage between those instances.\n\nA notable restriction is that a Volume can only be attached to instances in the same availability zone as the Volume itself.\n\nThe following demonstrates how to create a 500 GiB encrypted Volume in the `us-west-2a` availability zone, and give a role the ability to attach that Volume to a specific instance:\n\n```ts\ndeclare const instance: ec2.Instance;\ndeclare const role: iam.Role;\n\nconst volume = new ec2.Volume(this, 'Volume', {\n  availabilityZone: 'us-west-2a',\n  size: Size.gibibytes(500),\n  encrypted: true,\n});\n\nvolume.grantAttachVolume(role, [instance]);\n```\n\n#### Instances Attaching Volumes to Themselves\n\nIf you need to grant an instance the ability to attach/detach an EBS volume to/from itself, then using `grantAttachVolume` and `grantDetachVolume` as outlined above\nwill lead to an unresolvable circular reference between the instance role and the instance. In this case, use `grantAttachVolumeByResourceTag` and `grantDetachVolumeByResourceTag` as follows:\n\n```ts\ndeclare const instance: ec2.Instance;\ndeclare const volume: ec2.Volume;\n\nconst attachGrant = volume.grantAttachVolumeByResourceTag(instance.grantPrincipal, [instance]);\nconst detachGrant = volume.grantDetachVolumeByResourceTag(instance.grantPrincipal, [instance]);\n```\n\n#### Attaching Volumes\n\nThe Amazon EC2 documentation for\n[Linux Instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html) and\n[Windows Instances](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-volumes.html) contains information on how\nto attach and detach your Volumes to/from instances, and how to format them for use.\n\nThe following is a sample skeleton of EC2 UserData that can be used to attach a Volume to the Linux instance that it is running on:\n\n```ts\ndeclare const instance: ec2.Instance;\ndeclare const volume: ec2.Volume;\n\nvolume.grantAttachVolumeByResourceTag(instance.grantPrincipal, [instance]);\nconst targetDevice = '/dev/xvdz';\ninstance.userData.addCommands(\n  // Retrieve token for accessing EC2 instance metadata (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html)\n  `TOKEN=$(curl -SsfX PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")`,\n  // Retrieve the instance Id of the current EC2 instance\n  `INSTANCE_ID=$(curl -SsfH \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/instance-id)`,\n  // Attach the volume to /dev/xvdz\n  `aws --region ${Stack.of(this).region} ec2 attach-volume --volume-id ${volume.volumeId} --instance-id $INSTANCE_ID --device ${targetDevice}`,\n  // Wait until the volume has attached\n  `while ! test -e ${targetDevice}; do sleep 1; done`\n  // The volume will now be mounted. You may have to add additional code to format the volume if it has not been prepared.\n);\n```\n\n### Configuring Instance Metadata Service (IMDS)\n\n#### Toggling IMDSv1\n\nYou can configure [EC2 Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) options to either\nallow both IMDSv1 and IMDSv2 or enforce IMDSv2 when interacting with the IMDS.\n\nTo do this for a single `Instance`, you can use the `requireImdsv2` property.\nThe example below demonstrates IMDSv2 being required on a single `Instance`:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  requireImdsv2: true,\n});\n```\n\nYou can also use the either the `InstanceRequireImdsv2Aspect` for EC2 instances or the `LaunchTemplateRequireImdsv2Aspect` for EC2 launch templates\nto apply the operation to multiple instances or launch templates, respectively.\n\nThe following example demonstrates how to use the `InstanceRequireImdsv2Aspect` to require IMDSv2 for all EC2 instances in a stack:\n\n```ts\nconst aspect = new ec2.InstanceRequireImdsv2Aspect();\nAspects.of(this).add(aspect);\n```\n\n## VPC Flow Logs\n\nVPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data can be published to Amazon CloudWatch Logs and Amazon S3. After you've created a flow log, you can retrieve and view its data in the chosen destination. (<https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html>).\n\nBy default a flow log will be created with CloudWatch Logs as the destination.\n\nYou can create a flow log like this:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc)\n})\n```\n\nOr you can add a Flow Log to a VPC by using the addFlowLog method like this:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLog');\n```\n\nYou can also add multiple flow logs with different destinations.\n\n```ts\nconst vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLogS3', {\n  destination: ec2.FlowLogDestination.toS3()\n});\n\nvpc.addFlowLog('FlowLogCloudWatch', {\n  trafficType: ec2.FlowLogTrafficType.REJECT\n});\n```\n\nBy default the CDK will create the necessary resources for the destination. For the CloudWatch Logs destination\nit will create a CloudWatch Logs Log Group as well as the IAM role with the necessary permissions to publish to\nthe log group. In the case of an S3 destination, it will create the S3 bucket.\n\nIf you want to customize any of the destination resources you can provide your own as part of the `destination`.\n\n*CloudWatch Logs*\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});\n```\n\n*S3*\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst bucket = new s3.Bucket(this, 'MyCustomBucket');\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toS3(bucket)\n});\n\nnew ec2.FlowLog(this, 'FlowLogWithKeyPrefix', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toS3(bucket, 'prefix/')\n});\n```\n\n## User Data\n\nUser data enables you to run a script when your instances start up.  In order to configure these scripts you can add commands directly to the script\n or you can use the UserData's convenience functions to aid in the creation of your script.\n\nA user data could be configured to run a script found in an asset through the following:\n\n```ts\nimport { Asset } from '@aws-cdk/aws-s3-assets';\n\ndeclare const instance: ec2.Instance;\n\nconst asset = new Asset(this, 'Asset', {\n  path: './configure.sh'\n});\n\nconst localPath = instance.userData.addS3DownloadCommand({\n  bucket:asset.bucket,\n  bucketKey:asset.s3ObjectKey,\n  region: 'us-east-1', // Optional\n});\ninstance.userData.addExecuteFileCommand({\n  filePath:localPath,\n  arguments: '--verbose -y'\n});\nasset.grantRead(instance.role);\n```\n\n### Multipart user data\n\nIn addition, to above the `MultipartUserData` can be used to change instance startup behavior. Multipart user data are composed\nfrom separate parts forming archive. The most common parts are scripts executed during instance set-up. However, there are other\nkinds, too.\n\nThe advantage of multipart archive is in flexibility when it's needed to add additional parts or to use specialized parts to\nfine tune instance startup. Some services (like AWS Batch) supports only `MultipartUserData`.\n\nThe parts can be executed at different moment of instance start-up and can serve a different purposes. This is controlled by `contentType` property.\nFor common scripts, `text/x-shellscript; charset=\"utf-8\"` can be used as content type.\n\nIn order to create archive the `MultipartUserData` has to be instantiated. Than, user can add parts to multipart archive using `addPart`. The `MultipartBody` contains methods supporting creation of body parts.\n\nIf the very custom part is required, it can be created using `MultipartUserData.fromRawBody`, in this case full control over content type,\ntransfer encoding, and body properties is given to the user.\n\nBelow is an example for creating multipart user data with single body part responsible for installing `awscli` and configuring maximum size\nof storage used by Docker containers:\n\n```ts\nconst bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});\n```\n\nFor more information see\n[Specifying Multiple User Data Blocks Using a MIME Multi Part Archive](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#multi-part_user_data)\n\n#### Using add*Command on MultipartUserData\n\nTo use the `add*Command` methods, that are inherited from the `UserData` interface, on `MultipartUserData` you must add a part\nto the `MultipartUserData` and designate it as the reciever for these methods. This is accomplished by using the `addUserDataPart()`\nmethod on `MultipartUserData` with the `makeDefault` argument set to `true`:\n\n```ts\nconst multipartUserData = new ec2.MultipartUserData();\nconst commandsUserData = ec2.UserData.forLinux();\nmultipartUserData.addUserDataPart(commandsUserData, ec2.MultipartBody.SHELL_SCRIPT, true);\n\n// Adding commands to the multipartUserData adds them to commandsUserData, and vice-versa.\nmultipartUserData.addCommands('touch /root/multi.txt');\ncommandsUserData.addCommands('touch /root/userdata.txt');\n```\n\nWhen used on an EC2 instance, the above `multipartUserData` will create both `multi.txt` and `userdata.txt` in `/root`.\n\n## Importing existing subnet\n\nTo import an existing Subnet, call `Subnet.fromSubnetAttributes()` or\n`Subnet.fromSubnetId()`. Only if you supply the subnet's Availability Zone\nand Route Table Ids when calling `Subnet.fromSubnetAttributes()` will you be\nable to use the CDK features that use these values (such as selecting one\nsubnet per AZ).\n\nImporting an existing subnet looks like this:\n\n```ts\n// Supply all properties\nconst subnet1 = ec2.Subnet.fromSubnetAttributes(this, 'SubnetFromAttributes', {\n  subnetId: 's-1234',\n  availabilityZone: 'pub-az-4465',\n  routeTableId: 'rt-145'\n});\n\n// Supply only subnet id\nconst subnet2 = ec2.Subnet.fromSubnetId(this, 'SubnetFromId', 's-1234');\n```\n\n## Launch Templates\n\nA Launch Template is a standardized template that contains the configuration information to launch an instance.\nThey can be used when launching instances on their own, through Amazon EC2 Auto Scaling, EC2 Fleet, and Spot Fleet.\nLaunch templates enable you to store launch parameters so that you do not have to specify them every time you launch\nan instance. For information on Launch Templates please see the\n[official documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html).\n\nThe following demonstrates how to create a launch template with an Amazon Machine Image, and security group.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst template = new ec2.LaunchTemplate(this, 'LaunchTemplate', {\n  machineImage: ec2.MachineImage.latestAmazonLinux(),\n  securityGroup: new ec2.SecurityGroup(this, 'LaunchTemplateSG', {\n    vpc: vpc,\n  }),\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-ec2",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.EC2",
      "packageId": "Amazon.CDK.AWS.EC2"
    },
    "java": {
      "maven": {
        "artifactId": "ec2",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.ec2"
    },
    "js": {
      "npm": "@aws-cdk/aws-ec2"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-ec2",
      "module": "aws_cdk.aws_ec2"
    }
  },
  "types": {
    "@aws-cdk/aws-ec2.AclCidr": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Either an IPv4 or an IPv6 CIDR.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst aclCidr = ec2.AclCidr.anyIpv4();"
      },
      "fqn": "@aws-cdk/aws-ec2.AclCidr",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 6
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The CIDR containing all IPv4 addresses (i.e., 0.0.0.0/0)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 19
          },
          "name": "anyIpv4",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The CIDR containing all IPv6 addresses (i.e., ::/0)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 35
          },
          "name": "anyIpv6",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An IP network range in CIDR notation (for example, 172.16.0.0/24)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 10
          },
          "name": "ipv4",
          "parameters": [
            {
              "name": "ipv4Cidr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An IPv6 network range in CIDR notation (for example, 2001:db8::/48)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 26
          },
          "name": "ipv6",
          "parameters": [
            {
              "name": "ipv6Cidr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 39
          },
          "name": "toCidrConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidrConfig"
            }
          }
        }
      ],
      "name": "AclCidr",
      "symbolId": "lib/network-acl-types:AclCidr"
    },
    "@aws-cdk/aws-ec2.AclCidrConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Acl Configuration for CIDR.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst aclCidrConfig: ec2.AclCidrConfig = {\n  cidrBlock: 'cidrBlock',\n  ipv6CidrBlock: 'ipv6CidrBlock',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.AclCidrConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 57
      },
      "name": "AclCidrConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Ipv4 CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 61
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Ipv6 CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 66
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclCidrConfig"
    },
    "@aws-cdk/aws-ec2.AclIcmp": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create Icmp.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst aclIcmp: ec2.AclIcmp = {\n  code: 123,\n  type: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.AclIcmp",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 215
      },
      "name": "AclIcmp",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use -1 to specify all ICMP\ncodes for the given ICMP type. Requirement is conditional: Required if you\nspecify 1 (ICMP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The Internet Control Message Protocol (ICMP) code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 227
          },
          "name": "code",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use -1 to specify all ICMP types.\nConditional requirement: Required if you specify 1 (ICMP) for the CreateNetworkAclEntry protocol parameter.",
            "stability": "stable",
            "summary": "The Internet Control Message Protocol (ICMP) type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 220
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclIcmp"
    },
    "@aws-cdk/aws-ec2.AclPortRange": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create PortRange.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst aclPortRange: ec2.AclPortRange = {\n  from: 123,\n  to: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.AclPortRange",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 235
      },
      "name": "AclPortRange",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The first port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 239
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The last port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 244
          },
          "name": "to",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclPortRange"
    },
    "@aws-cdk/aws-ec2.AclTraffic": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The traffic that is configured using a Network ACL entry.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst aclTraffic = ec2.AclTraffic.allTraffic();"
      },
      "fqn": "@aws-cdk/aws-ec2.AclTraffic",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 74
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to all traffic."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 78
          },
          "name": "allTraffic",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to ICMP traffic of given type and code."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 87
          },
          "name": "icmp",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AclIcmp"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Requires an IPv6 CIDR block.",
            "stability": "stable",
            "summary": "Apply the ACL entry to ICMPv6 traffic of given type and code."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 99
          },
          "name": "icmpv6",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AclIcmp"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to TCP traffic on a given port."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 109
          },
          "name": "tcpPort",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to TCP traffic on a given port range."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 122
          },
          "name": "tcpPortRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 158
          },
          "name": "toTrafficConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTrafficConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to UDP traffic on a given port."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 135
          },
          "name": "udpPort",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to UDP traffic on a given port range."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 148
          },
          "name": "udpPortRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        }
      ],
      "name": "AclTraffic",
      "symbolId": "lib/network-acl-types:AclTraffic"
    },
    "@aws-cdk/aws-ec2.AclTrafficConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Acl Configuration for traffic.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst aclTrafficConfig: ec2.AclTrafficConfig = {\n  protocol: 123,\n\n  // the properties below are optional\n  icmp: {\n    code: 123,\n    type: 123,\n  },\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.AclTrafficConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 176
      },
      "name": "AclTrafficConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Required if specifying 1 (ICMP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The Internet Control Message Protocol (ICMP) code and type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 182
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclIcmp"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter",
            "stability": "stable",
            "summary": "The range of port numbers for the UDP/TCP protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 189
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclPortRange"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "17",
            "remarks": "A value of \"-1\" means all protocols.\n\nIf you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP),\nor \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or\nICMP types or codes that you specify.\n\nIf you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR\nblock, traffic for all ICMP types and codes allowed, regardless of any that\nyou specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR\nblock, you must specify an ICMP type and code.",
            "stability": "stable",
            "summary": "The protocol number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 207
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclTrafficConfig"
    },
    "@aws-cdk/aws-ec2.Action": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "What action to apply to traffic matching the ACL."
      },
      "fqn": "@aws-cdk/aws-ec2.Action",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 149
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow the traffic."
          },
          "name": "ALLOW"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Deny the traffic."
          },
          "name": "DENY"
        }
      ],
      "name": "Action",
      "symbolId": "lib/network-acl:Action"
    },
    "@aws-cdk/aws-ec2.AddRouteOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const vpc = new ec2.Vpc(this, \"VPC\", {\n  subnetConfiguration: [{\n      subnetType: ec2.SubnetType.PUBLIC,\n      name: 'Public',\n    },{\n      subnetType: ec2.SubnetType.ISOLATED,\n      name: 'Isolated',\n    }]\n});\n\n(vpc.isolatedSubnets[0] as ec2.Subnet).addRoute(\"StaticRoute\", {\n    routerId: vpc.internetGatewayId!,\n    routerType: ec2.RouterType.GATEWAY,\n    destinationCidrBlock: \"8.8.8.8/32\",\n})",
        "stability": "stable",
        "summary": "Options for adding a new route to a subnet."
      },
      "fqn": "@aws-cdk/aws-ec2.AddRouteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1733
      },
      "name": "AddRouteOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "'0.0.0.0/0'",
            "stability": "stable",
            "summary": "IPv4 range this route applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1739
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses IPv6",
            "stability": "stable",
            "summary": "IPv6 range this route applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1746
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If true, this route will be added before any AWS resources that depend\non internet connectivity in the VPC will be created.",
            "stability": "stable",
            "summary": "Whether this route will enable internet connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1768
          },
          "name": "enablesInternetConnectivity",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be an instance ID, gateway ID, etc, depending on the router type.",
            "stability": "stable",
            "summary": "The ID of the router."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1758
          },
          "name": "routerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What type of router to route this traffic to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1751
          },
          "name": "routerType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.RouterType"
          }
        }
      ],
      "symbolId": "lib/vpc:AddRouteOptions"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxCpuType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "CPU type."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxCpuType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 282
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "arm64 CPU type."
          },
          "name": "ARM_64"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "x86_64 CPU type."
          },
          "name": "X86_64"
        }
      ],
      "name": "AmazonLinuxCpuType",
      "symbolId": "lib/machine-image:AmazonLinuxCpuType"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxEdition": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Amazon Linux edition."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 435
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard edition."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Minimal edition."
          },
          "name": "MINIMAL"
        }
      ],
      "name": "AmazonLinuxEdition",
      "symbolId": "lib/machine-image:AmazonLinuxEdition"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxGeneration": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\nconst myComputeEnv = new batch.ComputeEnvironment(this, 'ComputeEnv', {\n  computeResources: {\n    image: new ecs.EcsOptimizedAmi({\n      generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n    }),\n    vpc,\n  }\n});",
        "stability": "stable",
        "summary": "What generation of Amazon Linux to use."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 420
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Amazon Linux."
          },
          "name": "AMAZON_LINUX"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Amazon Linux 2."
          },
          "name": "AMAZON_LINUX_2"
        }
      ],
      "name": "AmazonLinuxGeneration",
      "symbolId": "lib/machine-image:AmazonLinuxGeneration"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
        "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.\n\nThe AMI ID is selected using the values published to the SSM parameter store.",
        "stability": "stable",
        "summary": "Selects the latest version of Amazon Linux."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 396
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 372
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the SSM parameter name that will contain the Amazon Linux image with the given attributes."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 376
          },
          "name": "ssmParameterName",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 405
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "AmazonLinuxImage",
      "symbolId": "lib/machine-image:AmazonLinuxImage"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Amazon Linux image properties."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 297
      },
      "name": "AmazonLinuxImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, the newest image is used on each deployment. This will cause\ninstances to be replaced whenever a new version is released, and may cause\ndowntime if there aren't enough running instances in the AutoScalingGroup\nto reschedule the tasks on.\n\nIf set to true, the AMI ID will be cached in `cdk.context.json` and the\nsame value will be used on future runs. Your instances will not be replaced\nbut your AMI version will grow old over time. To refresh the AMI lookup,\nyou will have to evict the value from the cache using the `cdk context`\ncommand. See https://docs.aws.amazon.com/cdk/latest/guide/context.html for\nmore information.\n\nCan not be set to `true` in environment-agnostic stacks.",
            "stability": "stable",
            "summary": "Whether the AMI ID is cached to be stable between deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 359
          },
          "name": "cachedInContext",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "X86_64",
            "stability": "stable",
            "summary": "CPU Type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 338
          },
          "name": "cpuType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxCpuType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Standard",
            "stability": "stable",
            "summary": "What edition of Amazon Linux to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 310
          },
          "name": "edition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AmazonLinux",
            "stability": "stable",
            "summary": "What generation of Amazon Linux to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 303
          },
          "name": "generation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GeneralPurpose",
            "stability": "stable",
            "summary": "What storage backed image to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 324
          },
          "name": "storage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Linux machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 331
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HVM",
            "stability": "stable",
            "summary": "Virtualization type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 317
          },
          "name": "virtualization",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt"
          }
        }
      ],
      "symbolId": "lib/machine-image:AmazonLinuxImageProps"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxStorage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 462
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EBS-backed storage."
          },
          "name": "EBS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose-based storage (recommended)."
          },
          "name": "GENERAL_PURPOSE"
        }
      ],
      "name": "AmazonLinuxStorage",
      "symbolId": "lib/machine-image:AmazonLinuxStorage"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxVirt": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Virtualization type for Amazon Linux."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 450
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HVM virtualization (recommended)."
          },
          "name": "HVM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PV virtualization."
          },
          "name": "PV"
        }
      ],
      "name": "AmazonLinuxVirt",
      "symbolId": "lib/machine-image:AmazonLinuxVirt"
    },
    "@aws-cdk/aws-ec2.ApplyCloudFormationInitOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "Options for applying CloudFormation init to an instance or instance group."
      },
      "fqn": "@aws-cdk/aws-ec2.ApplyCloudFormationInitOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 512
      },
      "name": "ApplyCloudFormationInitOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "['default']",
            "stability": "stable",
            "summary": "ConfigSet to activate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 518
          },
          "name": "configSets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `true` (the default), a hash of the config will be embedded into the\nUserData, so that if the config changes, the UserData changes.\n\n- If the EC2 instance is instance-store backed or\n   `userDataCausesReplacement` is set, this will cause the instance to be\n   replaced and the new configuration to be applied.\n- If the instance is EBS-backed and `userDataCausesReplacement` is not\n   set, the change of UserData will make the instance restart but not be\n   replaced, and the configuration will not be applied automatically.\n\nIf `false`, no hash will be embedded, and if the CloudFormation Init\nconfig changes nothing will happen to the running instance. If a\nconfig update introduces errors, you will not notice until after the\nCloudFormation deployment successfully finishes and the next instance\nfails to launch.",
            "stability": "stable",
            "summary": "Force instance replacement by embedding a config fingerprint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 548
          },
          "name": "embedFingerprint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "You can use this to prevent CloudFormation from rolling back when\ninstances fail to start up, to help in debugging.",
            "stability": "stable",
            "summary": "Don't fail the instance creation when cfn-init fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 573
          },
          "name": "ignoreFailures",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the IAM instance profile attached to the EC2 instance",
            "stability": "stable",
            "summary": "Include --role argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 592
          },
          "name": "includeRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the cloudformation endpoint in the deployed region\ne.g. https://cloudformation.us-east-1.amazonaws.com",
            "stability": "stable",
            "summary": "Include --url argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 583
          },
          "name": "includeUrl",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "By default, the output of running cfn-init is written to a log file\non the instance. Set this to `true` to print it to the System Log\n(visible from the EC2 Console), `false` to not print it.\n\n(Be aware that the system log is refreshed at certain points in\ntime of the instance life cycle, and successful execution may\nnot always show up).",
            "stability": "stable",
            "summary": "Print the results of running cfn-init to the Instance System Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 563
          },
          "name": "printLog",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "stability": "stable",
            "summary": "Timeout waiting for the configuration to be applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 525
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/instance:ApplyCloudFormationInitOptions"
    },
    "@aws-cdk/aws-ec2.AttachInitOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for attaching a CloudFormationInit to a resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const cfnResource: cdk.CfnResource;\ndeclare const role: iam.Role;\ndeclare const userData: ec2.UserData;\n\nconst attachInitOptions: ec2.AttachInitOptions = {\n  instanceRole: role,\n  platform: ec2.OperatingSystemType.LINUX,\n  userData: userData,\n\n  // the properties below are optional\n  configSets: ['configSets'],\n  embedFingerprint: false,\n  ignoreFailures: false,\n  includeRole: false,\n  includeUrl: false,\n  printLog: false,\n  signalResource: cfnResource,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.AttachInitOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 360
      },
      "name": "AttachInitOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "['default']",
            "stability": "stable",
            "summary": "ConfigSet to activate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 400
          },
          "name": "configSets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `true` (the default), a hash of the config will be embedded into the\nUserData, so that if the config changes, the UserData changes and\nthe instance will be replaced.\n\nIf `false`, no such hash will be embedded, and if the CloudFormation Init\nconfig changes nothing will happen to the running instance.",
            "stability": "stable",
            "summary": "Whether to embed a hash into the userData."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 414
          },
          "name": "embedFingerprint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "You can use this to prevent CloudFormation from rolling back when\ninstances fail to start up, to help in debugging.",
            "stability": "stable",
            "summary": "Don't fail the instance creation when cfn-init fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 439
          },
          "name": "ignoreFailures",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the IAM instance profile attached to the EC2 instance",
            "stability": "stable",
            "summary": "Include --role argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 383
          },
          "name": "includeRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the cloudformation endpoint in the deployed region\ne.g. https://cloudformation.us-east-1.amazonaws.com",
            "stability": "stable",
            "summary": "Include --url argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 374
          },
          "name": "includeUrl",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Instance role of the consuming instance or fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 364
          },
          "name": "instanceRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "OS Platform the init config will be used for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 388
          },
          "name": "platform",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "By default, the output of running cfn-init is written to a log file\non the instance. Set this to `true` to print it to the System Log\n(visible from the EC2 Console), `false` to not print it.\n\n(Be aware that the system log is refreshed at certain points in\ntime of the instance life cycle, and successful execution may\nnot always show up).",
            "stability": "stable",
            "summary": "Print the results of running cfn-init to the Instance System Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 429
          },
          "name": "printLog",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if this property is undefined cfn-signal signals the attached resource",
            "remarks": "You can use this to support signaling LaunchTemplate while attaching AutoScalingGroup",
            "stability": "stable",
            "summary": "When provided, signals this resource instead of the attached resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 448
          },
          "name": "signalResource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnResource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UserData to add commands to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 393
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/cfn-init:AttachInitOptions"
    },
    "@aws-cdk/aws-ec2.BastionHostLinux": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::Instance"
        },
        "example": "const host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});",
        "remarks": "The recommended way to connect to the bastion host is by using AWS Systems Manager Session Manager.\n\nThe operating system is Amazon Linux 2 with the latest SSM agent installed\n\nYou can also configure this bastion host to allow connections via SSH",
        "stability": "stable",
        "summary": "This creates a linux bastion host you can use to connect to other instances or services in your VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.BastionHostLinux",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/bastion-host.ts",
          "line": 146
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BastionHostLinuxProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInstance"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bastion-host.ts",
        "line": 96
      },
      "methods": [
        {
          "docs": {
            "remarks": "Necessary if you want to connect to the instance using ssh. If not\ncalled, you should use SSM Session Manager to connect to the instance.",
            "stability": "stable",
            "summary": "Allow SSH access from the given peer or peers."
          },
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 207
          },
          "name": "allowSshAccessFrom",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "BastionHostLinux",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 102
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 112
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The underlying instance resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 117
          },
          "name": "instance",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Instance"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The availability zone the instance was launched in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 127
          },
          "name": "instanceAvailabilityZone",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The instance's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 122
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 132
          },
          "name": "instancePrivateDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private IP for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 136
          },
          "name": "instancePrivateIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public name).",
            "stability": "stable",
            "summary": "Publicly-routable DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 140
          },
          "name": "instancePublicDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public IP).",
            "stability": "stable",
            "summary": "Publicly-routable IP  address for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 144
          },
          "name": "instancePublicIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role assumed by the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 107
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The stack in which this resource is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 97
          },
          "name": "stack",
          "overrides": "@aws-cdk/core.IResource",
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        }
      ],
      "symbolId": "lib/bastion-host:BastionHostLinux"
    },
    "@aws-cdk/aws-ec2.BastionHostLinuxProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});",
        "stability": "stable",
        "summary": "Properties of the bastion host."
      },
      "fqn": "@aws-cdk/aws-ec2.BastionHostLinuxProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bastion-host.ts",
        "line": 19
      },
      "name": "BastionHostLinuxProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC to launch the instance in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 31
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Random zone.",
            "stability": "stable",
            "summary": "In which AZ to place the instance within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 26
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 82
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'BastionHost'",
            "stability": "stable",
            "summary": "The name of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 38
          },
          "name": "instanceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'t3.nano'",
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 60
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- An Amazon Linux 2 image which is kept up-to-date automatically (the instance\nmay be replaced on every deployment) and already has SSM Agent installed.",
            "stability": "stable",
            "summary": "The machine image to use, assumed to have SSM Agent preinstalled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 68
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- create new security group with no inbound and all outbound traffic allowed",
            "stability": "stable",
            "summary": "Security Group to assign to this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 54
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- private subnets of the supplied VPC",
            "remarks": "Set this to PUBLIC if you need to connect to this instance via the internet and cannot use SSM.\nYou have to allow port 22 manually by using the connections field",
            "stability": "stable",
            "summary": "Select the subnets to run the bastion host in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 47
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/bastion-host:BastionHostLinuxProps"
    },
    "@aws-cdk/aws-ec2.BlockDevice": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const blockDeviceVolume: ec2.BlockDeviceVolume;\n\nconst blockDevice: ec2.BlockDevice = {\n  deviceName: 'deviceName',\n  volume: blockDeviceVolume,\n\n  // the properties below are optional\n  mappingEnabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.BlockDevice",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 18
      },
      "name": "BlockDevice",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, a value like `/dev/sdh`, `xvdh`.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html",
            "stability": "stable",
            "summary": "The device name exposed to the EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 26
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - device mapping is left untouched",
            "remarks": "If set to false for the root device, the instance might fail the Amazon EC2 health check.\nAmazon EC2 Auto Scaling launches a replacement instance if the instance fails the health check.",
            "stability": "stable",
            "summary": "If false, the device mapping will be suppressed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 42
          },
          "name": "mappingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, a value like `BlockDeviceVolume.ebs(15)`, `BlockDeviceVolume.ephemeral(0)`.",
            "stability": "stable",
            "summary": "Defines the block device volume, to be either an Amazon EBS volume or an ephemeral instance store volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 33
          },
          "name": "volume",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDevice"
    },
    "@aws-cdk/aws-ec2.BlockDeviceVolume": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});",
        "stability": "stable",
        "summary": "Describes a block device mapping for an EC2 instance or Auto Scaling group."
      },
      "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/volume.ts",
          "line": 162
        },
        "parameters": [
          {
            "docs": {
              "summary": "EBS device info."
            },
            "name": "ebsDevice",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.EbsDeviceProps"
            }
          },
          {
            "docs": {
              "summary": "Virtual device name."
            },
            "name": "virtualName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 123
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 130
          },
          "name": "ebs",
          "parameters": [
            {
              "docs": {
                "summary": "The volume size, in Gibibytes (GiB)."
              },
              "name": "volumeSize",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EbsDeviceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device from an existing snapshot."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 140
          },
          "name": "ebsFromSnapshot",
          "parameters": [
            {
              "docs": {
                "summary": "The snapshot ID of the volume to use."
              },
              "name": "snapshotId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The name will be in the form ephemeral{volumeIndex}.",
            "stability": "stable",
            "summary": "Creates a virtual, ephemeral device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 150
          },
          "name": "ephemeral",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be equal or greater than 0",
                "summary": "the volume index."
              },
              "name": "volumeIndex",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
            }
          },
          "static": true
        }
      ],
      "name": "BlockDeviceVolume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EBS device info."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 162
          },
          "name": "ebsDevice",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.EbsDeviceProps"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Virtual device name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 162
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDeviceVolume"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CapacityReservation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CapacityReservation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCapacityReservation = new ec2.CfnCapacityReservation(this, 'MyCfnCapacityReservation', {\n  availabilityZone: 'availabilityZone',\n  instanceCount: 123,\n  instancePlatform: 'instancePlatform',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  ebsOptimized: false,\n  endDate: 'endDate',\n  endDateType: 'endDateType',\n  ephemeralStorage: false,\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  outPostArn: 'outPostArn',\n  placementGroupArn: 'placementGroupArn',\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CapacityReservation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 325
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 190
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 358
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 381
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCapacityReservation",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 218
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailableInstanceCount"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 223
          },
          "name": "attrAvailableInstanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "InstanceType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 228
          },
          "name": "attrInstanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Tenancy"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 233
          },
          "name": "attrTenancy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TotalInstanceCount"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 238
          },
          "name": "attrTotalInstanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 244
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 194
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 363
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EbsOptimized`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 268
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EndDate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 274
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EndDateType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 280
          },
          "name": "endDateType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EphemeralStorage`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 286
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstanceCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 250
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstanceMatchCriteria`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 292
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstancePlatform`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 256
          },
          "name": "instancePlatform",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstanceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 262
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.OutPostArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 298
          },
          "name": "outPostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.PlacementGroupArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 304
          },
          "name": "placementGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 310
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.Tenancy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 316
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservation"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst tagSpecificationProperty: ec2.CfnCapacityReservation.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 391
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnCapacityReservation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservation.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 396
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-tags"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservation.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 401
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservation.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CapacityReservationFleet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CapacityReservationFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCapacityReservationFleet = new ec2.CfnCapacityReservationFleet(this, 'MyCfnCapacityReservationFleet', /* all optional props */ {\n  allocationStrategy: 'allocationStrategy',\n  endDate: 'endDate',\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  instanceTypeSpecifications: [{\n    availabilityZone: 'availabilityZone',\n    availabilityZoneId: 'availabilityZoneId',\n    ebsOptimized: false,\n    instancePlatform: 'instancePlatform',\n    instanceType: 'instanceType',\n    priority: 123,\n    weight: 123,\n  }],\n  noRemoveEndDate: false,\n  removeEndDate: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n  totalTargetCapacity: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CapacityReservationFleet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 686
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 595
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 707
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 726
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCapacityReservationFleet",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.AllocationStrategy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 629
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CapacityReservationFleetId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 623
          },
          "name": "attrCapacityReservationFleetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 599
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 712
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.EndDate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 635
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.InstanceMatchCriteria`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 641
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.InstanceTypeSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 647
          },
          "name": "instanceTypeSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.NoRemoveEndDate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 653
          },
          "name": "noRemoveEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.RemoveEndDate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 659
          },
          "name": "removeEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 665
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.Tenancy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 671
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.TotalTargetCapacity`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 677
          },
          "name": "totalTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleet"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceTypeSpecificationProperty: ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty = {\n  availabilityZone: 'availabilityZone',\n  availabilityZoneId: 'availabilityZoneId',\n  ebsOptimized: false,\n  instancePlatform: 'instancePlatform',\n  instanceType: 'instanceType',\n  priority: 123,\n  weight: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 736
      },
      "name": "InstanceTypeSpecificationProperty",
      "namespace": "CfnCapacityReservationFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-availabilityzone"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.InstanceTypeSpecificationProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 741
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-availabilityzoneid"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.InstanceTypeSpecificationProperty.AvailabilityZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 746
          },
          "name": "availabilityZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-ebsoptimized"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.InstanceTypeSpecificationProperty.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 751
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-instanceplatform"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.InstanceTypeSpecificationProperty.InstancePlatform`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 756
          },
          "name": "instancePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-instancetype"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.InstanceTypeSpecificationProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 761
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-priority"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.InstanceTypeSpecificationProperty.Priority`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 766
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-weight"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.InstanceTypeSpecificationProperty.Weight`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 771
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleet.InstanceTypeSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst tagSpecificationProperty: ec2.CfnCapacityReservationFleet.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 846
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnCapacityReservationFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html#cfn-ec2-capacityreservationfleet-tagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 851
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html#cfn-ec2-capacityreservationfleet-tagspecification-tags"
            },
            "stability": "external",
            "summary": "`CfnCapacityReservationFleet.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 856
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleet.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::CapacityReservationFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCapacityReservationFleetProps: ec2.CfnCapacityReservationFleetProps = {\n  allocationStrategy: 'allocationStrategy',\n  endDate: 'endDate',\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  instanceTypeSpecifications: [{\n    availabilityZone: 'availabilityZone',\n    availabilityZoneId: 'availabilityZoneId',\n    ebsOptimized: false,\n    instancePlatform: 'instancePlatform',\n    instanceType: 'instanceType',\n    priority: 123,\n    weight: 123,\n  }],\n  noRemoveEndDate: false,\n  removeEndDate: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n  totalTargetCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 462
      },
      "name": "CfnCapacityReservationFleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.AllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 468
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.EndDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 474
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.InstanceMatchCriteria`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 480
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.InstanceTypeSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 486
          },
          "name": "instanceTypeSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.NoRemoveEndDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 492
          },
          "name": "noRemoveEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.RemoveEndDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 498
          },
          "name": "removeEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 504
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 510
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.TotalTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 516
          },
          "name": "totalTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleetProps"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::CapacityReservation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCapacityReservationProps: ec2.CfnCapacityReservationProps = {\n  availabilityZone: 'availabilityZone',\n  instanceCount: 123,\n  instancePlatform: 'instancePlatform',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  ebsOptimized: false,\n  endDate: 'endDate',\n  endDateType: 'endDateType',\n  ephemeralStorage: false,\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  outPostArn: 'outPostArn',\n  placementGroupArn: 'placementGroupArn',\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17
      },
      "name": "CfnCapacityReservationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 47
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EndDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 53
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EndDateType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 59
          },
          "name": "endDateType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.EphemeralStorage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 65
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstanceCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstanceMatchCriteria`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 71
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstancePlatform`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 35
          },
          "name": "instancePlatform",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 41
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.OutPostArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 77
          },
          "name": "outPostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.PlacementGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 83
          },
          "name": "placementGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 89
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservation.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 95
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationProps"
    },
    "@aws-cdk/aws-ec2.CfnCarrierGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CarrierGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CarrierGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCarrierGateway = new ec2.CfnCarrierGateway(this, 'MyCfnCarrierGateway', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCarrierGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CarrierGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 1047
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCarrierGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 988
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1064
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1076
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCarrierGateway",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CarrierGatewayId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1016
          },
          "name": "attrCarrierGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1021
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1026
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 992
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1069
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CarrierGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1038
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CarrierGateway.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1032
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCarrierGateway"
    },
    "@aws-cdk/aws-ec2.CfnCarrierGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::CarrierGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCarrierGatewayProps: ec2.CfnCarrierGatewayProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCarrierGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 917
      },
      "name": "CfnCarrierGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CarrierGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 929
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CarrierGateway.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 923
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCarrierGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnAuthorizationRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnAuthorizationRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnAuthorizationRule = new ec2.CfnClientVpnAuthorizationRule(this, 'MyCfnClientVpnAuthorizationRule', {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  targetNetworkCidr: 'targetNetworkCidr',\n\n  // the properties below are optional\n  accessGroupId: 'accessGroupId',\n  authorizeAllGroups: false,\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnAuthorizationRule`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 1248
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1186
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1266
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1281
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnAuthorizationRule",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AccessGroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1227
          },
          "name": "accessGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AuthorizeAllGroups`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1233
          },
          "name": "authorizeAllGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1190
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1271
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.ClientVpnEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1215
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1239
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.TargetNetworkCidr`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1221
          },
          "name": "targetNetworkCidr",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnAuthorizationRule"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnAuthorizationRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnAuthorizationRuleProps: ec2.CfnClientVpnAuthorizationRuleProps = {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  targetNetworkCidr: 'targetNetworkCidr',\n\n  // the properties below are optional\n  accessGroupId: 'accessGroupId',\n  authorizeAllGroups: false,\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1087
      },
      "name": "CfnClientVpnAuthorizationRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AccessGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1105
          },
          "name": "accessGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AuthorizeAllGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1111
          },
          "name": "authorizeAllGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.ClientVpnEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1093
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1117
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.TargetNetworkCidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1099
          },
          "name": "targetNetworkCidr",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnAuthorizationRuleProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnEndpoint",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnEndpoint = new ec2.CfnClientVpnEndpoint(this, 'MyCfnClientVpnEndpoint', {\n  authenticationOptions: [{\n    type: 'type',\n\n    // the properties below are optional\n    activeDirectory: {\n      directoryId: 'directoryId',\n    },\n    federatedAuthentication: {\n      samlProviderArn: 'samlProviderArn',\n\n      // the properties below are optional\n      selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n    },\n    mutualAuthentication: {\n      clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n    },\n  }],\n  clientCidrBlock: 'clientCidrBlock',\n  connectionLogOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    cloudwatchLogGroup: 'cloudwatchLogGroup',\n    cloudwatchLogStream: 'cloudwatchLogStream',\n  },\n  serverCertificateArn: 'serverCertificateArn',\n\n  // the properties below are optional\n  clientConnectOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    lambdaFunctionArn: 'lambdaFunctionArn',\n  },\n  description: 'description',\n  dnsServers: ['dnsServers'],\n  securityGroupIds: ['securityGroupIds'],\n  selfServicePortal: 'selfServicePortal',\n  splitTunnel: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  transportProtocol: 'transportProtocol',\n  vpcId: 'vpcId',\n  vpnPort: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnEndpoint`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 1590
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1474
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1619
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1643
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnEndpoint",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.AuthenticationOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1503
          },
          "name": "authenticationOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1478
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1624
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ClientCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1509
          },
          "name": "clientCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientconnectoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ClientConnectOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1527
          },
          "name": "clientConnectOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1515
          },
          "name": "connectionLogOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1533
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.DnsServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1539
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-securitygroupids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.SecurityGroupIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1545
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-selfserviceportal"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.SelfServicePortal`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1551
          },
          "name": "selfServicePortal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ServerCertificateArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1521
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-splittunnel"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.SplitTunnel`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1557
          },
          "name": "splitTunnel",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1563
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TransportProtocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1569
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1575
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpnport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.VpnPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1581
          },
          "name": "vpnPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst certificateAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty = {\n  clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1653
      },
      "name": "CertificateAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html#cfn-ec2-clientvpnendpoint-certificateauthenticationrequest-clientrootcertificatechainarn"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty.ClientRootCertificateChainArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1658
          },
          "name": "clientRootCertificateChainArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst clientAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  activeDirectory: {\n    directoryId: 'directoryId',\n  },\n  federatedAuthentication: {\n    samlProviderArn: 'samlProviderArn',\n\n    // the properties below are optional\n    selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n  },\n  mutualAuthentication: {\n    clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1716
      },
      "name": "ClientAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-activedirectory"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ClientAuthenticationRequestProperty.ActiveDirectory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1721
          },
          "name": "activeDirectory",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-federatedauthentication"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ClientAuthenticationRequestProperty.FederatedAuthentication`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1726
          },
          "name": "federatedAuthentication",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-mutualauthentication"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ClientAuthenticationRequestProperty.MutualAuthentication`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1731
          },
          "name": "mutualAuthentication",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-type"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ClientAuthenticationRequestProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1736
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst clientConnectOptionsProperty: ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  lambdaFunctionArn: 'lambdaFunctionArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1803
      },
      "name": "ClientConnectOptionsProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-enabled"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ClientConnectOptionsProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1808
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-lambdafunctionarn"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ClientConnectOptionsProperty.LambdaFunctionArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1813
          },
          "name": "lambdaFunctionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.ClientConnectOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst connectionLogOptionsProperty: ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  cloudwatchLogGroup: 'cloudwatchLogGroup',\n  cloudwatchLogStream: 'cloudwatchLogStream',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1874
      },
      "name": "ConnectionLogOptionsProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchloggroup"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ConnectionLogOptionsProperty.CloudwatchLogGroup`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1879
          },
          "name": "cloudwatchLogGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchlogstream"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ConnectionLogOptionsProperty.CloudwatchLogStream`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1884
          },
          "name": "cloudwatchLogStream",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-enabled"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.ConnectionLogOptionsProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1889
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst directoryServiceAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty = {\n  directoryId: 'directoryId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1953
      },
      "name": "DirectoryServiceAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html#cfn-ec2-clientvpnendpoint-directoryserviceauthenticationrequest-directoryid"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty.DirectoryId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1958
          },
          "name": "directoryId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst federatedAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty = {\n  samlProviderArn: 'samlProviderArn',\n\n  // the properties below are optional\n  selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2016
      },
      "name": "FederatedAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html#cfn-ec2-clientvpnendpoint-federatedauthenticationrequest-samlproviderarn"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty.SAMLProviderArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2021
          },
          "name": "samlProviderArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html#cfn-ec2-clientvpnendpoint-federatedauthenticationrequest-selfservicesamlproviderarn"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty.SelfServiceSAMLProviderArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2026
          },
          "name": "selfServiceSamlProviderArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst tagSpecificationProperty: ec2.CfnClientVpnEndpoint.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2087
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2092
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-tags"
            },
            "stability": "external",
            "summary": "`CfnClientVpnEndpoint.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2097
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnEndpointProps: ec2.CfnClientVpnEndpointProps = {\n  authenticationOptions: [{\n    type: 'type',\n\n    // the properties below are optional\n    activeDirectory: {\n      directoryId: 'directoryId',\n    },\n    federatedAuthentication: {\n      samlProviderArn: 'samlProviderArn',\n\n      // the properties below are optional\n      selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n    },\n    mutualAuthentication: {\n      clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n    },\n  }],\n  clientCidrBlock: 'clientCidrBlock',\n  connectionLogOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    cloudwatchLogGroup: 'cloudwatchLogGroup',\n    cloudwatchLogStream: 'cloudwatchLogStream',\n  },\n  serverCertificateArn: 'serverCertificateArn',\n\n  // the properties below are optional\n  clientConnectOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    lambdaFunctionArn: 'lambdaFunctionArn',\n  },\n  description: 'description',\n  dnsServers: ['dnsServers'],\n  securityGroupIds: ['securityGroupIds'],\n  selfServicePortal: 'selfServicePortal',\n  splitTunnel: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  transportProtocol: 'transportProtocol',\n  vpcId: 'vpcId',\n  vpnPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1292
      },
      "name": "CfnClientVpnEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.AuthenticationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1298
          },
          "name": "authenticationOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ClientCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1304
          },
          "name": "clientCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientconnectoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ClientConnectOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1322
          },
          "name": "clientConnectOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1310
          },
          "name": "connectionLogOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1328
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.DnsServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1334
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-securitygroupids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1340
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-selfserviceportal"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.SelfServicePortal`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1346
          },
          "name": "selfServicePortal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ServerCertificateArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1316
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-splittunnel"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.SplitTunnel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1352
          },
          "name": "splitTunnel",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1358
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TransportProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1364
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1370
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpnport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnEndpoint.VpnPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1376
          },
          "name": "vpnPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpointProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnRoute = new ec2.CfnClientVpnRoute(this, 'MyCfnClientVpnRoute', {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  targetVpcSubnetId: 'targetVpcSubnetId',\n\n  // the properties below are optional\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 2307
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2251
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2325
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2339
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2255
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2330
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.ClientVpnEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2280
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2298
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2286
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.TargetVpcSubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2292
          },
          "name": "targetVpcSubnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnRoute"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnRouteProps: ec2.CfnClientVpnRouteProps = {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  targetVpcSubnetId: 'targetVpcSubnetId',\n\n  // the properties below are optional\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2160
      },
      "name": "CfnClientVpnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.ClientVpnEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2166
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2184
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2172
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnRoute.TargetVpcSubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2178
          },
          "name": "targetVpcSubnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnTargetNetworkAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnTargetNetworkAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnTargetNetworkAssociation = new ec2.CfnClientVpnTargetNetworkAssociation(this, 'MyCfnClientVpnTargetNetworkAssociation', {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnTargetNetworkAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 2466
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2422
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2481
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2493
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnTargetNetworkAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2426
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2486
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.ClientVpnEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2451
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2457
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnTargetNetworkAssociation"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnTargetNetworkAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnClientVpnTargetNetworkAssociationProps: ec2.CfnClientVpnTargetNetworkAssociationProps = {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2350
      },
      "name": "CfnClientVpnTargetNetworkAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.ClientVpnEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2356
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2362
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnTargetNetworkAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnCustomerGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CustomerGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CustomerGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCustomerGateway = new ec2.CfnCustomerGateway(this, 'MyCfnCustomerGateway', {\n  bgpAsn: 123,\n  ipAddress: 'ipAddress',\n  type: 'type',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCustomerGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CustomerGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 2651
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCustomerGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2595
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2669
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2683
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCustomerGateway",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.BgpAsn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2624
          },
          "name": "bgpAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2599
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2674
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.IpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2630
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2642
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2636
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCustomerGateway"
    },
    "@aws-cdk/aws-ec2.CfnCustomerGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::CustomerGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnCustomerGatewayProps: ec2.CfnCustomerGatewayProps = {\n  bgpAsn: 123,\n  ipAddress: 'ipAddress',\n  type: 'type',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCustomerGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2504
      },
      "name": "CfnCustomerGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.BgpAsn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2510
          },
          "name": "bgpAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.IpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2516
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2528
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CustomerGateway.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2522
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCustomerGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnDHCPOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::DHCPOptions",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::DHCPOptions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnDHCPOptions = new ec2.CfnDHCPOptions(this, 'MyCfnDHCPOptions', /* all optional props */ {\n  domainName: 'domainName',\n  domainNameServers: ['domainNameServers'],\n  netbiosNameServers: ['netbiosNameServers'],\n  netbiosNodeType: 123,\n  ntpServers: ['ntpServers'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptions",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::DHCPOptions`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 2873
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptionsProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2800
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2891
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2907
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDHCPOptions",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DhcpOptionsId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2828
          },
          "name": "attrDhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2804
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2896
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.DomainName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2834
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.DomainNameServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2840
          },
          "name": "domainNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNameServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2846
          },
          "name": "netbiosNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNodeType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2852
          },
          "name": "netbiosNodeType",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.NtpServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2858
          },
          "name": "ntpServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2864
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnDHCPOptions"
    },
    "@aws-cdk/aws-ec2.CfnDHCPOptionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::DHCPOptions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnDHCPOptionsProps: ec2.CfnDHCPOptionsProps = {\n  domainName: 'domainName',\n  domainNameServers: ['domainNameServers'],\n  netbiosNameServers: ['netbiosNameServers'],\n  netbiosNodeType: 123,\n  ntpServers: ['ntpServers'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2694
      },
      "name": "CfnDHCPOptionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2700
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.DomainNameServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2706
          },
          "name": "domainNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNameServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2712
          },
          "name": "netbiosNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNodeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2718
          },
          "name": "netbiosNodeType",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.NtpServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2724
          },
          "name": "ntpServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::DHCPOptions.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2730
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnDHCPOptionsProps"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EC2Fleet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EC2Fleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEC2Fleet = new ec2.CfnEC2Fleet(this, 'MyCfnEC2Fleet', {\n  launchTemplateConfigs: [{\n    launchTemplateSpecification: {\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n      version: 'version',\n    },\n    overrides: [{\n      availabilityZone: 'availabilityZone',\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      maxPrice: 'maxPrice',\n      placement: {\n        affinity: 'affinity',\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        hostId: 'hostId',\n        hostResourceGroupArn: 'hostResourceGroupArn',\n        partitionNumber: 123,\n        spreadDomain: 'spreadDomain',\n        tenancy: 'tenancy',\n      },\n      priority: 123,\n      subnetId: 'subnetId',\n      weightedCapacity: 123,\n    }],\n  }],\n  targetCapacitySpecification: {\n    totalTargetCapacity: 123,\n\n    // the properties below are optional\n    defaultTargetCapacityType: 'defaultTargetCapacityType',\n    onDemandTargetCapacity: 123,\n    spotTargetCapacity: 123,\n    targetCapacityUnitType: 'targetCapacityUnitType',\n  },\n\n  // the properties below are optional\n  context: 'context',\n  excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n  onDemandOptions: {\n    allocationStrategy: 'allocationStrategy',\n    capacityReservationOptions: {\n      usageStrategy: 'usageStrategy',\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  replaceUnhealthyInstances: false,\n  spotOptions: {\n    allocationStrategy: 'allocationStrategy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    maintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  terminateInstancesWithExpiration: false,\n  type: 'type',\n  validFrom: 'validFrom',\n  validUntil: 'validUntil',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EC2Fleet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 3189
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEC2FleetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3080
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3215
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3237
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEC2Fleet",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FleetId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3108
          },
          "name": "attrFleetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3084
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3220
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.Context`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3126
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3132
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.LaunchTemplateConfigs`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3114
          },
          "name": "launchTemplateConfigs",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.OnDemandOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3138
          },
          "name": "onDemandOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3144
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.SpotOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3150
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3156
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.TargetCapacitySpecification`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3120
          },
          "name": "targetCapacitySpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3162
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3168
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ValidFrom`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3174
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ValidUntil`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3180
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst acceleratorCountRequestProperty: ec2.CfnEC2Fleet.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3247
      },
      "name": "AcceleratorCountRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html#cfn-ec2-ec2fleet-acceleratorcountrequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.AcceleratorCountRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3252
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html#cfn-ec2-ec2fleet-acceleratorcountrequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.AcceleratorCountRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3257
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.AcceleratorCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst acceleratorTotalMemoryMiBRequestProperty: ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3317
      },
      "name": "AcceleratorTotalMemoryMiBRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html#cfn-ec2-ec2fleet-acceleratortotalmemorymibrequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3322
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html#cfn-ec2-ec2fleet-acceleratortotalmemorymibrequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3327
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst baselineEbsBandwidthMbpsRequestProperty: ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3387
      },
      "name": "BaselineEbsBandwidthMbpsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-ec2fleet-baselineebsbandwidthmbpsrequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3392
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-ec2fleet-baselineebsbandwidthmbpsrequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3397
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityRebalanceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst capacityRebalanceProperty: ec2.CfnEC2Fleet.CapacityRebalanceProperty = {\n  replacementStrategy: 'replacementStrategy',\n  terminationDelay: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityRebalanceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3457
      },
      "name": "CapacityRebalanceProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html#cfn-ec2-ec2fleet-capacityrebalance-replacementstrategy"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.CapacityRebalanceProperty.ReplacementStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3462
          },
          "name": "replacementStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html#cfn-ec2-ec2fleet-capacityrebalance-terminationdelay"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.CapacityRebalanceProperty.TerminationDelay`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3467
          },
          "name": "terminationDelay",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.CapacityRebalanceProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityreservationoptionsrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst capacityReservationOptionsRequestProperty: ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty = {\n  usageStrategy: 'usageStrategy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3527
      },
      "name": "CapacityReservationOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityreservationoptionsrequest.html#cfn-ec2-ec2fleet-capacityreservationoptionsrequest-usagestrategy"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.CapacityReservationOptionsRequestProperty.UsageStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3532
          },
          "name": "usageStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.CapacityReservationOptionsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst fleetLaunchTemplateConfigRequestProperty: ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty = {\n  launchTemplateSpecification: {\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n    version: 'version',\n  },\n  overrides: [{\n    availabilityZone: 'availabilityZone',\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    maxPrice: 'maxPrice',\n    placement: {\n      affinity: 'affinity',\n      availabilityZone: 'availabilityZone',\n      groupName: 'groupName',\n      hostId: 'hostId',\n      hostResourceGroupArn: 'hostResourceGroupArn',\n      partitionNumber: 123,\n      spreadDomain: 'spreadDomain',\n      tenancy: 'tenancy',\n    },\n    priority: 123,\n    subnetId: 'subnetId',\n    weightedCapacity: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3589
      },
      "name": "FleetLaunchTemplateConfigRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-launchtemplatespecification"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.LaunchTemplateSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3594
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-overrides"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.Overrides`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3599
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst fleetLaunchTemplateOverridesRequestProperty: ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty = {\n  availabilityZone: 'availabilityZone',\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  maxPrice: 'maxPrice',\n  placement: {\n    affinity: 'affinity',\n    availabilityZone: 'availabilityZone',\n    groupName: 'groupName',\n    hostId: 'hostId',\n    hostResourceGroupArn: 'hostResourceGroupArn',\n    partitionNumber: 123,\n    spreadDomain: 'spreadDomain',\n    tenancy: 'tenancy',\n  },\n  priority: 123,\n  subnetId: 'subnetId',\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3659
      },
      "name": "FleetLaunchTemplateOverridesRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-availabilityzone"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3664
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancerequirements"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.InstanceRequirements`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3669
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancetype"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3674
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-maxprice"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.MaxPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3679
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-placement"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.Placement`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3684
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.PlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-priority"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.Priority`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3689
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-subnetid"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3694
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-weightedcapacity"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.WeightedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3699
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst fleetLaunchTemplateSpecificationRequestProperty: ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty = {\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n  version: 'version',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3777
      },
      "name": "FleetLaunchTemplateSpecificationRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplateid"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3782
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplatename"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3787
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-version"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3792
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceRequirementsRequestProperty: ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3855
      },
      "name": "InstanceRequirementsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratorcount"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.AcceleratorCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3860
          },
          "name": "acceleratorCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratormanufacturers"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.AcceleratorManufacturers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3865
          },
          "name": "acceleratorManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratornames"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.AcceleratorNames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3870
          },
          "name": "acceleratorNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratortotalmemorymib"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.AcceleratorTotalMemoryMiB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3875
          },
          "name": "acceleratorTotalMemoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratortypes"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.AcceleratorTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3880
          },
          "name": "acceleratorTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-baremetal"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.BareMetal`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3885
          },
          "name": "bareMetal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-baselineebsbandwidthmbps"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.BaselineEbsBandwidthMbps`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3890
          },
          "name": "baselineEbsBandwidthMbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-burstableperformance"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.BurstablePerformance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3895
          },
          "name": "burstablePerformance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-cpumanufacturers"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.CpuManufacturers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3900
          },
          "name": "cpuManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-excludedinstancetypes"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.ExcludedInstanceTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3905
          },
          "name": "excludedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-instancegenerations"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.InstanceGenerations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3910
          },
          "name": "instanceGenerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-localstorage"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.LocalStorage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3915
          },
          "name": "localStorage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-localstoragetypes"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.LocalStorageTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3920
          },
          "name": "localStorageTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-memorygibpervcpu"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.MemoryGiBPerVCpu`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3925
          },
          "name": "memoryGiBPerVCpu",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-memorymib"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.MemoryMiB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3930
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-networkinterfacecount"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.NetworkInterfaceCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3935
          },
          "name": "networkInterfaceCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-ondemandmaxpricepercentageoverlowestprice"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.OnDemandMaxPricePercentageOverLowestPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3940
          },
          "name": "onDemandMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-requirehibernatesupport"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.RequireHibernateSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3945
          },
          "name": "requireHibernateSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-spotmaxpricepercentageoverlowestprice"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.SpotMaxPricePercentageOverLowestPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3950
          },
          "name": "spotMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-totallocalstoragegb"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.TotalLocalStorageGB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3955
          },
          "name": "totalLocalStorageGb",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-vcpucount"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.InstanceRequirementsRequestProperty.VCpuCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3960
          },
          "name": "vCpuCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.InstanceRequirementsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.MaintenanceStrategiesProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-maintenancestrategies.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst maintenanceStrategiesProperty: ec2.CfnEC2Fleet.MaintenanceStrategiesProperty = {\n  capacityRebalance: {\n    replacementStrategy: 'replacementStrategy',\n    terminationDelay: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MaintenanceStrategiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4077
      },
      "name": "MaintenanceStrategiesProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-maintenancestrategies.html#cfn-ec2-ec2fleet-maintenancestrategies-capacityrebalance"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.MaintenanceStrategiesProperty.CapacityRebalance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4082
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityRebalanceProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.MaintenanceStrategiesProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst memoryGiBPerVCpuRequestProperty: ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4139
      },
      "name": "MemoryGiBPerVCpuRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html#cfn-ec2-ec2fleet-memorygibpervcpurequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4144
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html#cfn-ec2-ec2fleet-memorygibpervcpurequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4149
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst memoryMiBRequestProperty: ec2.CfnEC2Fleet.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4209
      },
      "name": "MemoryMiBRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html#cfn-ec2-ec2fleet-memorymibrequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.MemoryMiBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4214
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html#cfn-ec2-ec2fleet-memorymibrequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.MemoryMiBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4219
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.MemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst networkInterfaceCountRequestProperty: ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4279
      },
      "name": "NetworkInterfaceCountRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html#cfn-ec2-ec2fleet-networkinterfacecountrequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.NetworkInterfaceCountRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4284
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html#cfn-ec2-ec2fleet-networkinterfacecountrequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.NetworkInterfaceCountRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4289
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.NetworkInterfaceCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst onDemandOptionsRequestProperty: ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty = {\n  allocationStrategy: 'allocationStrategy',\n  capacityReservationOptions: {\n    usageStrategy: 'usageStrategy',\n  },\n  maxTotalPrice: 'maxTotalPrice',\n  minTargetCapacity: 123,\n  singleAvailabilityZone: false,\n  singleInstanceType: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4349
      },
      "name": "OnDemandOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-allocationstrategy"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.OnDemandOptionsRequestProperty.AllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4354
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-capacityreservationoptions"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.OnDemandOptionsRequestProperty.CapacityReservationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4359
          },
          "name": "capacityReservationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-maxtotalprice"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.OnDemandOptionsRequestProperty.MaxTotalPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4364
          },
          "name": "maxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-mintargetcapacity"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.OnDemandOptionsRequestProperty.MinTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4369
          },
          "name": "minTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-singleavailabilityzone"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.OnDemandOptionsRequestProperty.SingleAvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4374
          },
          "name": "singleAvailabilityZone",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-singleinstancetype"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.OnDemandOptionsRequestProperty.SingleInstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4379
          },
          "name": "singleInstanceType",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.OnDemandOptionsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.PlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst placementProperty: ec2.CfnEC2Fleet.PlacementProperty = {\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  groupName: 'groupName',\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  partitionNumber: 123,\n  spreadDomain: 'spreadDomain',\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.PlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4451
      },
      "name": "PlacementProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-affinity"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.Affinity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4456
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-availabilityzone"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4461
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-groupname"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4466
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-hostid"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.HostId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4471
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-hostresourcegrouparn"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.HostResourceGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4476
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-partitionnumber"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.PartitionNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4481
          },
          "name": "partitionNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-spreaddomain"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.SpreadDomain`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4486
          },
          "name": "spreadDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-tenancy"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.PlacementProperty.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4491
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.PlacementProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotOptionsRequestProperty: ec2.CfnEC2Fleet.SpotOptionsRequestProperty = {\n  allocationStrategy: 'allocationStrategy',\n  instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n  instancePoolsToUseCount: 123,\n  maintenanceStrategies: {\n    capacityRebalance: {\n      replacementStrategy: 'replacementStrategy',\n      terminationDelay: 123,\n    },\n  },\n  maxTotalPrice: 'maxTotalPrice',\n  minTargetCapacity: 123,\n  singleAvailabilityZone: false,\n  singleInstanceType: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4569
      },
      "name": "SpotOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-allocationstrategy"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.AllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4574
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instanceinterruptionbehavior"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.InstanceInterruptionBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4579
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instancepoolstousecount"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.InstancePoolsToUseCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4584
          },
          "name": "instancePoolsToUseCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maintenancestrategies"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.MaintenanceStrategies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4589
          },
          "name": "maintenanceStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MaintenanceStrategiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maxtotalprice"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.MaxTotalPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4594
          },
          "name": "maxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-mintargetcapacity"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.MinTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4599
          },
          "name": "minTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleavailabilityzone"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.SingleAvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4604
          },
          "name": "singleAvailabilityZone",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleinstancetype"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.SingleInstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4609
          },
          "name": "singleInstanceType",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.SpotOptionsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst tagSpecificationProperty: ec2.CfnEC2Fleet.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4687
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4692
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-tags"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4697
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst targetCapacitySpecificationRequestProperty: ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty = {\n  totalTargetCapacity: 123,\n\n  // the properties below are optional\n  defaultTargetCapacityType: 'defaultTargetCapacityType',\n  onDemandTargetCapacity: 123,\n  spotTargetCapacity: 123,\n  targetCapacityUnitType: 'targetCapacityUnitType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4757
      },
      "name": "TargetCapacitySpecificationRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-defaulttargetcapacitytype"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.DefaultTargetCapacityType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4762
          },
          "name": "defaultTargetCapacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-ondemandtargetcapacity"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.OnDemandTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4767
          },
          "name": "onDemandTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-spottargetcapacity"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.SpotTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4772
          },
          "name": "spotTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-targetcapacityunittype"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.TargetCapacityUnitType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4777
          },
          "name": "targetCapacityUnitType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-totaltargetcapacity"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.TotalTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4782
          },
          "name": "totalTargetCapacity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst totalLocalStorageGBRequestProperty: ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4852
      },
      "name": "TotalLocalStorageGBRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html#cfn-ec2-ec2fleet-totallocalstoragegbrequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TotalLocalStorageGBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4857
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html#cfn-ec2-ec2fleet-totallocalstoragegbrequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.TotalLocalStorageGBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4862
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.TotalLocalStorageGBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vCpuCountRangeRequestProperty: ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4922
      },
      "name": "VCpuCountRangeRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html#cfn-ec2-ec2fleet-vcpucountrangerequest-max"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.VCpuCountRangeRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4927
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html#cfn-ec2-ec2fleet-vcpucountrangerequest-min"
            },
            "stability": "external",
            "summary": "`CfnEC2Fleet.VCpuCountRangeRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4932
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.VCpuCountRangeRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2FleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::EC2Fleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEC2FleetProps: ec2.CfnEC2FleetProps = {\n  launchTemplateConfigs: [{\n    launchTemplateSpecification: {\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n      version: 'version',\n    },\n    overrides: [{\n      availabilityZone: 'availabilityZone',\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      maxPrice: 'maxPrice',\n      placement: {\n        affinity: 'affinity',\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        hostId: 'hostId',\n        hostResourceGroupArn: 'hostResourceGroupArn',\n        partitionNumber: 123,\n        spreadDomain: 'spreadDomain',\n        tenancy: 'tenancy',\n      },\n      priority: 123,\n      subnetId: 'subnetId',\n      weightedCapacity: 123,\n    }],\n  }],\n  targetCapacitySpecification: {\n    totalTargetCapacity: 123,\n\n    // the properties below are optional\n    defaultTargetCapacityType: 'defaultTargetCapacityType',\n    onDemandTargetCapacity: 123,\n    spotTargetCapacity: 123,\n    targetCapacityUnitType: 'targetCapacityUnitType',\n  },\n\n  // the properties below are optional\n  context: 'context',\n  excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n  onDemandOptions: {\n    allocationStrategy: 'allocationStrategy',\n    capacityReservationOptions: {\n      usageStrategy: 'usageStrategy',\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  replaceUnhealthyInstances: false,\n  spotOptions: {\n    allocationStrategy: 'allocationStrategy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    maintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  terminateInstancesWithExpiration: false,\n  type: 'type',\n  validFrom: 'validFrom',\n  validUntil: 'validUntil',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2FleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2918
      },
      "name": "CfnEC2FleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.Context`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2936
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2942
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.LaunchTemplateConfigs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2924
          },
          "name": "launchTemplateConfigs",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.OnDemandOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2948
          },
          "name": "onDemandOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2954
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.SpotOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2960
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2966
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.TargetCapacitySpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2930
          },
          "name": "targetCapacitySpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2972
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2978
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ValidFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2984
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EC2Fleet.ValidUntil`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2990
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2FleetProps"
    },
    "@aws-cdk/aws-ec2.CfnEIP": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EIP",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html"
        },
        "example": "declare const instance: ec2.Instance;\n\nconst elasticIp = new ec2.CfnEIP(this, 'EIP', {\n  domain: 'vpc',\n  instanceId: instance.instanceId,\n});\n\ndeclare const myZone: route53.HostedZone;\nnew route53.ARecord(this, 'ARecord', {\n  zone: myZone,\n  target: route53.RecordTarget.fromIpAddresses(elasticIp.ref),\n});",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EIP`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIP",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EIP`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 5142
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEIPProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5081
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5158
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5172
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEIP",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AllocationId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5109
          },
          "name": "attrAllocationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5085
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5163
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.Domain`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5115
          },
          "name": "domain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5121
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.PublicIpv4Pool`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5127
          },
          "name": "publicIpv4Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5133
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIP"
    },
    "@aws-cdk/aws-ec2.CfnEIPAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EIPAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EIPAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEIPAssociation = new ec2.CfnEIPAssociation(this, 'MyCfnEIPAssociation', /* all optional props */ {\n  allocationId: 'allocationId',\n  eip: 'eip',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EIPAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 5342
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5280
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5358
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5373
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEIPAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.AllocationId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5309
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5284
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5363
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.EIP`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5315
          },
          "name": "eip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5321
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5327
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.PrivateIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5333
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIPAssociation"
    },
    "@aws-cdk/aws-ec2.CfnEIPAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::EIPAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEIPAssociationProps: ec2.CfnEIPAssociationProps = {\n  allocationId: 'allocationId',\n  eip: 'eip',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5183
      },
      "name": "CfnEIPAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.AllocationId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5189
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.EIP`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5195
          },
          "name": "eip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5201
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5207
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIPAssociation.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5213
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIPAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnEIPProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html"
        },
        "example": "declare const instance: ec2.Instance;\n\nconst elasticIp = new ec2.CfnEIP(this, 'EIP', {\n  domain: 'vpc',\n  instanceId: instance.instanceId,\n});\n\ndeclare const myZone: route53.HostedZone;\nnew route53.ARecord(this, 'ARecord', {\n  zone: myZone,\n  target: route53.RecordTarget.fromIpAddresses(elasticIp.ref),\n});",
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::EIP`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4993
      },
      "name": "CfnEIPProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.Domain`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4999
          },
          "name": "domain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5005
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.PublicIpv4Pool`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5011
          },
          "name": "publicIpv4Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EIP.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5017
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIPProps"
    },
    "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EgressOnlyInternetGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EgressOnlyInternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEgressOnlyInternetGateway = new ec2.CfnEgressOnlyInternetGateway(this, 'MyCfnEgressOnlyInternetGateway', {\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EgressOnlyInternetGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 5489
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5446
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5503
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5514
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEgressOnlyInternetGateway",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5474
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5450
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5508
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EgressOnlyInternetGateway.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5480
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEgressOnlyInternetGateway"
    },
    "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::EgressOnlyInternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEgressOnlyInternetGatewayProps: ec2.CfnEgressOnlyInternetGatewayProps = {\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5384
      },
      "name": "CfnEgressOnlyInternetGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EgressOnlyInternetGateway.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5390
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEgressOnlyInternetGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EnclaveCertificateIamRoleAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EnclaveCertificateIamRoleAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEnclaveCertificateIamRoleAssociation = new ec2.CfnEnclaveCertificateIamRoleAssociation(this, 'MyCfnEnclaveCertificateIamRoleAssociation', {\n  certificateArn: 'certificateArn',\n  roleArn: 'roleArn',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EnclaveCertificateIamRoleAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 5656
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5597
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5674
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5686
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEnclaveCertificateIamRoleAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CertificateS3BucketName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5625
          },
          "name": "attrCertificateS3BucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CertificateS3ObjectKey"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5630
          },
          "name": "attrCertificateS3ObjectKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EncryptionKmsKeyId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5635
          },
          "name": "attrEncryptionKmsKeyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-certificatearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EnclaveCertificateIamRoleAssociation.CertificateArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5641
          },
          "name": "certificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5601
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5679
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-rolearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EnclaveCertificateIamRoleAssociation.RoleArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5647
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEnclaveCertificateIamRoleAssociation"
    },
    "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::EnclaveCertificateIamRoleAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnEnclaveCertificateIamRoleAssociationProps: ec2.CfnEnclaveCertificateIamRoleAssociationProps = {\n  certificateArn: 'certificateArn',\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5525
      },
      "name": "CfnEnclaveCertificateIamRoleAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-certificatearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EnclaveCertificateIamRoleAssociation.CertificateArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5531
          },
          "name": "certificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-rolearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::EnclaveCertificateIamRoleAssociation.RoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5537
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEnclaveCertificateIamRoleAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnFlowLog": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::FlowLog",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::FlowLog`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnFlowLog = new ec2.CfnFlowLog(this, 'MyCfnFlowLog', {\n  resourceId: 'resourceId',\n  resourceType: 'resourceType',\n  trafficType: 'trafficType',\n\n  // the properties below are optional\n  deliverLogsPermissionArn: 'deliverLogsPermissionArn',\n  logDestination: 'logDestination',\n  logDestinationType: 'logDestinationType',\n  logFormat: 'logFormat',\n  logGroupName: 'logGroupName',\n  maxAggregationInterval: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnFlowLog",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::FlowLog`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 5939
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnFlowLogProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5842
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5964
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5984
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFlowLog",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5870
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5846
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5969
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.DeliverLogsPermissionArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5894
          },
          "name": "deliverLogsPermissionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogDestination`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5900
          },
          "name": "logDestination",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogDestinationType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5906
          },
          "name": "logDestinationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogFormat`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5912
          },
          "name": "logFormat",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogGroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5918
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.MaxAggregationInterval`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5924
          },
          "name": "maxAggregationInterval",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.ResourceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5876
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.ResourceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5882
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5930
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.TrafficType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5888
          },
          "name": "trafficType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnFlowLog"
    },
    "@aws-cdk/aws-ec2.CfnFlowLogProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::FlowLog`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnFlowLogProps: ec2.CfnFlowLogProps = {\n  resourceId: 'resourceId',\n  resourceType: 'resourceType',\n  trafficType: 'trafficType',\n\n  // the properties below are optional\n  deliverLogsPermissionArn: 'deliverLogsPermissionArn',\n  logDestination: 'logDestination',\n  logDestinationType: 'logDestinationType',\n  logFormat: 'logFormat',\n  logGroupName: 'logGroupName',\n  maxAggregationInterval: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnFlowLogProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5697
      },
      "name": "CfnFlowLogProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.DeliverLogsPermissionArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5721
          },
          "name": "deliverLogsPermissionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogDestination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5727
          },
          "name": "logDestination",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogDestinationType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5733
          },
          "name": "logDestinationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogFormat`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5739
          },
          "name": "logFormat",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.LogGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5745
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.MaxAggregationInterval`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5751
          },
          "name": "maxAggregationInterval",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.ResourceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5703
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5709
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5757
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::FlowLog.TrafficType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5715
          },
          "name": "trafficType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnFlowLogProps"
    },
    "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::GatewayRouteTableAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::GatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnGatewayRouteTableAssociation = new ec2.CfnGatewayRouteTableAssociation(this, 'MyCfnGatewayRouteTableAssociation', {\n  gatewayId: 'gatewayId',\n  routeTableId: 'routeTableId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::GatewayRouteTableAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 6116
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6067
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6132
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6144
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnGatewayRouteTableAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AssociationId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6095
          },
          "name": "attrAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6071
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6137
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-gatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::GatewayRouteTableAssociation.GatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6101
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-routetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::GatewayRouteTableAssociation.RouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6107
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnGatewayRouteTableAssociation"
    },
    "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::GatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnGatewayRouteTableAssociationProps: ec2.CfnGatewayRouteTableAssociationProps = {\n  gatewayId: 'gatewayId',\n  routeTableId: 'routeTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5995
      },
      "name": "CfnGatewayRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-gatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::GatewayRouteTableAssociation.GatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6001
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-routetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::GatewayRouteTableAssociation.RouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6007
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnGatewayRouteTableAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnHost": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Host",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Host`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnHost = new ec2.CfnHost(this, 'MyCfnHost', {\n  availabilityZone: 'availabilityZone',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  autoPlacement: 'autoPlacement',\n  hostRecovery: 'hostRecovery',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnHost",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Host`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 6301
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnHostProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6245
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6318
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6332
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHost",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.AutoPlacement`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6286
          },
          "name": "autoPlacement",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6274
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6249
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6323
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.HostRecovery`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6292
          },
          "name": "hostRecovery",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.InstanceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6280
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnHost"
    },
    "@aws-cdk/aws-ec2.CfnHostProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::Host`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnHostProps: ec2.CfnHostProps = {\n  availabilityZone: 'availabilityZone',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  autoPlacement: 'autoPlacement',\n  hostRecovery: 'hostRecovery',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnHostProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6155
      },
      "name": "CfnHostProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.AutoPlacement`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6173
          },
          "name": "autoPlacement",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6161
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.HostRecovery`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6179
          },
          "name": "hostRecovery",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Host.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6167
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnHostProps"
    },
    "@aws-cdk/aws-ec2.CfnInstance": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Instance",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Instance`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnInstance = new ec2.CfnInstance(this, 'MyCfnInstance', /* all optional props */ {\n  additionalInfo: 'additionalInfo',\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      kmsKeyId: 'kmsKeyId',\n      snapshotId: 'snapshotId',\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: { },\n    virtualName: 'virtualName',\n  }],\n  cpuOptions: {\n    coreCount: 123,\n    threadsPerCore: 123,\n  },\n  creditSpecification: {\n    cpuCredits: 'cpuCredits',\n  },\n  disableApiTermination: false,\n  ebsOptimized: false,\n  elasticGpuSpecifications: [{\n    type: 'type',\n  }],\n  elasticInferenceAccelerators: [{\n    type: 'type',\n\n    // the properties below are optional\n    count: 123,\n  }],\n  enclaveOptions: {\n    enabled: false,\n  },\n  hibernationOptions: {\n    configured: false,\n  },\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  iamInstanceProfile: 'iamInstanceProfile',\n  imageId: 'imageId',\n  instanceInitiatedShutdownBehavior: 'instanceInitiatedShutdownBehavior',\n  instanceType: 'instanceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  licenseSpecifications: [{\n    licenseConfigurationArn: 'licenseConfigurationArn',\n  }],\n  monitoring: false,\n  networkInterfaces: [{\n    deviceIndex: 'deviceIndex',\n\n    // the properties below are optional\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    groupSet: ['groupSet'],\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddress: 'privateIpAddress',\n    privateIpAddresses: [{\n      primary: false,\n      privateIpAddress: 'privateIpAddress',\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placementGroupName: 'placementGroupName',\n  privateIpAddress: 'privateIpAddress',\n  ramdiskId: 'ramdiskId',\n  securityGroupIds: ['securityGroupIds'],\n  securityGroups: ['securityGroups'],\n  sourceDestCheck: false,\n  ssmAssociations: [{\n    documentName: 'documentName',\n\n    // the properties below are optional\n    associationParameters: [{\n      key: 'key',\n      value: ['value'],\n    }],\n  }],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tenancy: 'tenancy',\n  userData: 'userData',\n  volumes: [{\n    device: 'device',\n    volumeId: 'volumeId',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Instance`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 7022
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6737
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7076
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7124
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInstance",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.AdditionalInfo`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6791
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Affinity`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6797
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6765
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrivateDnsName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6770
          },
          "name": "attrPrivateDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrivateIp"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6775
          },
          "name": "attrPrivateIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicDnsName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6780
          },
          "name": "attrPublicDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicIp"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6785
          },
          "name": "attrPublicIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6803
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.BlockDeviceMappings`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6809
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6741
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7081
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-cpuoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.CpuOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6815
          },
          "name": "cpuOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.CreditSpecification`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6821
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.DisableApiTermination`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6827
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.EbsOptimized`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6833
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.ElasticGpuSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6839
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.ElasticInferenceAccelerators`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6845
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-enclaveoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.EnclaveOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6851
          },
          "name": "enclaveOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hibernationoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.HibernationOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6857
          },
          "name": "hibernationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.HostId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6863
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.HostResourceGroupArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6869
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.IamInstanceProfile`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6875
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.ImageId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6881
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.InstanceInitiatedShutdownBehavior`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6887
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.InstanceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6893
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Ipv6AddressCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6899
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Ipv6Addresses`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6905
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.KernelId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6911
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.KeyName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6917
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.LaunchTemplate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6923
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.LicenseSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6929
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Monitoring`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6935
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.NetworkInterfaces`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6941
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.PlacementGroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6947
          },
          "name": "placementGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.PrivateIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6953
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.RamdiskId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6959
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SecurityGroupIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6965
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SecurityGroups`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6971
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SourceDestCheck`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6977
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SsmAssociations`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6983
          },
          "name": "ssmAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6989
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6995
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Tenancy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7001
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.UserData`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7007
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Volumes`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7013
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance"
    },
    "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst associationParameterProperty: ec2.CfnInstance.AssociationParameterProperty = {\n  key: 'key',\n  value: ['value'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7134
      },
      "name": "AssociationParameterProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-key"
            },
            "stability": "external",
            "summary": "`CfnInstance.AssociationParameterProperty.Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7139
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-value"
            },
            "stability": "external",
            "summary": "`CfnInstance.AssociationParameterProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7144
          },
          "name": "value",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.AssociationParameterProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst blockDeviceMappingProperty: ec2.CfnInstance.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    kmsKeyId: 'kmsKeyId',\n    snapshotId: 'snapshotId',\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: { },\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7206
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-devicename"
            },
            "stability": "external",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7211
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-ebs"
            },
            "stability": "external",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.Ebs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7216
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-nodevice"
            },
            "stability": "external",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.NoDevice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7221
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-virtualname"
            },
            "stability": "external",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.VirtualName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7226
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cpuOptionsProperty: ec2.CfnInstance.CpuOptionsProperty = {\n  coreCount: 123,\n  threadsPerCore: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7293
      },
      "name": "CpuOptionsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html#cfn-ec2-instance-cpuoptions-corecount"
            },
            "stability": "external",
            "summary": "`CfnInstance.CpuOptionsProperty.CoreCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7298
          },
          "name": "coreCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html#cfn-ec2-instance-cpuoptions-threadspercore"
            },
            "stability": "external",
            "summary": "`CfnInstance.CpuOptionsProperty.ThreadsPerCore`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7303
          },
          "name": "threadsPerCore",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.CpuOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst creditSpecificationProperty: ec2.CfnInstance.CreditSpecificationProperty = {\n  cpuCredits: 'cpuCredits',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7363
      },
      "name": "CreditSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html#cfn-ec2-instance-creditspecification-cpucredits"
            },
            "stability": "external",
            "summary": "`CfnInstance.CreditSpecificationProperty.CPUCredits`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7368
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.CreditSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ebsProperty: ec2.CfnInstance.EbsProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.EbsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7425
      },
      "name": "EbsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-deleteontermination"
            },
            "stability": "external",
            "summary": "`CfnInstance.EbsProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7430
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-encrypted"
            },
            "stability": "external",
            "summary": "`CfnInstance.EbsProperty.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7435
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-iops"
            },
            "stability": "external",
            "summary": "`CfnInstance.EbsProperty.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7440
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-instance-ebs-kmskeyid"
            },
            "stability": "external",
            "summary": "`CfnInstance.EbsProperty.KmsKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7445
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-snapshotid"
            },
            "stability": "external",
            "summary": "`CfnInstance.EbsProperty.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7450
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumesize"
            },
            "stability": "external",
            "summary": "`CfnInstance.EbsProperty.VolumeSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7455
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumetype"
            },
            "stability": "external",
            "summary": "`CfnInstance.EbsProperty.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7460
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.EbsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst elasticGpuSpecificationProperty: ec2.CfnInstance.ElasticGpuSpecificationProperty = {\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7535
      },
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html#cfn-ec2-instance-elasticgpuspecification-type"
            },
            "stability": "external",
            "summary": "`CfnInstance.ElasticGpuSpecificationProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7540
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.ElasticGpuSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst elasticInferenceAcceleratorProperty: ec2.CfnInstance.ElasticInferenceAcceleratorProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  count: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7598
      },
      "name": "ElasticInferenceAcceleratorProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-count"
            },
            "stability": "external",
            "summary": "`CfnInstance.ElasticInferenceAcceleratorProperty.Count`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7603
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-type"
            },
            "stability": "external",
            "summary": "`CfnInstance.ElasticInferenceAcceleratorProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7608
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.ElasticInferenceAcceleratorProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-enclaveoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst enclaveOptionsProperty: ec2.CfnInstance.EnclaveOptionsProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7669
      },
      "name": "EnclaveOptionsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-enclaveoptions.html#cfn-ec2-instance-enclaveoptions-enabled"
            },
            "stability": "external",
            "summary": "`CfnInstance.EnclaveOptionsProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7674
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.EnclaveOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-hibernationoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst hibernationOptionsProperty: ec2.CfnInstance.HibernationOptionsProperty = {\n  configured: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7731
      },
      "name": "HibernationOptionsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-hibernationoptions.html#cfn-ec2-instance-hibernationoptions-configured"
            },
            "stability": "external",
            "summary": "`CfnInstance.HibernationOptionsProperty.Configured`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7736
          },
          "name": "configured",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.HibernationOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceIpv6AddressProperty: ec2.CfnInstance.InstanceIpv6AddressProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7793
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html#cfn-ec2-instance-instanceipv6address-ipv6address"
            },
            "stability": "external",
            "summary": "`CfnInstance.InstanceIpv6AddressProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7798
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.InstanceIpv6AddressProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateSpecificationProperty: ec2.CfnInstance.LaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7856
      },
      "name": "LaunchTemplateSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplateid"
            },
            "stability": "external",
            "summary": "`CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7861
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplatename"
            },
            "stability": "external",
            "summary": "`CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7866
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-version"
            },
            "stability": "external",
            "summary": "`CfnInstance.LaunchTemplateSpecificationProperty.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7871
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.LaunchTemplateSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst licenseSpecificationProperty: ec2.CfnInstance.LicenseSpecificationProperty = {\n  licenseConfigurationArn: 'licenseConfigurationArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7935
      },
      "name": "LicenseSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html#cfn-ec2-instance-licensespecification-licenseconfigurationarn"
            },
            "stability": "external",
            "summary": "`CfnInstance.LicenseSpecificationProperty.LicenseConfigurationArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7940
          },
          "name": "licenseConfigurationArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.LicenseSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst networkInterfaceProperty: ec2.CfnInstance.NetworkInterfaceProperty = {\n  deviceIndex: 'deviceIndex',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  deleteOnTermination: false,\n  description: 'description',\n  groupSet: ['groupSet'],\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7998
      },
      "name": "NetworkInterfaceProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-associatepubip"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.AssociatePublicIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8003
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-delete"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8008
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-description"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8013
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-deviceindex"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8018
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-groupset"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.GroupSet`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8023
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresscount"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8028
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresses"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8033
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-network-iface"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8038
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddress"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8043
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddresses"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8048
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-secondprivateip"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8053
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-subnetid"
            },
            "stability": "external",
            "summary": "`CfnInstance.NetworkInterfaceProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8058
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.NetworkInterfaceProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-nodevice.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst noDeviceProperty: ec2.CfnInstance.NoDeviceProperty = { };"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8149
      },
      "name": "NoDeviceProperty",
      "namespace": "CfnInstance",
      "symbolId": "lib/ec2.generated:CfnInstance.NoDeviceProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst privateIpAddressSpecificationProperty: ec2.CfnInstance.PrivateIpAddressSpecificationProperty = {\n  primary: false,\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8203
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary"
            },
            "stability": "external",
            "summary": "`CfnInstance.PrivateIpAddressSpecificationProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8208
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress"
            },
            "stability": "external",
            "summary": "`CfnInstance.PrivateIpAddressSpecificationProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8213
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.PrivateIpAddressSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ssmAssociationProperty: ec2.CfnInstance.SsmAssociationProperty = {\n  documentName: 'documentName',\n\n  // the properties below are optional\n  associationParameters: [{\n    key: 'key',\n    value: ['value'],\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8275
      },
      "name": "SsmAssociationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-associationparameters"
            },
            "stability": "external",
            "summary": "`CfnInstance.SsmAssociationProperty.AssociationParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8280
          },
          "name": "associationParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-documentname"
            },
            "stability": "external",
            "summary": "`CfnInstance.SsmAssociationProperty.DocumentName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8285
          },
          "name": "documentName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.SsmAssociationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst volumeProperty: ec2.CfnInstance.VolumeProperty = {\n  device: 'device',\n  volumeId: 'volumeId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8346
      },
      "name": "VolumeProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-device"
            },
            "stability": "external",
            "summary": "`CfnInstance.VolumeProperty.Device`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8351
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-volumeid"
            },
            "stability": "external",
            "summary": "`CfnInstance.VolumeProperty.VolumeId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8356
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.VolumeProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstanceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::Instance`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnInstanceProps: ec2.CfnInstanceProps = {\n  additionalInfo: 'additionalInfo',\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      kmsKeyId: 'kmsKeyId',\n      snapshotId: 'snapshotId',\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: { },\n    virtualName: 'virtualName',\n  }],\n  cpuOptions: {\n    coreCount: 123,\n    threadsPerCore: 123,\n  },\n  creditSpecification: {\n    cpuCredits: 'cpuCredits',\n  },\n  disableApiTermination: false,\n  ebsOptimized: false,\n  elasticGpuSpecifications: [{\n    type: 'type',\n  }],\n  elasticInferenceAccelerators: [{\n    type: 'type',\n\n    // the properties below are optional\n    count: 123,\n  }],\n  enclaveOptions: {\n    enabled: false,\n  },\n  hibernationOptions: {\n    configured: false,\n  },\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  iamInstanceProfile: 'iamInstanceProfile',\n  imageId: 'imageId',\n  instanceInitiatedShutdownBehavior: 'instanceInitiatedShutdownBehavior',\n  instanceType: 'instanceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  licenseSpecifications: [{\n    licenseConfigurationArn: 'licenseConfigurationArn',\n  }],\n  monitoring: false,\n  networkInterfaces: [{\n    deviceIndex: 'deviceIndex',\n\n    // the properties below are optional\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    groupSet: ['groupSet'],\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddress: 'privateIpAddress',\n    privateIpAddresses: [{\n      primary: false,\n      privateIpAddress: 'privateIpAddress',\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placementGroupName: 'placementGroupName',\n  privateIpAddress: 'privateIpAddress',\n  ramdiskId: 'ramdiskId',\n  securityGroupIds: ['securityGroupIds'],\n  securityGroups: ['securityGroups'],\n  sourceDestCheck: false,\n  ssmAssociations: [{\n    documentName: 'documentName',\n\n    // the properties below are optional\n    associationParameters: [{\n      key: 'key',\n      value: ['value'],\n    }],\n  }],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tenancy: 'tenancy',\n  userData: 'userData',\n  volumes: [{\n    device: 'device',\n    volumeId: 'volumeId',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6343
      },
      "name": "CfnInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.AdditionalInfo`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6349
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Affinity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6355
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6361
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.BlockDeviceMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6367
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-cpuoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.CpuOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6373
          },
          "name": "cpuOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.CreditSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6379
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.DisableApiTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6385
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6391
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.ElasticGpuSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6397
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.ElasticInferenceAccelerators`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6403
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-enclaveoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.EnclaveOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6409
          },
          "name": "enclaveOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hibernationoptions"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.HibernationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6415
          },
          "name": "hibernationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.HostId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6421
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.HostResourceGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6427
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.IamInstanceProfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6433
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.ImageId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6439
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.InstanceInitiatedShutdownBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6445
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6451
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6457
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6463
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.KernelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6469
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.KeyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6475
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.LaunchTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6481
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.LicenseSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6487
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Monitoring`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6493
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.NetworkInterfaces`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6499
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.PlacementGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6505
          },
          "name": "placementGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6511
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.RamdiskId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6517
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6523
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6529
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SourceDestCheck`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6535
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SsmAssociations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6541
          },
          "name": "ssmAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6547
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6553
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6559
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.UserData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6565
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Instance.Volumes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6571
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstanceProps"
    },
    "@aws-cdk/aws-ec2.CfnInternetGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::InternetGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::InternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnInternetGateway = new ec2.CfnInternetGateway(this, 'MyCfnInternetGateway', /* all optional props */ {\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInternetGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::InternetGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 8523
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnInternetGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8480
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8536
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8547
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInternetGateway",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "InternetGatewayId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8508
          },
          "name": "attrInternetGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8484
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8541
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::InternetGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8514
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInternetGateway"
    },
    "@aws-cdk/aws-ec2.CfnInternetGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::InternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnInternetGatewayProps: ec2.CfnInternetGatewayProps = {\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInternetGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8419
      },
      "name": "CfnInternetGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::InternetGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8425
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInternetGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::LaunchTemplate",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html"
        },
        "example": "declare const cluster: eks.Cluster;\n\nconst userData = `MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"==MYBOUNDARY==\"\n\n--==MYBOUNDARY==\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n\n#!/bin/bash\necho \"Running custom user data script\"\n\n--==MYBOUNDARY==--\\\\\n`;\nconst lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {\n  launchTemplateData: {\n    instanceType: 't3.small',\n    userData: Fn.base64(userData),\n  },\n});\n\ncluster.addNodegroupCapacity('extra-ng', {\n  launchTemplateSpec: {\n    id: lt.ref,\n    version: lt.attrLatestVersionNumber,\n  },\n});",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::LaunchTemplate`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::LaunchTemplate`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 8697
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8637
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8713
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8726
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLaunchTemplate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8641
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultVersionNumber"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8665
          },
          "name": "attrDefaultVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LatestVersionNumber"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8670
          },
          "name": "attrLatestVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8718
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateData`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8676
          },
          "name": "launchTemplateData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8682
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LaunchTemplate.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8688
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorCountProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst acceleratorCountProperty: ec2.CfnLaunchTemplate.AcceleratorCountProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorCountProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8736
      },
      "name": "AcceleratorCountProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html#cfn-ec2-launchtemplate-acceleratorcount-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.AcceleratorCountProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8741
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html#cfn-ec2-launchtemplate-acceleratorcount-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.AcceleratorCountProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8746
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.AcceleratorCountProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst acceleratorTotalMemoryMiBProperty: ec2.CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8806
      },
      "name": "AcceleratorTotalMemoryMiBProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html#cfn-ec2-launchtemplate-acceleratortotalmemorymib-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8811
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html#cfn-ec2-launchtemplate-acceleratortotalmemorymib-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8816
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst baselineEbsBandwidthMbpsProperty: ec2.CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8876
      },
      "name": "BaselineEbsBandwidthMbpsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html#cfn-ec2-launchtemplate-baselineebsbandwidthmbps-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8881
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html#cfn-ec2-launchtemplate-baselineebsbandwidthmbps-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8886
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst blockDeviceMappingProperty: ec2.CfnLaunchTemplate.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    kmsKeyId: 'kmsKeyId',\n    snapshotId: 'snapshotId',\n    throughput: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: 'noDevice',\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8946
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-devicename"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8951
          },
          "name": "deviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.Ebs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8956
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-nodevice"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.NoDevice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8961
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-virtualname"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.VirtualName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8966
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst capacityReservationSpecificationProperty: ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty = {\n  capacityReservationPreference: 'capacityReservationPreference',\n  capacityReservationTarget: {\n    capacityReservationId: 'capacityReservationId',\n    capacityReservationResourceGroupArn: 'capacityReservationResourceGroupArn',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9032
      },
      "name": "CapacityReservationSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationpreference"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.CapacityReservationSpecificationProperty.CapacityReservationPreference`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9037
          },
          "name": "capacityReservationPreference",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationtarget"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.CapacityReservationSpecificationProperty.CapacityReservationTarget`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9042
          },
          "name": "capacityReservationTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CapacityReservationSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst capacityReservationTargetProperty: ec2.CfnLaunchTemplate.CapacityReservationTargetProperty = {\n  capacityReservationId: 'capacityReservationId',\n  capacityReservationResourceGroupArn: 'capacityReservationResourceGroupArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9102
      },
      "name": "CapacityReservationTargetProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.CapacityReservationTargetProperty.CapacityReservationId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9107
          },
          "name": "capacityReservationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationresourcegrouparn"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.CapacityReservationTargetProperty.CapacityReservationResourceGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9112
          },
          "name": "capacityReservationResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CapacityReservationTargetProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cpuOptionsProperty: ec2.CfnLaunchTemplate.CpuOptionsProperty = {\n  coreCount: 123,\n  threadsPerCore: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9172
      },
      "name": "CpuOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-corecount"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.CpuOptionsProperty.CoreCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9177
          },
          "name": "coreCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-threadspercore"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.CpuOptionsProperty.ThreadsPerCore`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9182
          },
          "name": "threadsPerCore",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CpuOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst creditSpecificationProperty: ec2.CfnLaunchTemplate.CreditSpecificationProperty = {\n  cpuCredits: 'cpuCredits',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9242
      },
      "name": "CreditSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification-cpucredits"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.CreditSpecificationProperty.CpuCredits`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9247
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CreditSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ebsProperty: ec2.CfnLaunchTemplate.EbsProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  snapshotId: 'snapshotId',\n  throughput: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9304
      },
      "name": "EbsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-deleteontermination"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9309
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-encrypted"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9314
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-iops"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9319
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-kmskeyid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.KmsKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9324
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-snapshotid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9329
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-throughput"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.Throughput`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9334
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumesize"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.VolumeSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9339
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumetype"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EbsProperty.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9344
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.EbsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst elasticGpuSpecificationProperty: ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty = {\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9422
      },
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html#cfn-ec2-launchtemplate-elasticgpuspecification-type"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.ElasticGpuSpecificationProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9427
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.ElasticGpuSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.EnclaveOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-enclaveoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst enclaveOptionsProperty: ec2.CfnLaunchTemplate.EnclaveOptionsProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EnclaveOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9484
      },
      "name": "EnclaveOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-enclaveoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-enclaveoptions-enabled"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.EnclaveOptionsProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9489
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.EnclaveOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst hibernationOptionsProperty: ec2.CfnLaunchTemplate.HibernationOptionsProperty = {\n  configured: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9546
      },
      "name": "HibernationOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions-configured"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.HibernationOptionsProperty.Configured`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9551
          },
          "name": "configured",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.HibernationOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst iamInstanceProfileProperty: ec2.CfnLaunchTemplate.IamInstanceProfileProperty = {\n  arn: 'arn',\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9608
      },
      "name": "IamInstanceProfileProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-arn"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.IamInstanceProfileProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9613
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-name"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.IamInstanceProfileProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9618
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.IamInstanceProfileProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceMarketOptionsProperty: ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty = {\n  marketType: 'marketType',\n  spotOptions: {\n    blockDurationMinutes: 123,\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    maxPrice: 'maxPrice',\n    spotInstanceType: 'spotInstanceType',\n    validUntil: 'validUntil',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9678
      },
      "name": "InstanceMarketOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-markettype"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.InstanceMarketOptionsProperty.MarketType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9683
          },
          "name": "marketType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.InstanceMarketOptionsProperty.SpotOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9688
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.InstanceMarketOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ipv6AddProperty: ec2.CfnLaunchTemplate.Ipv6AddProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9748
      },
      "name": "Ipv6AddProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.Ipv6AddProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9753
          },
          "name": "ipv6Address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.Ipv6AddProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateDataProperty: ec2.CfnLaunchTemplate.LaunchTemplateDataProperty = {\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      kmsKeyId: 'kmsKeyId',\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: 'noDevice',\n    virtualName: 'virtualName',\n  }],\n  capacityReservationSpecification: {\n    capacityReservationPreference: 'capacityReservationPreference',\n    capacityReservationTarget: {\n      capacityReservationId: 'capacityReservationId',\n      capacityReservationResourceGroupArn: 'capacityReservationResourceGroupArn',\n    },\n  },\n  cpuOptions: {\n    coreCount: 123,\n    threadsPerCore: 123,\n  },\n  creditSpecification: {\n    cpuCredits: 'cpuCredits',\n  },\n  disableApiTermination: false,\n  ebsOptimized: false,\n  elasticGpuSpecifications: [{\n    type: 'type',\n  }],\n  elasticInferenceAccelerators: [{\n    count: 123,\n    type: 'type',\n  }],\n  enclaveOptions: {\n    enabled: false,\n  },\n  hibernationOptions: {\n    configured: false,\n  },\n  iamInstanceProfile: {\n    arn: 'arn',\n    name: 'name',\n  },\n  imageId: 'imageId',\n  instanceInitiatedShutdownBehavior: 'instanceInitiatedShutdownBehavior',\n  instanceMarketOptions: {\n    marketType: 'marketType',\n    spotOptions: {\n      blockDurationMinutes: 123,\n      instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n      maxPrice: 'maxPrice',\n      spotInstanceType: 'spotInstanceType',\n      validUntil: 'validUntil',\n    },\n  },\n  instanceType: 'instanceType',\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  licenseSpecifications: [{\n    licenseConfigurationArn: 'licenseConfigurationArn',\n  }],\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpProtocolIpv6: 'httpProtocolIpv6',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  monitoring: {\n    enabled: false,\n  },\n  networkInterfaces: [{\n    associateCarrierIpAddress: false,\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    deviceIndex: 123,\n    groups: ['groups'],\n    interfaceType: 'interfaceType',\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    networkCardIndex: 123,\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddress: 'privateIpAddress',\n    privateIpAddresses: [{\n      primary: false,\n      privateIpAddress: 'privateIpAddress',\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placement: {\n    affinity: 'affinity',\n    availabilityZone: 'availabilityZone',\n    groupName: 'groupName',\n    hostId: 'hostId',\n    hostResourceGroupArn: 'hostResourceGroupArn',\n    partitionNumber: 123,\n    spreadDomain: 'spreadDomain',\n    tenancy: 'tenancy',\n  },\n  ramDiskId: 'ramDiskId',\n  securityGroupIds: ['securityGroupIds'],\n  securityGroups: ['securityGroups'],\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  userData: 'userData',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9810
      },
      "name": "LaunchTemplateDataProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.BlockDeviceMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9815
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.CapacityReservationSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9820
          },
          "name": "capacityReservationSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.CpuOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9825
          },
          "name": "cpuOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.CreditSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9830
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-disableapitermination"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.DisableApiTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9835
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ebsoptimized"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9840
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticgpuspecifications"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.ElasticGpuSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9845
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticinferenceaccelerators"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.ElasticInferenceAccelerators`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9850
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-enclaveoptions"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.EnclaveOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9855
          },
          "name": "enclaveOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EnclaveOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.HibernationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9860
          },
          "name": "hibernationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.IamInstanceProfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9865
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-imageid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.ImageId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9870
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instanceinitiatedshutdownbehavior"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceInitiatedShutdownBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9875
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceMarketOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9880
          },
          "name": "instanceMarketOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancetype"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9885
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.KernelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9890
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-keyname"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.KeyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9895
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-licensespecifications"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.LicenseSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9900
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.MetadataOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9905
          },
          "name": "metadataOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MetadataOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.Monitoring`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9910
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-networkinterfaces"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.NetworkInterfaces`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9915
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-placement"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.Placement`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9920
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ramdiskid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.RamDiskId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9925
          },
          "name": "ramDiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroupids"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9930
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroups"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9935
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9940
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-userdata"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.UserData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9945
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LaunchTemplateDataProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateElasticInferenceAcceleratorProperty: ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty = {\n  count: 123,\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10080
      },
      "name": "LaunchTemplateElasticInferenceAcceleratorProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-count"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty.Count`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10085
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-type"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10090
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateTagSpecificationProperty: ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10150
      },
      "name": "LaunchTemplateTagSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html#cfn-ec2-launchtemplate-launchtemplatetagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10155
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html#cfn-ec2-launchtemplate-launchtemplatetagspecification-tags"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10160
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst licenseSpecificationProperty: ec2.CfnLaunchTemplate.LicenseSpecificationProperty = {\n  licenseConfigurationArn: 'licenseConfigurationArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10220
      },
      "name": "LicenseSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html#cfn-ec2-launchtemplate-licensespecification-licenseconfigurationarn"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LicenseSpecificationProperty.LicenseConfigurationArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10225
          },
          "name": "licenseConfigurationArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LicenseSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryGiBPerVCpuProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst memoryGiBPerVCpuProperty: ec2.CfnLaunchTemplate.MemoryGiBPerVCpuProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryGiBPerVCpuProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10282
      },
      "name": "MemoryGiBPerVCpuProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html#cfn-ec2-launchtemplate-memorygibpervcpu-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MemoryGiBPerVCpuProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10287
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html#cfn-ec2-launchtemplate-memorygibpervcpu-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MemoryGiBPerVCpuProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10292
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MemoryGiBPerVCpuProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryMiBProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst memoryMiBProperty: ec2.CfnLaunchTemplate.MemoryMiBProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryMiBProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10352
      },
      "name": "MemoryMiBProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html#cfn-ec2-launchtemplate-memorymib-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MemoryMiBProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10357
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html#cfn-ec2-launchtemplate-memorymib-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MemoryMiBProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10362
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MemoryMiBProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MetadataOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst metadataOptionsProperty: ec2.CfnLaunchTemplate.MetadataOptionsProperty = {\n  httpEndpoint: 'httpEndpoint',\n  httpProtocolIpv6: 'httpProtocolIpv6',\n  httpPutResponseHopLimit: 123,\n  httpTokens: 'httpTokens',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MetadataOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10422
      },
      "name": "MetadataOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpendpoint"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MetadataOptionsProperty.HttpEndpoint`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10427
          },
          "name": "httpEndpoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpprotocolipv6"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MetadataOptionsProperty.HttpProtocolIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10432
          },
          "name": "httpProtocolIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpputresponsehoplimit"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MetadataOptionsProperty.HttpPutResponseHopLimit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10437
          },
          "name": "httpPutResponseHopLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httptokens"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MetadataOptionsProperty.HttpTokens`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10442
          },
          "name": "httpTokens",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MetadataOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst monitoringProperty: ec2.CfnLaunchTemplate.MonitoringProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10508
      },
      "name": "MonitoringProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring-enabled"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.MonitoringProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10513
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MonitoringProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceCountProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst networkInterfaceCountProperty: ec2.CfnLaunchTemplate.NetworkInterfaceCountProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceCountProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10744
      },
      "name": "NetworkInterfaceCountProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html#cfn-ec2-launchtemplate-networkinterfacecount-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceCountProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10749
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html#cfn-ec2-launchtemplate-networkinterfacecount-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceCountProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10754
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.NetworkInterfaceCountProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst networkInterfaceProperty: ec2.CfnLaunchTemplate.NetworkInterfaceProperty = {\n  associateCarrierIpAddress: false,\n  associatePublicIpAddress: false,\n  deleteOnTermination: false,\n  description: 'description',\n  deviceIndex: 123,\n  groups: ['groups'],\n  interfaceType: 'interfaceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  networkCardIndex: 123,\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10570
      },
      "name": "NetworkInterfaceProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatecarrieripaddress"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.AssociateCarrierIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10575
          },
          "name": "associateCarrierIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.AssociatePublicIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10580
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10585
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10590
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10595
          },
          "name": "deviceIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Groups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10600
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-interfacetype"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.InterfaceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10605
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10610
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10615
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkcardindex"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.NetworkCardIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10620
          },
          "name": "networkCardIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10625
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10630
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10635
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10640
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10645
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.NetworkInterfaceProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst placementProperty: ec2.CfnLaunchTemplate.PlacementProperty = {\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  groupName: 'groupName',\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  partitionNumber: 123,\n  spreadDomain: 'spreadDomain',\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10814
      },
      "name": "PlacementProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-affinity"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.Affinity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10819
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-availabilityzone"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10824
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-groupname"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10829
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostid"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.HostId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10834
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostresourcegrouparn"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.HostResourceGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10839
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-partitionnumber"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.PartitionNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10844
          },
          "name": "partitionNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-spreaddomain"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.SpreadDomain`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10849
          },
          "name": "spreadDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-tenancy"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PlacementProperty.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10854
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.PlacementProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst privateIpAddProperty: ec2.CfnLaunchTemplate.PrivateIpAddProperty = {\n  primary: false,\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10932
      },
      "name": "PrivateIpAddProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-primary"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PrivateIpAddProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10937
          },
          "name": "primary",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-privateipaddress"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.PrivateIpAddProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10942
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.PrivateIpAddProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotOptionsProperty: ec2.CfnLaunchTemplate.SpotOptionsProperty = {\n  blockDurationMinutes: 123,\n  instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n  maxPrice: 'maxPrice',\n  spotInstanceType: 'spotInstanceType',\n  validUntil: 'validUntil',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11002
      },
      "name": "SpotOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-blockdurationminutes"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.BlockDurationMinutes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11007
          },
          "name": "blockDurationMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-instanceinterruptionbehavior"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.InstanceInterruptionBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11012
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-maxprice"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.MaxPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11017
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-spotinstancetype"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.SpotInstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11022
          },
          "name": "spotInstanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-validuntil"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.ValidUntil`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11027
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.SpotOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst tagSpecificationProperty: ec2.CfnLaunchTemplate.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11096
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11101
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-tags"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11106
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.TotalLocalStorageGBProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst totalLocalStorageGBProperty: ec2.CfnLaunchTemplate.TotalLocalStorageGBProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TotalLocalStorageGBProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11166
      },
      "name": "TotalLocalStorageGBProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html#cfn-ec2-launchtemplate-totallocalstoragegb-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.TotalLocalStorageGBProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11171
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html#cfn-ec2-launchtemplate-totallocalstoragegb-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.TotalLocalStorageGBProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11176
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.TotalLocalStorageGBProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.VCpuCountProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vCpuCountProperty: ec2.CfnLaunchTemplate.VCpuCountProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.VCpuCountProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11236
      },
      "name": "VCpuCountProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html#cfn-ec2-launchtemplate-vcpucount-max"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.VCpuCountProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11241
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html#cfn-ec2-launchtemplate-vcpucount-min"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.VCpuCountProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11246
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.VCpuCountProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplateProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html"
        },
        "example": "declare const cluster: eks.Cluster;\n\nconst userData = `MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"==MYBOUNDARY==\"\n\n--==MYBOUNDARY==\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n\n#!/bin/bash\necho \"Running custom user data script\"\n\n--==MYBOUNDARY==--\\\\\n`;\nconst lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {\n  launchTemplateData: {\n    instanceType: 't3.small',\n    userData: Fn.base64(userData),\n  },\n});\n\ncluster.addNodegroupCapacity('extra-ng', {\n  launchTemplateSpec: {\n    id: lt.ref,\n    version: lt.attrLatestVersionNumber,\n  },\n});",
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::LaunchTemplate`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8558
      },
      "name": "CfnLaunchTemplateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8564
          },
          "name": "launchTemplateData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8570
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LaunchTemplate.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8576
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplateProps"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::LocalGatewayRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::LocalGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnLocalGatewayRoute = new ec2.CfnLocalGatewayRoute(this, 'MyCfnLocalGatewayRoute', {\n  destinationCidrBlock: 'destinationCidrBlock',\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  localGatewayVirtualInterfaceGroupId: 'localGatewayVirtualInterfaceGroupId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::LocalGatewayRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 11449
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11389
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11468
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11481
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLocalGatewayRoute",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11417
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Type"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11422
          },
          "name": "attrType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11393
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11473
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRoute.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11428
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRoute.LocalGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11434
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRoute.LocalGatewayVirtualInterfaceGroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11440
          },
          "name": "localGatewayVirtualInterfaceGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRoute"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::LocalGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnLocalGatewayRouteProps: ec2.CfnLocalGatewayRouteProps = {\n  destinationCidrBlock: 'destinationCidrBlock',\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  localGatewayVirtualInterfaceGroupId: 'localGatewayVirtualInterfaceGroupId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11307
      },
      "name": "CfnLocalGatewayRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRoute.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11313
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRoute.LocalGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11319
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRoute.LocalGatewayVirtualInterfaceGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11325
          },
          "name": "localGatewayVirtualInterfaceGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::LocalGatewayRouteTableVPCAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnLocalGatewayRouteTableVPCAssociation = new ec2.CfnLocalGatewayRouteTableVPCAssociation(this, 'MyCfnLocalGatewayRouteTableVPCAssociation', {\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::LocalGatewayRouteTableVPCAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 11638
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11573
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11657
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11670
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLocalGatewayRouteTableVPCAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LocalGatewayId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11601
          },
          "name": "attrLocalGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LocalGatewayRouteTableVpcAssociationId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11606
          },
          "name": "attrLocalGatewayRouteTableVpcAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11611
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11577
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11662
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRouteTableVPCAssociation.LocalGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11617
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRouteTableVPCAssociation.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11629
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRouteTableVPCAssociation.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11623
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRouteTableVPCAssociation"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::LocalGatewayRouteTableVPCAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnLocalGatewayRouteTableVPCAssociationProps: ec2.CfnLocalGatewayRouteTableVPCAssociationProps = {\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11492
      },
      "name": "CfnLocalGatewayRouteTableVPCAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRouteTableVPCAssociation.LocalGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11498
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRouteTableVPCAssociation.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11510
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::LocalGatewayRouteTableVPCAssociation.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11504
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRouteTableVPCAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnNatGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NatGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NatGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNatGateway = new ec2.CfnNatGateway(this, 'MyCfnNatGateway', {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  allocationId: 'allocationId',\n  connectivityType: 'connectivityType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNatGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NatGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 11826
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNatGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11770
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11842
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11856
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNatGateway",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.AllocationId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11805
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11774
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11847
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.ConnectivityType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11811
          },
          "name": "connectivityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11799
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11817
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNatGateway"
    },
    "@aws-cdk/aws-ec2.CfnNatGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NatGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNatGatewayProps: ec2.CfnNatGatewayProps = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  allocationId: 'allocationId',\n  connectivityType: 'connectivityType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNatGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11681
      },
      "name": "CfnNatGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.AllocationId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11693
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.ConnectivityType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11699
          },
          "name": "connectivityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11687
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NatGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11705
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNatGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkAcl",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkAcl`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkAcl = new ec2.CfnNetworkAcl(this, 'MyCfnNetworkAcl', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAcl",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkAcl`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 11987
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11938
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12002
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12014
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkAcl",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11966
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11942
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12007
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAcl.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11978
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAcl.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11972
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAcl"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkAclEntry",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkAclEntry`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkAclEntry = new ec2.CfnNetworkAclEntry(this, 'MyCfnNetworkAclEntry', {\n  networkAclId: 'networkAclId',\n  protocol: 123,\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n\n  // the properties below are optional\n  cidrBlock: 'cidrBlock',\n  egress: false,\n  icmp: {\n    code: 123,\n    type: 123,\n  },\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkAclEntry`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 12253
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12162
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12278
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12297
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkAclEntry",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12190
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12166
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12283
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12220
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-egress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Egress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12226
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-icmp"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Icmp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12232
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Ipv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12238
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-networkaclid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.NetworkAclId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12196
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-portrange"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.PortRange`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12244
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-protocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Protocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12202
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ruleaction"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleAction`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12208
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-rulenumber"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleNumber`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12214
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntry"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst icmpProperty: ec2.CfnNetworkAclEntry.IcmpProperty = {\n  code: 123,\n  type: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12307
      },
      "name": "IcmpProperty",
      "namespace": "CfnNetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-code"
            },
            "stability": "external",
            "summary": "`CfnNetworkAclEntry.IcmpProperty.Code`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12312
          },
          "name": "code",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-type"
            },
            "stability": "external",
            "summary": "`CfnNetworkAclEntry.IcmpProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12317
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntry.IcmpProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst portRangeProperty: ec2.CfnNetworkAclEntry.PortRangeProperty = {\n  from: 123,\n  to: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12377
      },
      "name": "PortRangeProperty",
      "namespace": "CfnNetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-from"
            },
            "stability": "external",
            "summary": "`CfnNetworkAclEntry.PortRangeProperty.From`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12382
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-to"
            },
            "stability": "external",
            "summary": "`CfnNetworkAclEntry.PortRangeProperty.To`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12387
          },
          "name": "to",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntry.PortRangeProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NetworkAclEntry`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkAclEntryProps: ec2.CfnNetworkAclEntryProps = {\n  networkAclId: 'networkAclId',\n  protocol: 123,\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n\n  // the properties below are optional\n  cidrBlock: 'cidrBlock',\n  egress: false,\n  icmp: {\n    code: 123,\n    type: 123,\n  },\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12025
      },
      "name": "CfnNetworkAclEntryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12055
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-egress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Egress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12061
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-icmp"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Icmp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12067
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Ipv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12073
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-networkaclid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.NetworkAclId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12031
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-portrange"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.PortRange`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12079
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-protocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12037
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ruleaction"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleAction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12043
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-rulenumber"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12049
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntryProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NetworkAcl`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkAclProps: ec2.CfnNetworkAclProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11867
      },
      "name": "CfnNetworkAclProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAcl.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11879
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkAcl.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11873
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInsightsAnalysis",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInsightsAnalysis`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInsightsAnalysis = new ec2.CfnNetworkInsightsAnalysis(this, 'MyCfnNetworkInsightsAnalysis', {\n  networkInsightsPathId: 'networkInsightsPathId',\n\n  // the properties below are optional\n  filterInArns: ['filterInArns'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInsightsAnalysis`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 12628
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysisProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12528
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12653
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12666
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AlternatePathHints"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12556
          },
          "name": "attrAlternatePathHints",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Explanations"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12561
          },
          "name": "attrExplanations",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ForwardPathComponents"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12566
          },
          "name": "attrForwardPathComponents",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAnalysisArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12571
          },
          "name": "attrNetworkInsightsAnalysisArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAnalysisId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12576
          },
          "name": "attrNetworkInsightsAnalysisId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkPathFound"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12581
          },
          "name": "attrNetworkPathFound",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ReturnPathComponents"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12586
          },
          "name": "attrReturnPathComponents",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StartDate"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12591
          },
          "name": "attrStartDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12596
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StatusMessage"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12601
          },
          "name": "attrStatusMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12532
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12658
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsAnalysis.FilterInArns`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12613
          },
          "name": "filterInArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsAnalysis.NetworkInsightsPathId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12607
          },
          "name": "networkInsightsPathId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsAnalysis.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12619
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AlternatePathHintProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst alternatePathHintProperty: ec2.CfnNetworkInsightsAnalysis.AlternatePathHintProperty = {\n  componentArn: 'componentArn',\n  componentId: 'componentId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AlternatePathHintProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12676
      },
      "name": "AlternatePathHintProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html#cfn-ec2-networkinsightsanalysis-alternatepathhint-componentarn"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AlternatePathHintProperty.ComponentArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12681
          },
          "name": "componentArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html#cfn-ec2-networkinsightsanalysis-alternatepathhint-componentid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AlternatePathHintProperty.ComponentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12686
          },
          "name": "componentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AlternatePathHintProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst analysisAclRuleProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty = {\n  cidr: 'cidr',\n  egress: false,\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n  protocol: 'protocol',\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12746
      },
      "name": "AnalysisAclRuleProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-cidr"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty.Cidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12751
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-egress"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty.Egress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12756
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-portrange"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty.PortRange`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12761
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-protocol"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12766
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-ruleaction"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty.RuleAction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12771
          },
          "name": "ruleAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-rulenumber"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty.RuleNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12776
          },
          "name": "ruleNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst analysisComponentProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty = {\n  arn: 'arn',\n  id: 'id',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12848
      },
      "name": "AnalysisComponentProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html#cfn-ec2-networkinsightsanalysis-analysiscomponent-arn"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisComponentProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12853
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html#cfn-ec2-networkinsightsanalysis-analysiscomponent-id"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisComponentProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12858
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst analysisLoadBalancerListenerProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty = {\n  instancePort: 123,\n  loadBalancerPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12918
      },
      "name": "AnalysisLoadBalancerListenerProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancerlistener-instanceport"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty.InstancePort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12923
          },
          "name": "instancePort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancerlistener-loadbalancerport"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty.LoadBalancerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12928
          },
          "name": "loadBalancerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst analysisLoadBalancerTargetProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty = {\n  address: 'address',\n  availabilityZone: 'availabilityZone',\n  instance: {\n    arn: 'arn',\n    id: 'id',\n  },\n  port: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12988
      },
      "name": "AnalysisLoadBalancerTargetProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-address"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty.Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12993
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-availabilityzone"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12998
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-instance"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty.Instance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13003
          },
          "name": "instance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-port"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty.Port`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13008
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst analysisPacketHeaderProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty = {\n  destinationAddresses: ['destinationAddresses'],\n  destinationPortRanges: [{\n    from: 123,\n    to: 123,\n  }],\n  protocol: 'protocol',\n  sourceAddresses: ['sourceAddresses'],\n  sourcePortRanges: [{\n    from: 123,\n    to: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13074
      },
      "name": "AnalysisPacketHeaderProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationaddresses"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty.DestinationAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13079
          },
          "name": "destinationAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationportranges"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty.DestinationPortRanges`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13084
          },
          "name": "destinationPortRanges",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-protocol"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13089
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceaddresses"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty.SourceAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13094
          },
          "name": "sourceAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceportranges"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty.SourcePortRanges`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13099
          },
          "name": "sourcePortRanges",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst analysisRouteTableRouteProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty = {\n  destinationCidr: 'destinationCidr',\n  destinationPrefixListId: 'destinationPrefixListId',\n  egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n  gatewayId: 'gatewayId',\n  instanceId: 'instanceId',\n  natGatewayId: 'natGatewayId',\n  networkInterfaceId: 'networkInterfaceId',\n  origin: 'origin',\n  transitGatewayId: 'transitGatewayId',\n  vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13168
      },
      "name": "AnalysisRouteTableRouteProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationcidr"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.destinationCidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13198
          },
          "name": "destinationCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationprefixlistid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.destinationPrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13203
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-egressonlyinternetgatewayid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.egressOnlyInternetGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13208
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-gatewayid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.gatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13213
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-instanceid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.instanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13218
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-natgatewayid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.NatGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13173
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13178
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-origin"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.Origin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13183
          },
          "name": "origin",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-transitgatewayid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13188
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-vpcpeeringconnectionid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty.VpcPeeringConnectionId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13193
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst analysisSecurityGroupRuleProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty = {\n  cidr: 'cidr',\n  direction: 'direction',\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n  prefixListId: 'prefixListId',\n  protocol: 'protocol',\n  securityGroupId: 'securityGroupId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13302
      },
      "name": "AnalysisSecurityGroupRuleProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-cidr"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty.Cidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13307
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-direction"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty.Direction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13312
          },
          "name": "direction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-portrange"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty.PortRange`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13317
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-prefixlistid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty.PrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13322
          },
          "name": "prefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-protocol"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13327
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-securitygroupid"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty.SecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13332
          },
          "name": "securityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.ExplanationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst explanationProperty: ec2.CfnNetworkInsightsAnalysis.ExplanationProperty = {\n  acl: {\n    arn: 'arn',\n    id: 'id',\n  },\n  aclRule: {\n    cidr: 'cidr',\n    egress: false,\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    protocol: 'protocol',\n    ruleAction: 'ruleAction',\n    ruleNumber: 123,\n  },\n  address: 'address',\n  addresses: ['addresses'],\n  attachedTo: {\n    arn: 'arn',\n    id: 'id',\n  },\n  availabilityZones: ['availabilityZones'],\n  cidrs: ['cidrs'],\n  classicLoadBalancerListener: {\n    instancePort: 123,\n    loadBalancerPort: 123,\n  },\n  component: {\n    arn: 'arn',\n    id: 'id',\n  },\n  customerGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n  destination: {\n    arn: 'arn',\n    id: 'id',\n  },\n  destinationVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  direction: 'direction',\n  elasticLoadBalancerListener: {\n    arn: 'arn',\n    id: 'id',\n  },\n  explanationCode: 'explanationCode',\n  ingressRouteTable: {\n    arn: 'arn',\n    id: 'id',\n  },\n  internetGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerListenerPort: 123,\n  loadBalancerTarget: {\n    address: 'address',\n    availabilityZone: 'availabilityZone',\n    instance: {\n      arn: 'arn',\n      id: 'id',\n    },\n    port: 123,\n  },\n  loadBalancerTargetGroup: {\n    arn: 'arn',\n    id: 'id',\n  },\n  loadBalancerTargetGroups: [{\n    arn: 'arn',\n    id: 'id',\n  }],\n  loadBalancerTargetPort: 123,\n  missingComponent: 'missingComponent',\n  natGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n  networkInterface: {\n    arn: 'arn',\n    id: 'id',\n  },\n  packetField: 'packetField',\n  port: 123,\n  portRanges: [{\n    from: 123,\n    to: 123,\n  }],\n  prefixList: {\n    arn: 'arn',\n    id: 'id',\n  },\n  protocols: ['protocols'],\n  routeTable: {\n    arn: 'arn',\n    id: 'id',\n  },\n  routeTableRoute: {\n    destinationCidr: 'destinationCidr',\n    destinationPrefixListId: 'destinationPrefixListId',\n    egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n    gatewayId: 'gatewayId',\n    instanceId: 'instanceId',\n    natGatewayId: 'natGatewayId',\n    networkInterfaceId: 'networkInterfaceId',\n    origin: 'origin',\n    transitGatewayId: 'transitGatewayId',\n    vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n  },\n  securityGroup: {\n    arn: 'arn',\n    id: 'id',\n  },\n  securityGroupRule: {\n    cidr: 'cidr',\n    direction: 'direction',\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    prefixListId: 'prefixListId',\n    protocol: 'protocol',\n    securityGroupId: 'securityGroupId',\n  },\n  securityGroups: [{\n    arn: 'arn',\n    id: 'id',\n  }],\n  sourceVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  state: 'state',\n  subnet: {\n    arn: 'arn',\n    id: 'id',\n  },\n  subnetRouteTable: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpcEndpoint: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpcPeeringConnection: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpnConnection: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpnGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.ExplanationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13404
      },
      "name": "ExplanationProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-acl"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Acl`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13409
          },
          "name": "acl",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-aclrule"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.AclRule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13414
          },
          "name": "aclRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-address"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13419
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-addresses"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13424
          },
          "name": "addresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-attachedto"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.AttachedTo`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13429
          },
          "name": "attachedTo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-availabilityzones"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.AvailabilityZones`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13434
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-cidrs"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Cidrs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13439
          },
          "name": "cidrs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-classicloadbalancerlistener"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.ClassicLoadBalancerListener`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13444
          },
          "name": "classicLoadBalancerListener",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-component"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Component`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13449
          },
          "name": "component",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-customergateway"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.CustomerGateway`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13454
          },
          "name": "customerGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-destination"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Destination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13459
          },
          "name": "destination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-destinationvpc"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.DestinationVpc`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13464
          },
          "name": "destinationVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-direction"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Direction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13469
          },
          "name": "direction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-elasticloadbalancerlistener"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.ElasticLoadBalancerListener`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13474
          },
          "name": "elasticLoadBalancerListener",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-explanationcode"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.ExplanationCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13479
          },
          "name": "explanationCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-ingressroutetable"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.IngressRouteTable`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13484
          },
          "name": "ingressRouteTable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-internetgateway"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.InternetGateway`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13489
          },
          "name": "internetGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancerarn"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.LoadBalancerArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13494
          },
          "name": "loadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancerlistenerport"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.LoadBalancerListenerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13499
          },
          "name": "loadBalancerListenerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertarget"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.LoadBalancerTarget`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13504
          },
          "name": "loadBalancerTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetgroup"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.LoadBalancerTargetGroup`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13509
          },
          "name": "loadBalancerTargetGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetgroups"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.LoadBalancerTargetGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13514
          },
          "name": "loadBalancerTargetGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetport"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.LoadBalancerTargetPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13519
          },
          "name": "loadBalancerTargetPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-missingcomponent"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.MissingComponent`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13524
          },
          "name": "missingComponent",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-natgateway"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.NatGateway`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13529
          },
          "name": "natGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-networkinterface"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.NetworkInterface`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13534
          },
          "name": "networkInterface",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-packetfield"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.PacketField`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13539
          },
          "name": "packetField",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-port"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Port`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13544
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-portranges"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.PortRanges`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13549
          },
          "name": "portRanges",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-prefixlist"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.PrefixList`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13554
          },
          "name": "prefixList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-protocols"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Protocols`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13559
          },
          "name": "protocols",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-routetable"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.RouteTable`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13564
          },
          "name": "routeTable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-routetableroute"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.RouteTableRoute`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13569
          },
          "name": "routeTableRoute",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygroup"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.SecurityGroup`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13574
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygrouprule"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.SecurityGroupRule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13579
          },
          "name": "securityGroupRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygroups"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13584
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-sourcevpc"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.SourceVpc`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13589
          },
          "name": "sourceVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-state"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.State`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13594
          },
          "name": "state",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-subnet"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Subnet`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13599
          },
          "name": "subnet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-subnetroutetable"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.SubnetRouteTable`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13604
          },
          "name": "subnetRouteTable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpc"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.Vpc`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13609
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpcendpoint"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.vpcEndpoint`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13629
          },
          "name": "vpcEndpoint",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpcpeeringconnection"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.VpcPeeringConnection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13614
          },
          "name": "vpcPeeringConnection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpnconnection"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.VpnConnection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13619
          },
          "name": "vpnConnection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpngateway"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.ExplanationProperty.VpnGateway`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13624
          },
          "name": "vpnGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.ExplanationProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PathComponentProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst pathComponentProperty: ec2.CfnNetworkInsightsAnalysis.PathComponentProperty = {\n  aclRule: {\n    cidr: 'cidr',\n    egress: false,\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    protocol: 'protocol',\n    ruleAction: 'ruleAction',\n    ruleNumber: 123,\n  },\n  component: {\n    arn: 'arn',\n    id: 'id',\n  },\n  destinationVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  inboundHeader: {\n    destinationAddresses: ['destinationAddresses'],\n    destinationPortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n    protocol: 'protocol',\n    sourceAddresses: ['sourceAddresses'],\n    sourcePortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n  },\n  outboundHeader: {\n    destinationAddresses: ['destinationAddresses'],\n    destinationPortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n    protocol: 'protocol',\n    sourceAddresses: ['sourceAddresses'],\n    sourcePortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n  },\n  routeTableRoute: {\n    destinationCidr: 'destinationCidr',\n    destinationPrefixListId: 'destinationPrefixListId',\n    egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n    gatewayId: 'gatewayId',\n    instanceId: 'instanceId',\n    natGatewayId: 'natGatewayId',\n    networkInterfaceId: 'networkInterfaceId',\n    origin: 'origin',\n    transitGatewayId: 'transitGatewayId',\n    vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n  },\n  securityGroupRule: {\n    cidr: 'cidr',\n    direction: 'direction',\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    prefixListId: 'prefixListId',\n    protocol: 'protocol',\n    securityGroupId: 'securityGroupId',\n  },\n  sequenceNumber: 123,\n  sourceVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  subnet: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PathComponentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13818
      },
      "name": "PathComponentProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-aclrule"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.AclRule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13823
          },
          "name": "aclRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-component"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.Component`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13828
          },
          "name": "component",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-destinationvpc"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.DestinationVpc`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13833
          },
          "name": "destinationVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-inboundheader"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.InboundHeader`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13838
          },
          "name": "inboundHeader",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-outboundheader"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.OutboundHeader`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13843
          },
          "name": "outboundHeader",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-routetableroute"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.RouteTableRoute`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13848
          },
          "name": "routeTableRoute",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-securitygrouprule"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.SecurityGroupRule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13853
          },
          "name": "securityGroupRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-sequencenumber"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.SequenceNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13858
          },
          "name": "sequenceNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-sourcevpc"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.SourceVpc`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13863
          },
          "name": "sourceVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-subnet"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.Subnet`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13868
          },
          "name": "subnet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-vpc"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PathComponentProperty.Vpc`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13873
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.PathComponentProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst portRangeProperty: ec2.CfnNetworkInsightsAnalysis.PortRangeProperty = {\n  from: 123,\n  to: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13960
      },
      "name": "PortRangeProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html#cfn-ec2-networkinsightsanalysis-portrange-from"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PortRangeProperty.From`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13965
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html#cfn-ec2-networkinsightsanalysis-portrange-to"
            },
            "stability": "external",
            "summary": "`CfnNetworkInsightsAnalysis.PortRangeProperty.To`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13970
          },
          "name": "to",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.PortRangeProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysisProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NetworkInsightsAnalysis`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInsightsAnalysisProps: ec2.CfnNetworkInsightsAnalysisProps = {\n  networkInsightsPathId: 'networkInsightsPathId',\n\n  // the properties below are optional\n  filterInArns: ['filterInArns'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysisProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12448
      },
      "name": "CfnNetworkInsightsAnalysisProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsAnalysis.FilterInArns`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12460
          },
          "name": "filterInArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsAnalysis.NetworkInsightsPathId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12454
          },
          "name": "networkInsightsPathId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsAnalysis.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12466
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysisProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsPath": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInsightsPath",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInsightsPath`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInsightsPath = new ec2.CfnNetworkInsightsPath(this, 'MyCfnNetworkInsightsPath', {\n  destination: 'destination',\n  protocol: 'protocol',\n  source: 'source',\n\n  // the properties below are optional\n  destinationIp: 'destinationIp',\n  destinationPort: 123,\n  sourceIp: 'sourceIp',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsPath",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInsightsPath`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 14238
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsPathProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14149
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14262
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14279
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInsightsPath",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatedDate"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14177
          },
          "name": "attrCreatedDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsPathArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14182
          },
          "name": "attrNetworkInsightsPathArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsPathId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14187
          },
          "name": "attrNetworkInsightsPathId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14153
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14267
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destination"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Destination`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14193
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.DestinationIp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14211
          },
          "name": "destinationIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.DestinationPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14217
          },
          "name": "destinationPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-protocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Protocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14199
          },
          "name": "protocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-source"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Source`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14205
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-sourceip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.SourceIp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14223
          },
          "name": "sourceIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14229
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsPath"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsPathProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NetworkInsightsPath`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInsightsPathProps: ec2.CfnNetworkInsightsPathProps = {\n  destination: 'destination',\n  protocol: 'protocol',\n  source: 'source',\n\n  // the properties below are optional\n  destinationIp: 'destinationIp',\n  destinationPort: 123,\n  sourceIp: 'sourceIp',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsPathProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14031
      },
      "name": "CfnNetworkInsightsPathProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destination"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Destination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14037
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.DestinationIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14055
          },
          "name": "destinationIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.DestinationPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14061
          },
          "name": "destinationPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-protocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14043
          },
          "name": "protocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-source"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Source`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14049
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-sourceip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.SourceIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14067
          },
          "name": "sourceIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInsightsPath.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14073
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsPathProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterface",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterface`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInterface = new ec2.CfnNetworkInterface(this, 'MyCfnNetworkInterface', {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  description: 'description',\n  groupSet: ['groupSet'],\n  interfaceType: 'interfaceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  sourceDestCheck: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInterface`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 14550
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14442
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14575
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14596
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterface",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrimaryPrivateIpAddress"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14470
          },
          "name": "attrPrimaryPrivateIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SecondaryPrivateIpAddresses"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14475
          },
          "name": "attrSecondaryPrivateIpAddresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14446
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14580
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14487
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-groupset"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.GroupSet`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14493
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-interfacetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.InterfaceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14499
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresscount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6AddressCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14505
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresses"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6Addresses`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14511
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14517
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddresses"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddresses`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14523
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-secondaryprivateipcount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.SecondaryPrivateIpAddressCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14529
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-sourcedestcheck"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.SourceDestCheck`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14535
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14481
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14541
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterface"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceIpv6AddressProperty: ec2.CfnNetworkInterface.InstanceIpv6AddressProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14606
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnNetworkInterface",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html#cfn-ec2-networkinterface-instanceipv6address-ipv6address"
            },
            "stability": "external",
            "summary": "`CfnNetworkInterface.InstanceIpv6AddressProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14611
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterface.InstanceIpv6AddressProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst privateIpAddressSpecificationProperty: ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty = {\n  primary: false,\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14669
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnNetworkInterface",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary"
            },
            "stability": "external",
            "summary": "`CfnNetworkInterface.PrivateIpAddressSpecificationProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14674
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress"
            },
            "stability": "external",
            "summary": "`CfnNetworkInterface.PrivateIpAddressSpecificationProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14679
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterfaceAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterfaceAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInterfaceAttachment = new ec2.CfnNetworkInterfaceAttachment(this, 'MyCfnNetworkInterfaceAttachment', {\n  deviceIndex: 'deviceIndex',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n\n  // the properties below are optional\n  deleteOnTermination: false,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInterfaceAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 14889
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14833
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14907
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14921
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterfaceAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14837
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14912
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeleteOnTermination`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14880
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeviceIndex`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14862
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14868
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14874
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfaceAttachment"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NetworkInterfaceAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInterfaceAttachmentProps: ec2.CfnNetworkInterfaceAttachmentProps = {\n  deviceIndex: 'deviceIndex',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n\n  // the properties below are optional\n  deleteOnTermination: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14742
      },
      "name": "CfnNetworkInterfaceAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14766
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14748
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14754
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14760
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfaceAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfacePermission": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterfacePermission",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterfacePermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInterfacePermission = new ec2.CfnNetworkInterfacePermission(this, 'MyCfnNetworkInterfacePermission', {\n  awsAccountId: 'awsAccountId',\n  networkInterfaceId: 'networkInterfaceId',\n  permission: 'permission',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermission",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInterfacePermission`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15064
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15014
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15081
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15094
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterfacePermission",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfacePermission.AwsAccountId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15043
          },
          "name": "awsAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15018
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15086
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15049
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfacePermission.Permission`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15055
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfacePermission"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NetworkInterfacePermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInterfacePermissionProps: ec2.CfnNetworkInterfacePermissionProps = {\n  awsAccountId: 'awsAccountId',\n  networkInterfaceId: 'networkInterfaceId',\n  permission: 'permission',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14932
      },
      "name": "CfnNetworkInterfacePermissionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfacePermission.AwsAccountId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14938
          },
          "name": "awsAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14944
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterfacePermission.Permission`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14950
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfacePermissionProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::NetworkInterface`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnNetworkInterfaceProps: ec2.CfnNetworkInterfaceProps = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  description: 'description',\n  groupSet: ['groupSet'],\n  interfaceType: 'interfaceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  sourceDestCheck: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14290
      },
      "name": "CfnNetworkInterfaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14302
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-groupset"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.GroupSet`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14308
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-interfacetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.InterfaceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14314
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresscount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14320
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresses"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14326
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14332
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddresses"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14338
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-secondaryprivateipcount"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14344
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-sourcedestcheck"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.SourceDestCheck`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14350
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14296
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::NetworkInterface.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14356
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfaceProps"
    },
    "@aws-cdk/aws-ec2.CfnPlacementGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::PlacementGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::PlacementGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnPlacementGroup = new ec2.CfnPlacementGroup(this, 'MyCfnPlacementGroup', /* all optional props */ {\n  strategy: 'strategy',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::PlacementGroup`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15204
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15166
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15216
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15227
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPlacementGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15170
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15221
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PlacementGroup.Strategy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15195
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPlacementGroup"
    },
    "@aws-cdk/aws-ec2.CfnPlacementGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::PlacementGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnPlacementGroupProps: ec2.CfnPlacementGroupProps = {\n  strategy: 'strategy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15105
      },
      "name": "CfnPlacementGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PlacementGroup.Strategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15111
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPlacementGroupProps"
    },
    "@aws-cdk/aws-ec2.CfnPrefixList": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::PrefixList",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::PrefixList`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnPrefixList = new ec2.CfnPrefixList(this, 'MyCfnPrefixList', {\n  addressFamily: 'addressFamily',\n  maxEntries: 123,\n  prefixListName: 'prefixListName',\n\n  // the properties below are optional\n  entries: [{\n    cidr: 'cidr',\n\n    // the properties below are optional\n    description: 'description',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPrefixList",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::PrefixList`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15420
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnPrefixListProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15338
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15443
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15458
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPrefixList",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-addressfamily"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.AddressFamily`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15387
          },
          "name": "addressFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15366
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15371
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrefixListId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15376
          },
          "name": "attrPrefixListId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Version"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15381
          },
          "name": "attrVersion",
          "type": {
            "primitive": "number"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15342
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15448
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-entries"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.Entries`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15405
          },
          "name": "entries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-maxentries"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.MaxEntries`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15393
          },
          "name": "maxEntries",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-prefixlistname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.PrefixListName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15399
          },
          "name": "prefixListName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15411
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPrefixList"
    },
    "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst entryProperty: ec2.CfnPrefixList.EntryProperty = {\n  cidr: 'cidr',\n\n  // the properties below are optional\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15468
      },
      "name": "EntryProperty",
      "namespace": "CfnPrefixList",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html#cfn-ec2-prefixlist-entry-cidr"
            },
            "stability": "external",
            "summary": "`CfnPrefixList.EntryProperty.Cidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15473
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html#cfn-ec2-prefixlist-entry-description"
            },
            "stability": "external",
            "summary": "`CfnPrefixList.EntryProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15478
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPrefixList.EntryProperty"
    },
    "@aws-cdk/aws-ec2.CfnPrefixListProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::PrefixList`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnPrefixListProps: ec2.CfnPrefixListProps = {\n  addressFamily: 'addressFamily',\n  maxEntries: 123,\n  prefixListName: 'prefixListName',\n\n  // the properties below are optional\n  entries: [{\n    cidr: 'cidr',\n\n    // the properties below are optional\n    description: 'description',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPrefixListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15238
      },
      "name": "CfnPrefixListProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-addressfamily"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.AddressFamily`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15244
          },
          "name": "addressFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-entries"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.Entries`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15262
          },
          "name": "entries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-maxentries"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.MaxEntries`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15250
          },
          "name": "maxEntries",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-prefixlistname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.PrefixListName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15256
          },
          "name": "prefixListName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::PrefixList.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15268
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPrefixListProps"
    },
    "@aws-cdk/aws-ec2.CfnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Route",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Route`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnRoute = new ec2.CfnRoute(this, 'MyCfnRoute', {\n  routeTableId: 'routeTableId',\n\n  // the properties below are optional\n  carrierGatewayId: 'carrierGatewayId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  destinationIpv6CidrBlock: 'destinationIpv6CidrBlock',\n  egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n  gatewayId: 'gatewayId',\n  instanceId: 'instanceId',\n  localGatewayId: 'localGatewayId',\n  natGatewayId: 'natGatewayId',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayId: 'transitGatewayId',\n  vpcEndpointId: 'vpcEndpointId',\n  vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Route`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15820
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15710
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15845
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15868
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRoute",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.CarrierGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15745
          },
          "name": "carrierGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15714
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15850
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15751
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.DestinationIpv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15757
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.EgressOnlyInternetGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15763
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.GatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15769
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15775
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.LocalGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15781
          },
          "name": "localGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.NatGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15787
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15793
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.RouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15739
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15799
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.VpcEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15805
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.VpcPeeringConnectionId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15811
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRoute"
    },
    "@aws-cdk/aws-ec2.CfnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::Route`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnRouteProps: ec2.CfnRouteProps = {\n  routeTableId: 'routeTableId',\n\n  // the properties below are optional\n  carrierGatewayId: 'carrierGatewayId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  destinationIpv6CidrBlock: 'destinationIpv6CidrBlock',\n  egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n  gatewayId: 'gatewayId',\n  instanceId: 'instanceId',\n  localGatewayId: 'localGatewayId',\n  natGatewayId: 'natGatewayId',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayId: 'transitGatewayId',\n  vpcEndpointId: 'vpcEndpointId',\n  vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15540
      },
      "name": "CfnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.CarrierGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15552
          },
          "name": "carrierGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15558
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.DestinationIpv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15564
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.EgressOnlyInternetGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15570
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.GatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15576
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15582
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.LocalGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15588
          },
          "name": "localGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.NatGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15594
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15600
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.RouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15546
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15606
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.VpcEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15612
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Route.VpcPeeringConnectionId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15618
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::RouteTable",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::RouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnRouteTable = new ec2.CfnRouteTable(this, 'MyCfnRouteTable', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::RouteTable`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15999
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnRouteTableProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15950
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16014
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16026
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRouteTable",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "RouteTableId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15978
          },
          "name": "attrRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15954
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16019
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::RouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15990
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::RouteTable.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15984
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRouteTable"
    },
    "@aws-cdk/aws-ec2.CfnRouteTableProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::RouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnRouteTableProps: ec2.CfnRouteTableProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteTableProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15879
      },
      "name": "CfnRouteTableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::RouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15891
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::RouteTable.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15885
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRouteTableProps"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSecurityGroup = new ec2.CfnSecurityGroup(this, 'MyCfnSecurityGroup', {\n  groupDescription: 'groupDescription',\n\n  // the properties below are optional\n  groupName: 'groupName',\n  securityGroupEgress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    destinationPrefixListId: 'destinationPrefixListId',\n    destinationSecurityGroupId: 'destinationSecurityGroupId',\n    fromPort: 123,\n    toPort: 123,\n  }],\n  securityGroupIngress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    fromPort: 123,\n    sourcePrefixListId: 'sourcePrefixListId',\n    sourceSecurityGroupId: 'sourceSecurityGroupId',\n    sourceSecurityGroupName: 'sourceSecurityGroupName',\n    sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n    toPort: 123,\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SecurityGroup`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 16222
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16144
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16242
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16258
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroup",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16172
          },
          "name": "attrGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VpcId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16177
          },
          "name": "attrVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16148
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16247
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.GroupDescription`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16183
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.GroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16189
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupEgress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16195
          },
          "name": "securityGroupEgress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupIngress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16201
          },
          "name": "securityGroupIngress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16207
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16213
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroup"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst egressProperty: ec2.CfnSecurityGroup.EgressProperty = {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  destinationPrefixListId: 'destinationPrefixListId',\n  destinationSecurityGroupId: 'destinationSecurityGroupId',\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16268
      },
      "name": "EgressProperty",
      "namespace": "CfnSecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16273
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16278
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16283
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destinationprefixlistid"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.DestinationPrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16288
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destsecgroupid"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.DestinationSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16293
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16298
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16303
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.EgressProperty.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16308
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroup.EgressProperty"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ingressProperty: ec2.CfnSecurityGroup.IngressProperty = {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  fromPort: 123,\n  sourcePrefixListId: 'sourcePrefixListId',\n  sourceSecurityGroupId: 'sourceSecurityGroupId',\n  sourceSecurityGroupName: 'sourceSecurityGroupName',\n  sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16387
      },
      "name": "IngressProperty",
      "namespace": "CfnSecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16392
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16397
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16402
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16407
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16412
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-securitygroup-ingress-sourceprefixlistid"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.SourcePrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16417
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupid"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.SourceSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16422
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupname"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.SourceSecurityGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16427
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupownerid"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.SourceSecurityGroupOwnerId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16432
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport"
            },
            "stability": "external",
            "summary": "`CfnSecurityGroup.IngressProperty.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16437
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroup.IngressProperty"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupEgress": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroupEgress",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroupEgress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSecurityGroupEgress = new ec2.CfnSecurityGroupEgress(this, 'MyCfnSecurityGroupEgress', {\n  groupId: 'groupId',\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  destinationPrefixListId: 'destinationPrefixListId',\n  destinationSecurityGroupId: 'destinationSecurityGroupId',\n  fromPort: 123,\n  toPort: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgress",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SecurityGroupEgress`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 16744
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16658
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16766
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16785
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroupEgress",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16662
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16771
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16699
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIpv6`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16705
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16711
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationPrefixListId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16717
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationSecurityGroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16723
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.FromPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16729
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.GroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16687
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.IpProtocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16693
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.ToPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16735
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupEgress"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::SecurityGroupEgress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSecurityGroupEgressProps: ec2.CfnSecurityGroupEgressProps = {\n  groupId: 'groupId',\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  destinationPrefixListId: 'destinationPrefixListId',\n  destinationSecurityGroupId: 'destinationSecurityGroupId',\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16523
      },
      "name": "CfnSecurityGroupEgressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16541
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16547
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16553
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationPrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16559
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16565
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16571
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.GroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16529
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16535
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupEgress.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16577
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupEgressProps"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupIngress": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroupIngress",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroupIngress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSecurityGroupIngress = new ec2.CfnSecurityGroupIngress(this, 'MyCfnSecurityGroupIngress', {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  fromPort: 123,\n  groupId: 'groupId',\n  groupName: 'groupName',\n  sourcePrefixListId: 'sourcePrefixListId',\n  sourceSecurityGroupId: 'sourceSecurityGroupId',\n  sourceSecurityGroupName: 'sourceSecurityGroupName',\n  sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n  toPort: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngress",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SecurityGroupIngress`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 17061
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16957
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17085
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17107
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroupIngress",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16961
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17090
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16992
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIpv6`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16998
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17004
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.FromPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17010
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17016
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17022
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.IpProtocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16986
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourcePrefixListId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17028
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17034
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17040
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupOwnerId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17046
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.ToPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17052
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupIngress"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::SecurityGroupIngress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSecurityGroupIngressProps: ec2.CfnSecurityGroupIngressProps = {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  fromPort: 123,\n  groupId: 'groupId',\n  groupName: 'groupName',\n  sourcePrefixListId: 'sourcePrefixListId',\n  sourceSecurityGroupId: 'sourceSecurityGroupId',\n  sourceSecurityGroupName: 'sourceSecurityGroupName',\n  sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16796
      },
      "name": "CfnSecurityGroupIngressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16808
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16814
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16820
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16826
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16832
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16838
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16802
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourcePrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16844
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16850
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16856
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupOwnerId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16862
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroupIngress.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16868
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupIngressProps"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::SecurityGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSecurityGroupProps: ec2.CfnSecurityGroupProps = {\n  groupDescription: 'groupDescription',\n\n  // the properties below are optional\n  groupName: 'groupName',\n  securityGroupEgress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    destinationPrefixListId: 'destinationPrefixListId',\n    destinationSecurityGroupId: 'destinationSecurityGroupId',\n    fromPort: 123,\n    toPort: 123,\n  }],\n  securityGroupIngress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    fromPort: 123,\n    sourcePrefixListId: 'sourcePrefixListId',\n    sourceSecurityGroupId: 'sourceSecurityGroupId',\n    sourceSecurityGroupName: 'sourceSecurityGroupName',\n    sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n    toPort: 123,\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16037
      },
      "name": "CfnSecurityGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.GroupDescription`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16043
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16049
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupEgress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16055
          },
          "name": "securityGroupEgress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupIngress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16061
          },
          "name": "securityGroupIngress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16067
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SecurityGroup.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16073
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupProps"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SpotFleet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SpotFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSpotFleet = new ec2.CfnSpotFleet(this, 'MyCfnSpotFleet', {\n  spotFleetRequestConfigData: {\n    iamFleetRole: 'iamFleetRole',\n    targetCapacity: 123,\n\n    // the properties below are optional\n    allocationStrategy: 'allocationStrategy',\n    context: 'context',\n    excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    launchSpecifications: [{\n      imageId: 'imageId',\n\n      // the properties below are optional\n      blockDeviceMappings: [{\n        deviceName: 'deviceName',\n\n        // the properties below are optional\n        ebs: {\n          deleteOnTermination: false,\n          encrypted: false,\n          iops: 123,\n          snapshotId: 'snapshotId',\n          volumeSize: 123,\n          volumeType: 'volumeType',\n        },\n        noDevice: 'noDevice',\n        virtualName: 'virtualName',\n      }],\n      ebsOptimized: false,\n      iamInstanceProfile: {\n        arn: 'arn',\n      },\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      kernelId: 'kernelId',\n      keyName: 'keyName',\n      monitoring: {\n        enabled: false,\n      },\n      networkInterfaces: [{\n        associatePublicIpAddress: false,\n        deleteOnTermination: false,\n        description: 'description',\n        deviceIndex: 123,\n        groups: ['groups'],\n        ipv6AddressCount: 123,\n        ipv6Addresses: [{\n          ipv6Address: 'ipv6Address',\n        }],\n        networkInterfaceId: 'networkInterfaceId',\n        privateIpAddresses: [{\n          privateIpAddress: 'privateIpAddress',\n\n          // the properties below are optional\n          primary: false,\n        }],\n        secondaryPrivateIpAddressCount: 123,\n        subnetId: 'subnetId',\n      }],\n      placement: {\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        tenancy: 'tenancy',\n      },\n      ramdiskId: 'ramdiskId',\n      securityGroups: [{\n        groupId: 'groupId',\n      }],\n      spotPrice: 'spotPrice',\n      subnetId: 'subnetId',\n      tagSpecifications: [{\n        resourceType: 'resourceType',\n        tags: [{\n          key: 'key',\n          value: 'value',\n        }],\n      }],\n      userData: 'userData',\n      weightedCapacity: 123,\n    }],\n    launchTemplateConfigs: [{\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      overrides: [{\n        availabilityZone: 'availabilityZone',\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        spotPrice: 'spotPrice',\n        subnetId: 'subnetId',\n        weightedCapacity: 123,\n      }],\n    }],\n    loadBalancersConfig: {\n      classicLoadBalancersConfig: {\n        classicLoadBalancers: [{\n          name: 'name',\n        }],\n      },\n      targetGroupsConfig: {\n        targetGroups: [{\n          arn: 'arn',\n        }],\n      },\n    },\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandMaxTotalPrice: 'onDemandMaxTotalPrice',\n    onDemandTargetCapacity: 123,\n    replaceUnhealthyInstances: false,\n    spotMaintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    spotMaxTotalPrice: 'spotMaxTotalPrice',\n    spotPrice: 'spotPrice',\n    targetCapacityUnitType: 'targetCapacityUnitType',\n    terminateInstancesWithExpiration: false,\n    type: 'type',\n    validFrom: 'validFrom',\n    validUntil: 'validUntil',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SpotFleet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 17223
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSpotFleetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17180
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17237
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17248
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSpotFleet",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17208
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17184
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17242
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SpotFleet.SpotFleetRequestConfigData`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17214
          },
          "name": "spotFleetRequestConfigData",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst acceleratorCountRequestProperty: ec2.CfnSpotFleet.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17258
      },
      "name": "AcceleratorCountRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html#cfn-ec2-spotfleet-acceleratorcountrequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.AcceleratorCountRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17263
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html#cfn-ec2-spotfleet-acceleratorcountrequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.AcceleratorCountRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17268
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.AcceleratorCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst acceleratorTotalMemoryMiBRequestProperty: ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17328
      },
      "name": "AcceleratorTotalMemoryMiBRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html#cfn-ec2-spotfleet-acceleratortotalmemorymibrequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17333
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html#cfn-ec2-spotfleet-acceleratortotalmemorymibrequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17338
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst baselineEbsBandwidthMbpsRequestProperty: ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17398
      },
      "name": "BaselineEbsBandwidthMbpsRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-spotfleet-baselineebsbandwidthmbpsrequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17403
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-spotfleet-baselineebsbandwidthmbpsrequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17408
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst blockDeviceMappingProperty: ec2.CfnSpotFleet.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    snapshotId: 'snapshotId',\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: 'noDevice',\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17468
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-devicename"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17473
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-ebs"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.Ebs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17478
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-nodevice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.NoDevice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17483
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-virtualname"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.VirtualName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17488
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst classicLoadBalancerProperty: ec2.CfnSpotFleet.ClassicLoadBalancerProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17555
      },
      "name": "ClassicLoadBalancerProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html#cfn-ec2-spotfleet-classicloadbalancer-name"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.ClassicLoadBalancerProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17560
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.ClassicLoadBalancerProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst classicLoadBalancersConfigProperty: ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty = {\n  classicLoadBalancers: [{\n    name: 'name',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17618
      },
      "name": "ClassicLoadBalancersConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html#cfn-ec2-spotfleet-classicloadbalancersconfig-classicloadbalancers"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.ClassicLoadBalancersConfigProperty.ClassicLoadBalancers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17623
          },
          "name": "classicLoadBalancers",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.ClassicLoadBalancersConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ebsBlockDeviceProperty: ec2.CfnSpotFleet.EbsBlockDeviceProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17681
      },
      "name": "EbsBlockDeviceProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-deleteontermination"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17686
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-encrypted"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17691
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-iops"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17696
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-snapshotid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17701
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-volumesize"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.VolumeSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17706
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-volumetype"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17711
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.EbsBlockDeviceProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst fleetLaunchTemplateSpecificationProperty: ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17783
      },
      "name": "FleetLaunchTemplateSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplateid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17788
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplatename"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17793
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-version"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17798
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.FleetLaunchTemplateSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-groupidentifier.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst groupIdentifierProperty: ec2.CfnSpotFleet.GroupIdentifierProperty = {\n  groupId: 'groupId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17862
      },
      "name": "GroupIdentifierProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-groupidentifier.html#cfn-ec2-spotfleet-groupidentifier-groupid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.GroupIdentifierProperty.GroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17867
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.GroupIdentifierProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-iaminstanceprofilespecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst iamInstanceProfileSpecificationProperty: ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty = {\n  arn: 'arn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17925
      },
      "name": "IamInstanceProfileSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-iaminstanceprofilespecification.html#cfn-ec2-spotfleet-iaminstanceprofilespecification-arn"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.IamInstanceProfileSpecificationProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17930
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.IamInstanceProfileSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceIpv6AddressProperty: ec2.CfnSpotFleet.InstanceIpv6AddressProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17987
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html#cfn-ec2-spotfleet-instanceipv6address-ipv6address"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceIpv6AddressProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17992
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.InstanceIpv6AddressProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceNetworkInterfaceSpecificationProperty: ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty = {\n  associatePublicIpAddress: false,\n  deleteOnTermination: false,\n  description: 'description',\n  deviceIndex: 123,\n  groups: ['groups'],\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddresses: [{\n    privateIpAddress: 'privateIpAddress',\n\n    // the properties below are optional\n    primary: false,\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18050
      },
      "name": "InstanceNetworkInterfaceSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-associatepublicipaddress"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.AssociatePublicIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18055
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deleteontermination"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18060
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-description"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18065
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deviceindex"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18070
          },
          "name": "deviceIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-groups"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Groups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18075
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresscount"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18080
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresses"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18085
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18090
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-privateipaddresses"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18095
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-secondaryprivateipaddresscount"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18100
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-subnetid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18105
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceRequirementsRequestProperty: ec2.CfnSpotFleet.InstanceRequirementsRequestProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18192
      },
      "name": "InstanceRequirementsRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratorcount"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.AcceleratorCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18197
          },
          "name": "acceleratorCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratormanufacturers"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.AcceleratorManufacturers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18202
          },
          "name": "acceleratorManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratornames"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.AcceleratorNames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18207
          },
          "name": "acceleratorNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratortotalmemorymib"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.AcceleratorTotalMemoryMiB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18212
          },
          "name": "acceleratorTotalMemoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratortypes"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.AcceleratorTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18217
          },
          "name": "acceleratorTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-baremetal"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.BareMetal`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18222
          },
          "name": "bareMetal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-baselineebsbandwidthmbps"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.BaselineEbsBandwidthMbps`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18227
          },
          "name": "baselineEbsBandwidthMbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-burstableperformance"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.BurstablePerformance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18232
          },
          "name": "burstablePerformance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-cpumanufacturers"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.CpuManufacturers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18237
          },
          "name": "cpuManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-excludedinstancetypes"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.ExcludedInstanceTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18242
          },
          "name": "excludedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-instancegenerations"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.InstanceGenerations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18247
          },
          "name": "instanceGenerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-localstorage"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.LocalStorage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18252
          },
          "name": "localStorage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-localstoragetypes"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.LocalStorageTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18257
          },
          "name": "localStorageTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-memorygibpervcpu"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.MemoryGiBPerVCpu`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18262
          },
          "name": "memoryGiBPerVCpu",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-memorymib"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.MemoryMiB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18267
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-networkinterfacecount"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.NetworkInterfaceCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18272
          },
          "name": "networkInterfaceCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-ondemandmaxpricepercentageoverlowestprice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.OnDemandMaxPricePercentageOverLowestPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18277
          },
          "name": "onDemandMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-requirehibernatesupport"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.RequireHibernateSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18282
          },
          "name": "requireHibernateSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-spotmaxpricepercentageoverlowestprice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.SpotMaxPricePercentageOverLowestPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18287
          },
          "name": "spotMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-totallocalstoragegb"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.TotalLocalStorageGB`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18292
          },
          "name": "totalLocalStorageGb",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-vcpucount"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.InstanceRequirementsRequestProperty.VCpuCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18297
          },
          "name": "vCpuCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.VCpuCountRangeRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.InstanceRequirementsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateConfigProperty: ec2.CfnSpotFleet.LaunchTemplateConfigProperty = {\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  overrides: [{\n    availabilityZone: 'availabilityZone',\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    spotPrice: 'spotPrice',\n    subnetId: 'subnetId',\n    weightedCapacity: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18414
      },
      "name": "LaunchTemplateConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-launchtemplatespecification"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateConfigProperty.LaunchTemplateSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18419
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-overrides"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateConfigProperty.Overrides`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18424
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.LaunchTemplateConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateOverridesProperty: ec2.CfnSpotFleet.LaunchTemplateOverridesProperty = {\n  availabilityZone: 'availabilityZone',\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  spotPrice: 'spotPrice',\n  subnetId: 'subnetId',\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18484
      },
      "name": "LaunchTemplateOverridesProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-availabilityzone"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18489
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancerequirements"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.InstanceRequirements`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18494
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancetype"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18499
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-spotprice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.SpotPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18504
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-subnetid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18509
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-weightedcapacity"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.WeightedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18514
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.LaunchTemplateOverridesProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst loadBalancersConfigProperty: ec2.CfnSpotFleet.LoadBalancersConfigProperty = {\n  classicLoadBalancersConfig: {\n    classicLoadBalancers: [{\n      name: 'name',\n    }],\n  },\n  targetGroupsConfig: {\n    targetGroups: [{\n      arn: 'arn',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18586
      },
      "name": "LoadBalancersConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-classicloadbalancersconfig"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LoadBalancersConfigProperty.ClassicLoadBalancersConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18591
          },
          "name": "classicLoadBalancersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-targetgroupsconfig"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.LoadBalancersConfigProperty.TargetGroupsConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18596
          },
          "name": "targetGroupsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.LoadBalancersConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst memoryGiBPerVCpuRequestProperty: ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18656
      },
      "name": "MemoryGiBPerVCpuRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html#cfn-ec2-spotfleet-memorygibpervcpurequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.MemoryGiBPerVCpuRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18661
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html#cfn-ec2-spotfleet-memorygibpervcpurequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.MemoryGiBPerVCpuRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18666
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.MemoryGiBPerVCpuRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst memoryMiBRequestProperty: ec2.CfnSpotFleet.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18726
      },
      "name": "MemoryMiBRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html#cfn-ec2-spotfleet-memorymibrequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.MemoryMiBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18731
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html#cfn-ec2-spotfleet-memorymibrequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.MemoryMiBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18736
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.MemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst networkInterfaceCountRequestProperty: ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18796
      },
      "name": "NetworkInterfaceCountRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html#cfn-ec2-spotfleet-networkinterfacecountrequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.NetworkInterfaceCountRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18801
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html#cfn-ec2-spotfleet-networkinterfacecountrequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.NetworkInterfaceCountRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18806
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.NetworkInterfaceCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst privateIpAddressSpecificationProperty: ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty = {\n  privateIpAddress: 'privateIpAddress',\n\n  // the properties below are optional\n  primary: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18866
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html#cfn-ec2-spotfleet-privateipaddressspecification-primary"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.PrivateIpAddressSpecificationProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18871
          },
          "name": "primary",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html#cfn-ec2-spotfleet-privateipaddressspecification-privateipaddress"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.PrivateIpAddressSpecificationProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18876
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.PrivateIpAddressSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotCapacityRebalanceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotCapacityRebalanceProperty: ec2.CfnSpotFleet.SpotCapacityRebalanceProperty = {\n  replacementStrategy: 'replacementStrategy',\n  terminationDelay: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotCapacityRebalanceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18937
      },
      "name": "SpotCapacityRebalanceProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html#cfn-ec2-spotfleet-spotcapacityrebalance-replacementstrategy"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotCapacityRebalanceProperty.ReplacementStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18942
          },
          "name": "replacementStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html#cfn-ec2-spotfleet-spotcapacityrebalance-terminationdelay"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotCapacityRebalanceProperty.TerminationDelay`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18947
          },
          "name": "terminationDelay",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotCapacityRebalanceProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotFleetLaunchSpecificationProperty: ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty = {\n  imageId: 'imageId',\n\n  // the properties below are optional\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: 'noDevice',\n    virtualName: 'virtualName',\n  }],\n  ebsOptimized: false,\n  iamInstanceProfile: {\n    arn: 'arn',\n  },\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  monitoring: {\n    enabled: false,\n  },\n  networkInterfaces: [{\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    deviceIndex: 123,\n    groups: ['groups'],\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddresses: [{\n      privateIpAddress: 'privateIpAddress',\n\n      // the properties below are optional\n      primary: false,\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placement: {\n    availabilityZone: 'availabilityZone',\n    groupName: 'groupName',\n    tenancy: 'tenancy',\n  },\n  ramdiskId: 'ramdiskId',\n  securityGroups: [{\n    groupId: 'groupId',\n  }],\n  spotPrice: 'spotPrice',\n  subnetId: 'subnetId',\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  userData: 'userData',\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19007
      },
      "name": "SpotFleetLaunchSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.BlockDeviceMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19012
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19017
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.IamInstanceProfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19022
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.ImageId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19027
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancerequirements"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.InstanceRequirements`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19032
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19037
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KernelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19042
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KeyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19047
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Monitoring`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19052
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.NetworkInterfaces`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19057
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Placement`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19062
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.RamdiskId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19067
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19072
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SpotPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19077
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19082
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19087
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.UserData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19092
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.WeightedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19097
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetLaunchSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetmonitoring.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotFleetMonitoringProperty: ec2.CfnSpotFleet.SpotFleetMonitoringProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19206
      },
      "name": "SpotFleetMonitoringProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetmonitoring.html#cfn-ec2-spotfleet-spotfleetmonitoring-enabled"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetMonitoringProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19211
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetMonitoringProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotFleetRequestConfigDataProperty: ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty = {\n  iamFleetRole: 'iamFleetRole',\n  targetCapacity: 123,\n\n  // the properties below are optional\n  allocationStrategy: 'allocationStrategy',\n  context: 'context',\n  excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n  instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n  instancePoolsToUseCount: 123,\n  launchSpecifications: [{\n    imageId: 'imageId',\n\n    // the properties below are optional\n    blockDeviceMappings: [{\n      deviceName: 'deviceName',\n\n      // the properties below are optional\n      ebs: {\n        deleteOnTermination: false,\n        encrypted: false,\n        iops: 123,\n        snapshotId: 'snapshotId',\n        volumeSize: 123,\n        volumeType: 'volumeType',\n      },\n      noDevice: 'noDevice',\n      virtualName: 'virtualName',\n    }],\n    ebsOptimized: false,\n    iamInstanceProfile: {\n      arn: 'arn',\n    },\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    kernelId: 'kernelId',\n    keyName: 'keyName',\n    monitoring: {\n      enabled: false,\n    },\n    networkInterfaces: [{\n      associatePublicIpAddress: false,\n      deleteOnTermination: false,\n      description: 'description',\n      deviceIndex: 123,\n      groups: ['groups'],\n      ipv6AddressCount: 123,\n      ipv6Addresses: [{\n        ipv6Address: 'ipv6Address',\n      }],\n      networkInterfaceId: 'networkInterfaceId',\n      privateIpAddresses: [{\n        privateIpAddress: 'privateIpAddress',\n\n        // the properties below are optional\n        primary: false,\n      }],\n      secondaryPrivateIpAddressCount: 123,\n      subnetId: 'subnetId',\n    }],\n    placement: {\n      availabilityZone: 'availabilityZone',\n      groupName: 'groupName',\n      tenancy: 'tenancy',\n    },\n    ramdiskId: 'ramdiskId',\n    securityGroups: [{\n      groupId: 'groupId',\n    }],\n    spotPrice: 'spotPrice',\n    subnetId: 'subnetId',\n    tagSpecifications: [{\n      resourceType: 'resourceType',\n      tags: [{\n        key: 'key',\n        value: 'value',\n      }],\n    }],\n    userData: 'userData',\n    weightedCapacity: 123,\n  }],\n  launchTemplateConfigs: [{\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n    overrides: [{\n      availabilityZone: 'availabilityZone',\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      spotPrice: 'spotPrice',\n      subnetId: 'subnetId',\n      weightedCapacity: 123,\n    }],\n  }],\n  loadBalancersConfig: {\n    classicLoadBalancersConfig: {\n      classicLoadBalancers: [{\n        name: 'name',\n      }],\n    },\n    targetGroupsConfig: {\n      targetGroups: [{\n        arn: 'arn',\n      }],\n    },\n  },\n  onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n  onDemandMaxTotalPrice: 'onDemandMaxTotalPrice',\n  onDemandTargetCapacity: 123,\n  replaceUnhealthyInstances: false,\n  spotMaintenanceStrategies: {\n    capacityRebalance: {\n      replacementStrategy: 'replacementStrategy',\n      terminationDelay: 123,\n    },\n  },\n  spotMaxTotalPrice: 'spotMaxTotalPrice',\n  spotPrice: 'spotPrice',\n  targetCapacityUnitType: 'targetCapacityUnitType',\n  terminateInstancesWithExpiration: false,\n  type: 'type',\n  validFrom: 'validFrom',\n  validUntil: 'validUntil',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19268
      },
      "name": "SpotFleetRequestConfigDataProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.AllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19273
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-context"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.Context`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19278
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ExcessCapacityTerminationPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19283
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.IamFleetRole`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19288
          },
          "name": "iamFleetRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instanceinterruptionbehavior"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.InstanceInterruptionBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19293
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instancepoolstousecount"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.InstancePoolsToUseCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19298
          },
          "name": "instancePoolsToUseCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19303
          },
          "name": "launchSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchtemplateconfigs"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchTemplateConfigs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19308
          },
          "name": "launchTemplateConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-loadbalancersconfig"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.LoadBalancersConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19313
          },
          "name": "loadBalancersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandallocationstrategy"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.OnDemandAllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19318
          },
          "name": "onDemandAllocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandmaxtotalprice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.OnDemandMaxTotalPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19323
          },
          "name": "onDemandMaxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandtargetcapacity"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.OnDemandTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19328
          },
          "name": "onDemandTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ReplaceUnhealthyInstances`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19333
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaintenancestrategies"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.SpotMaintenanceStrategies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19338
          },
          "name": "spotMaintenanceStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaxtotalprice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.SpotMaxTotalPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19343
          },
          "name": "spotMaxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.SpotPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19348
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.TargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19353
          },
          "name": "targetCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacityunittype"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.TargetCapacityUnitType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19358
          },
          "name": "targetCapacityUnitType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.TerminateInstancesWithExpiration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19363
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19368
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19373
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidUntil`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19378
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetRequestConfigDataProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotFleetTagSpecificationProperty: ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19500
      },
      "name": "SpotFleetTagSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html#cfn-ec2-spotfleet-spotfleettagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetTagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19505
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html#cfn-ec2-spotfleet-spotfleettagspecification-tags"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotFleetTagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19510
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetTagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotmaintenancestrategies.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotMaintenanceStrategiesProperty: ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty = {\n  capacityRebalance: {\n    replacementStrategy: 'replacementStrategy',\n    terminationDelay: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19570
      },
      "name": "SpotMaintenanceStrategiesProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotmaintenancestrategies.html#cfn-ec2-spotfleet-spotmaintenancestrategies-capacityrebalance"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotMaintenanceStrategiesProperty.CapacityRebalance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19575
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotCapacityRebalanceProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotMaintenanceStrategiesProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst spotPlacementProperty: ec2.CfnSpotFleet.SpotPlacementProperty = {\n  availabilityZone: 'availabilityZone',\n  groupName: 'groupName',\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19632
      },
      "name": "SpotPlacementProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-availabilityzone"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotPlacementProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19637
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-groupname"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotPlacementProperty.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19642
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-tenancy"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.SpotPlacementProperty.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19647
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotPlacementProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst targetGroupProperty: ec2.CfnSpotFleet.TargetGroupProperty = {\n  arn: 'arn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19710
      },
      "name": "TargetGroupProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html#cfn-ec2-spotfleet-targetgroup-arn"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.TargetGroupProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19715
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.TargetGroupProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst targetGroupsConfigProperty: ec2.CfnSpotFleet.TargetGroupsConfigProperty = {\n  targetGroups: [{\n    arn: 'arn',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19773
      },
      "name": "TargetGroupsConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html#cfn-ec2-spotfleet-targetgroupsconfig-targetgroups"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.TargetGroupsConfigProperty.TargetGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19778
          },
          "name": "targetGroups",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.TargetGroupsConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst totalLocalStorageGBRequestProperty: ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19836
      },
      "name": "TotalLocalStorageGBRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html#cfn-ec2-spotfleet-totallocalstoragegbrequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.TotalLocalStorageGBRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19841
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html#cfn-ec2-spotfleet-totallocalstoragegbrequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.TotalLocalStorageGBRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19846
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.TotalLocalStorageGBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.VCpuCountRangeRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vCpuCountRangeRequestProperty: ec2.CfnSpotFleet.VCpuCountRangeRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.VCpuCountRangeRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19906
      },
      "name": "VCpuCountRangeRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html#cfn-ec2-spotfleet-vcpucountrangerequest-max"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.VCpuCountRangeRequestProperty.Max`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19911
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html#cfn-ec2-spotfleet-vcpucountrangerequest-min"
            },
            "stability": "external",
            "summary": "`CfnSpotFleet.VCpuCountRangeRequestProperty.Min`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19916
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.VCpuCountRangeRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::SpotFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSpotFleetProps: ec2.CfnSpotFleetProps = {\n  spotFleetRequestConfigData: {\n    iamFleetRole: 'iamFleetRole',\n    targetCapacity: 123,\n\n    // the properties below are optional\n    allocationStrategy: 'allocationStrategy',\n    context: 'context',\n    excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    launchSpecifications: [{\n      imageId: 'imageId',\n\n      // the properties below are optional\n      blockDeviceMappings: [{\n        deviceName: 'deviceName',\n\n        // the properties below are optional\n        ebs: {\n          deleteOnTermination: false,\n          encrypted: false,\n          iops: 123,\n          snapshotId: 'snapshotId',\n          volumeSize: 123,\n          volumeType: 'volumeType',\n        },\n        noDevice: 'noDevice',\n        virtualName: 'virtualName',\n      }],\n      ebsOptimized: false,\n      iamInstanceProfile: {\n        arn: 'arn',\n      },\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      kernelId: 'kernelId',\n      keyName: 'keyName',\n      monitoring: {\n        enabled: false,\n      },\n      networkInterfaces: [{\n        associatePublicIpAddress: false,\n        deleteOnTermination: false,\n        description: 'description',\n        deviceIndex: 123,\n        groups: ['groups'],\n        ipv6AddressCount: 123,\n        ipv6Addresses: [{\n          ipv6Address: 'ipv6Address',\n        }],\n        networkInterfaceId: 'networkInterfaceId',\n        privateIpAddresses: [{\n          privateIpAddress: 'privateIpAddress',\n\n          // the properties below are optional\n          primary: false,\n        }],\n        secondaryPrivateIpAddressCount: 123,\n        subnetId: 'subnetId',\n      }],\n      placement: {\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        tenancy: 'tenancy',\n      },\n      ramdiskId: 'ramdiskId',\n      securityGroups: [{\n        groupId: 'groupId',\n      }],\n      spotPrice: 'spotPrice',\n      subnetId: 'subnetId',\n      tagSpecifications: [{\n        resourceType: 'resourceType',\n        tags: [{\n          key: 'key',\n          value: 'value',\n        }],\n      }],\n      userData: 'userData',\n      weightedCapacity: 123,\n    }],\n    launchTemplateConfigs: [{\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      overrides: [{\n        availabilityZone: 'availabilityZone',\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        spotPrice: 'spotPrice',\n        subnetId: 'subnetId',\n        weightedCapacity: 123,\n      }],\n    }],\n    loadBalancersConfig: {\n      classicLoadBalancersConfig: {\n        classicLoadBalancers: [{\n          name: 'name',\n        }],\n      },\n      targetGroupsConfig: {\n        targetGroups: [{\n          arn: 'arn',\n        }],\n      },\n    },\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandMaxTotalPrice: 'onDemandMaxTotalPrice',\n    onDemandTargetCapacity: 123,\n    replaceUnhealthyInstances: false,\n    spotMaintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    spotMaxTotalPrice: 'spotMaxTotalPrice',\n    spotPrice: 'spotPrice',\n    targetCapacityUnitType: 'targetCapacityUnitType',\n    terminateInstancesWithExpiration: false,\n    type: 'type',\n    validFrom: 'validFrom',\n    validUntil: 'validUntil',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17118
      },
      "name": "CfnSpotFleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SpotFleet.SpotFleetRequestConfigData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17124
          },
          "name": "spotFleetRequestConfigData",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleetProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Subnet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Subnet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnet = new ec2.CfnSubnet(this, 'MyCfnSubnet', {\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  assignIpv6AddressOnCreation: false,\n  availabilityZone: 'availabilityZone',\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  mapPublicIpOnLaunch: false,\n  outpostArn: 'outpostArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Subnet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20208
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20103
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20234
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20252
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnet",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.AssignIpv6AddressOnCreation`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20169
          },
          "name": "assignIpv6AddressOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20131
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv6CidrBlocks"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20136
          },
          "name": "attrIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkAclAssociationId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20141
          },
          "name": "attrNetworkAclAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OutpostArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20146
          },
          "name": "attrOutpostArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VpcId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20151
          },
          "name": "attrVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20175
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20107
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20239
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20157
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.Ipv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20181
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.MapPublicIpOnLaunch`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20187
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.OutpostArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20193
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20199
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-awsec2subnet-prop-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20163
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnet"
    },
    "@aws-cdk/aws-ec2.CfnSubnetCidrBlock": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetCidrBlock",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SubnetCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnetCidrBlock = new ec2.CfnSubnetCidrBlock(this, 'MyCfnSubnetCidrBlock', {\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlock",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SubnetCidrBlock`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20379
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20335
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20394
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20406
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetCidrBlock",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20339
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20399
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20364
          },
          "name": "ipv6CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetCidrBlock.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20370
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetCidrBlock"
    },
    "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::SubnetCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnetCidrBlockProps: ec2.CfnSubnetCidrBlockProps = {\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20263
      },
      "name": "CfnSubnetCidrBlockProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20269
          },
          "name": "ipv6CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetCidrBlock.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20275
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetCidrBlockProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetNetworkAclAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SubnetNetworkAclAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnetNetworkAclAssociation = new ec2.CfnSubnetNetworkAclAssociation(this, 'MyCfnSubnetNetworkAclAssociation', {\n  networkAclId: 'networkAclId',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SubnetNetworkAclAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20538
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20489
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20554
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20566
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetNetworkAclAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AssociationId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20517
          },
          "name": "attrAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20493
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20559
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.NetworkAclId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20523
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20529
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetNetworkAclAssociation"
    },
    "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::SubnetNetworkAclAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnetNetworkAclAssociationProps: ec2.CfnSubnetNetworkAclAssociationProps = {\n  networkAclId: 'networkAclId',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20417
      },
      "name": "CfnSubnetNetworkAclAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.NetworkAclId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20423
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20429
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetNetworkAclAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::Subnet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnetProps: ec2.CfnSubnetProps = {\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  assignIpv6AddressOnCreation: false,\n  availabilityZone: 'availabilityZone',\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  mapPublicIpOnLaunch: false,\n  outpostArn: 'outpostArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19977
      },
      "name": "CfnSubnetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.AssignIpv6AddressOnCreation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19995
          },
          "name": "assignIpv6AddressOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20001
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19983
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.Ipv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20007
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.MapPublicIpOnLaunch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20013
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.OutpostArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20019
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20025
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-awsec2subnet-prop-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Subnet.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19989
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetRouteTableAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SubnetRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnetRouteTableAssociation = new ec2.CfnSubnetRouteTableAssociation(this, 'MyCfnSubnetRouteTableAssociation', {\n  routeTableId: 'routeTableId',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SubnetRouteTableAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20693
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20649
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20708
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20720
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetRouteTableAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20653
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20713
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-routetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.RouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20678
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20684
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetRouteTableAssociation"
    },
    "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::SubnetRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnSubnetRouteTableAssociationProps: ec2.CfnSubnetRouteTableAssociationProps = {\n  routeTableId: 'routeTableId',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20577
      },
      "name": "CfnSubnetRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-routetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.RouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20583
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20589
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetRouteTableAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilter": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorFilter",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorFilter`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorFilter = new ec2.CfnTrafficMirrorFilter(this, 'MyCfnTrafficMirrorFilter', /* all optional props */ {\n  description: 'description',\n  networkServices: ['networkServices'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilter",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorFilter`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20860
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20810
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20874
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20887
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorFilter",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20814
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20879
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilter.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20839
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-networkservices"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilter.NetworkServices`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20845
          },
          "name": "networkServices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilter.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20851
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilter"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TrafficMirrorFilter`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorFilterProps: ec2.CfnTrafficMirrorFilterProps = {\n  description: 'description',\n  networkServices: ['networkServices'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20731
      },
      "name": "CfnTrafficMirrorFilterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilter.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20737
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-networkservices"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilter.NetworkServices`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20743
          },
          "name": "networkServices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilter.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20749
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorFilterRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorFilterRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorFilterRule = new ec2.CfnTrafficMirrorFilterRule(this, 'MyCfnTrafficMirrorFilterRule', {\n  destinationCidrBlock: 'destinationCidrBlock',\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n  sourceCidrBlock: 'sourceCidrBlock',\n  trafficDirection: 'trafficDirection',\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n\n  // the properties below are optional\n  description: 'description',\n  destinationPortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n  protocol: 123,\n  sourcePortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorFilterRule`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 21138
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21046
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21165
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21185
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorFilterRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21050
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21170
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21111
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21075
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.DestinationPortRange`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21117
          },
          "name": "destinationPortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.Protocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21123
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.RuleAction`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21081
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.RuleNumber`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21087
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.SourceCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21093
          },
          "name": "sourceCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.SourcePortRange`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21129
          },
          "name": "sourcePortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.TrafficDirection`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21099
          },
          "name": "trafficDirection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.TrafficMirrorFilterId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21105
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterRule"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst trafficMirrorPortRangeProperty: ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty = {\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21195
      },
      "name": "TrafficMirrorPortRangeProperty",
      "namespace": "CfnTrafficMirrorFilterRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorportrange-fromport"
            },
            "stability": "external",
            "summary": "`CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21200
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorportrange-toport"
            },
            "stability": "external",
            "summary": "`CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21205
          },
          "name": "toPort",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRuleProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TrafficMirrorFilterRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorFilterRuleProps: ec2.CfnTrafficMirrorFilterRuleProps = {\n  destinationCidrBlock: 'destinationCidrBlock',\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n  sourceCidrBlock: 'sourceCidrBlock',\n  trafficDirection: 'trafficDirection',\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n\n  // the properties below are optional\n  description: 'description',\n  destinationPortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n  protocol: 123,\n  sourcePortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20898
      },
      "name": "CfnTrafficMirrorFilterRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20940
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20904
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.DestinationPortRange`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20946
          },
          "name": "destinationPortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20952
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.RuleAction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20910
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.RuleNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20916
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.SourceCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20922
          },
          "name": "sourceCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.SourcePortRange`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20958
          },
          "name": "sourcePortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.TrafficDirection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20928
          },
          "name": "trafficDirection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorFilterRule.TrafficMirrorFilterId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20934
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterRuleProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorSession": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorSession",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorSession`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorSession = new ec2.CfnTrafficMirrorSession(this, 'MyCfnTrafficMirrorSession', {\n  networkInterfaceId: 'networkInterfaceId',\n  sessionNumber: 123,\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n  trafficMirrorTargetId: 'trafficMirrorTargetId',\n\n  // the properties below are optional\n  description: 'description',\n  packetLength: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualNetworkId: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorSession",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorSession`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 21476
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorSessionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21396
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21499
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21517
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorSession",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21400
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21504
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21449
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21425
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-packetlength"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.PacketLength`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21455
          },
          "name": "packetLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-sessionnumber"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.SessionNumber`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21431
          },
          "name": "sessionNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21461
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.TrafficMirrorFilterId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21437
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrortargetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.TrafficMirrorTargetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21443
          },
          "name": "trafficMirrorTargetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-virtualnetworkid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.VirtualNetworkId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21467
          },
          "name": "virtualNetworkId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorSession"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorSessionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TrafficMirrorSession`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorSessionProps: ec2.CfnTrafficMirrorSessionProps = {\n  networkInterfaceId: 'networkInterfaceId',\n  sessionNumber: 123,\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n  trafficMirrorTargetId: 'trafficMirrorTargetId',\n\n  // the properties below are optional\n  description: 'description',\n  packetLength: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualNetworkId: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorSessionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21268
      },
      "name": "CfnTrafficMirrorSessionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21298
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21274
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-packetlength"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.PacketLength`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21304
          },
          "name": "packetLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-sessionnumber"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.SessionNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21280
          },
          "name": "sessionNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21310
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.TrafficMirrorFilterId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21286
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrortargetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.TrafficMirrorTargetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21292
          },
          "name": "trafficMirrorTargetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-virtualnetworkid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorSession.VirtualNetworkId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21316
          },
          "name": "virtualNetworkId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorSessionProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorTarget": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorTarget",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorTarget`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorTarget = new ec2.CfnTrafficMirrorTarget(this, 'MyCfnTrafficMirrorTarget', /* all optional props */ {\n  description: 'description',\n  networkInterfaceId: 'networkInterfaceId',\n  networkLoadBalancerArn: 'networkLoadBalancerArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorTarget",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorTarget`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 21672
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorTargetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21616
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21687
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21701
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorTarget",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21620
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21692
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21645
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21651
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkloadbalancerarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.NetworkLoadBalancerArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21657
          },
          "name": "networkLoadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21663
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorTarget"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorTargetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TrafficMirrorTarget`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTrafficMirrorTargetProps: ec2.CfnTrafficMirrorTargetProps = {\n  description: 'description',\n  networkInterfaceId: 'networkInterfaceId',\n  networkLoadBalancerArn: 'networkLoadBalancerArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21528
      },
      "name": "CfnTrafficMirrorTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21534
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21540
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkloadbalancerarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.NetworkLoadBalancerArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21546
          },
          "name": "networkLoadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TrafficMirrorTarget.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21552
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorTargetProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGateway = new ec2.CfnTransitGateway(this, 'MyCfnTransitGateway', /* all optional props */ {\n  amazonSideAsn: 123,\n  associationDefaultRouteTableId: 'associationDefaultRouteTableId',\n  autoAcceptSharedAttachments: 'autoAcceptSharedAttachments',\n  defaultRouteTableAssociation: 'defaultRouteTableAssociation',\n  defaultRouteTablePropagation: 'defaultRouteTablePropagation',\n  description: 'description',\n  dnsSupport: 'dnsSupport',\n  multicastSupport: 'multicastSupport',\n  propagationDefaultRouteTableId: 'propagationDefaultRouteTableId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayCidrBlocks: ['transitGatewayCidrBlocks'],\n  vpnEcmpSupport: 'vpnEcmpSupport',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 21981
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21872
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22005
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22027
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGateway",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.AmazonSideAsn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21906
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-associationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.AssociationDefaultRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21912
          },
          "name": "associationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21900
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.AutoAcceptSharedAttachments`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21918
          },
          "name": "autoAcceptSharedAttachments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21876
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22010
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTableAssociation`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21924
          },
          "name": "defaultRouteTableAssociation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTablePropagation`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21930
          },
          "name": "defaultRouteTablePropagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21936
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.DnsSupport`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21942
          },
          "name": "dnsSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.MulticastSupport`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21948
          },
          "name": "multicastSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-propagationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.PropagationDefaultRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21954
          },
          "name": "propagationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21960
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-transitgatewaycidrblocks"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.TransitGatewayCidrBlocks`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21966
          },
          "name": "transitGatewayCidrBlocks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.VpnEcmpSupport`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21972
          },
          "name": "vpnEcmpSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGateway"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayAttachment = new ec2.CfnTransitGatewayAttachment(this, 'MyCfnTransitGatewayAttachment', {\n  subnetIds: ['subnetIds'],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 22185
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22129
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22203
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22217
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22133
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22208
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.SubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22158
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22176
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22164
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22170
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayAttachment"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayAttachmentProps: ec2.CfnTransitGatewayAttachmentProps = {\n  subnetIds: ['subnetIds'],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22038
      },
      "name": "CfnTransitGatewayAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.SubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22044
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22062
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22050
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayAttachment.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22056
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayConnect": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayConnect",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayConnect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayConnect = new ec2.CfnTransitGatewayConnect(this, 'MyCfnTransitGatewayConnect', {\n  options: {\n    protocol: 'protocol',\n  },\n  transportTransitGatewayAttachmentId: 'transportTransitGatewayAttachmentId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayConnect`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 22379
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22309
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22399
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22412
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayConnect",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22337
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22342
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22347
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22352
          },
          "name": "attrTransitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22313
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22404
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayConnect.Options`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22358
          },
          "name": "options",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayConnect.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22370
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-transporttransitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayConnect.TransportTransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22364
          },
          "name": "transportTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayConnect"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewayconnect-transitgatewayconnectoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst transitGatewayConnectOptionsProperty: ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty = {\n  protocol: 'protocol',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22422
      },
      "name": "TransitGatewayConnectOptionsProperty",
      "namespace": "CfnTransitGatewayConnect",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewayconnect-transitgatewayconnectoptions.html#cfn-ec2-transitgatewayconnect-transitgatewayconnectoptions-protocol"
            },
            "stability": "external",
            "summary": "`CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22427
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayConnectProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayConnect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayConnectProps: ec2.CfnTransitGatewayConnectProps = {\n  options: {\n    protocol: 'protocol',\n  },\n  transportTransitGatewayAttachmentId: 'transportTransitGatewayAttachmentId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22228
      },
      "name": "CfnTransitGatewayConnectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayConnect.Options`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22234
          },
          "name": "options",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayConnect.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22246
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-transporttransitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayConnect.TransportTransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22240
          },
          "name": "transportTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayConnectProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomain": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastDomain",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastDomain`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\n\nconst cfnTransitGatewayMulticastDomain = new ec2.CfnTransitGatewayMulticastDomain(this, 'MyCfnTransitGatewayMulticastDomain', {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  options: options,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomain",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastDomain`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 22635
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22565
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22654
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22667
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastDomain",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22593
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22598
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayMulticastDomainArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22603
          },
          "name": "attrTransitGatewayMulticastDomainArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayMulticastDomainId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22608
          },
          "name": "attrTransitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22569
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22659
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomain.Options`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22620
          },
          "name": "options",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomain.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22626
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomain.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22614
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomain"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastDomainAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastDomainAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayMulticastDomainAssociation = new ec2.CfnTransitGatewayMulticastDomainAssociation(this, 'MyCfnTransitGatewayMulticastDomainAssociation', {\n  subnetId: 'subnetId',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastDomainAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 22825
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22760
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22845
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22858
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastDomainAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22788
          },
          "name": "attrResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22793
          },
          "name": "attrResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22798
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22764
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22850
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomainAssociation.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22804
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomainAssociation.TransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22810
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomainAssociation.TransitGatewayMulticastDomainId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22816
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomainAssociation"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayMulticastDomainAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayMulticastDomainAssociationProps: ec2.CfnTransitGatewayMulticastDomainAssociationProps = {\n  subnetId: 'subnetId',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22678
      },
      "name": "CfnTransitGatewayMulticastDomainAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomainAssociation.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22684
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomainAssociation.TransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22690
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomainAssociation.TransitGatewayMulticastDomainId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22696
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomainAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayMulticastDomain`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\n\nconst cfnTransitGatewayMulticastDomainProps: ec2.CfnTransitGatewayMulticastDomainProps = {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  options: options,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22485
      },
      "name": "CfnTransitGatewayMulticastDomainProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomain.Options`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22497
          },
          "name": "options",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomain.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22503
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastDomain.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22491
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomainProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMember": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastGroupMember",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastGroupMember`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayMulticastGroupMember = new ec2.CfnTransitGatewayMulticastGroupMember(this, 'MyCfnTransitGatewayMulticastGroupMember', {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMember",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastGroupMember`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 23041
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMemberProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22951
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23066
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23079
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastGroupMember",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupMember"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22979
          },
          "name": "attrGroupMember",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupSource"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22984
          },
          "name": "attrGroupSource",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "MemberType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22989
          },
          "name": "attrMemberType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22994
          },
          "name": "attrResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22999
          },
          "name": "attrResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SourceType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23004
          },
          "name": "attrSourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SubnetId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23009
          },
          "name": "attrSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23014
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22955
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23071
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupMember.GroupIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23020
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupMember.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23026
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupMember.TransitGatewayMulticastDomainId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23032
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupMember"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMemberProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayMulticastGroupMember`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayMulticastGroupMemberProps: ec2.CfnTransitGatewayMulticastGroupMemberProps = {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMemberProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22869
      },
      "name": "CfnTransitGatewayMulticastGroupMemberProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupMember.GroupIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22875
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupMember.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22881
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupMember.TransitGatewayMulticastDomainId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22887
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupMemberProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastGroupSource",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastGroupSource`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayMulticastGroupSource = new ec2.CfnTransitGatewayMulticastGroupSource(this, 'MyCfnTransitGatewayMulticastGroupSource', {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSource",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastGroupSource`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 23262
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23172
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23287
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23300
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastGroupSource",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupMember"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23200
          },
          "name": "attrGroupMember",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupSource"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23205
          },
          "name": "attrGroupSource",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "MemberType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23210
          },
          "name": "attrMemberType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23215
          },
          "name": "attrResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23220
          },
          "name": "attrResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SourceType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23225
          },
          "name": "attrSourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SubnetId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23230
          },
          "name": "attrSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23235
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23176
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23292
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-groupipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupSource.GroupIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23241
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupSource.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23247
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupSource.TransitGatewayMulticastDomainId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23253
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupSource"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayMulticastGroupSource`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayMulticastGroupSourceProps: ec2.CfnTransitGatewayMulticastGroupSourceProps = {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23090
      },
      "name": "CfnTransitGatewayMulticastGroupSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-groupipaddress"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupSource.GroupIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23096
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-networkinterfaceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupSource.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23102
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayMulticastGroupSource.TransitGatewayMulticastDomainId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23108
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupSourceProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayPeeringAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayPeeringAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayPeeringAttachment = new ec2.CfnTransitGatewayPeeringAttachment(this, 'MyCfnTransitGatewayPeeringAttachment', {\n  peerAccountId: 'peerAccountId',\n  peerRegion: 'peerRegion',\n  peerTransitGatewayId: 'peerTransitGatewayId',\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  options: {\n    dynamicRouting: 'dynamicRouting',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayPeeringAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 23504
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23421
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23528
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23544
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayPeeringAttachment",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23449
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23454
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23459
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23425
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23533
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.Options`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23489
          },
          "name": "options",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment.TransitGatewayPeeringAttachmentOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peeraccountid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.PeerAccountId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23465
          },
          "name": "peerAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peerregion"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.PeerRegion`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23471
          },
          "name": "peerRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peertransitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.PeerTransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23477
          },
          "name": "peerTransitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23495
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23483
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayPeeringAttachment"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment.TransitGatewayPeeringAttachmentOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewaypeeringattachment-transitgatewaypeeringattachmentoptions.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst transitGatewayPeeringAttachmentOptionsProperty: ec2.CfnTransitGatewayPeeringAttachment.TransitGatewayPeeringAttachmentOptionsProperty = {\n  dynamicRouting: 'dynamicRouting',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment.TransitGatewayPeeringAttachmentOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23554
      },
      "name": "TransitGatewayPeeringAttachmentOptionsProperty",
      "namespace": "CfnTransitGatewayPeeringAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewaypeeringattachment-transitgatewaypeeringattachmentoptions.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewaypeeringattachmentoptions-dynamicrouting"
            },
            "stability": "external",
            "summary": "`CfnTransitGatewayPeeringAttachment.TransitGatewayPeeringAttachmentOptionsProperty.DynamicRouting`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23559
          },
          "name": "dynamicRouting",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayPeeringAttachment.TransitGatewayPeeringAttachmentOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayPeeringAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayPeeringAttachmentProps: ec2.CfnTransitGatewayPeeringAttachmentProps = {\n  peerAccountId: 'peerAccountId',\n  peerRegion: 'peerRegion',\n  peerTransitGatewayId: 'peerTransitGatewayId',\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  options: {\n    dynamicRouting: 'dynamicRouting',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23311
      },
      "name": "CfnTransitGatewayPeeringAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.Options`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23341
          },
          "name": "options",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment.TransitGatewayPeeringAttachmentOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peeraccountid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.PeerAccountId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23317
          },
          "name": "peerAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peerregion"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.PeerRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23323
          },
          "name": "peerRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peertransitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.PeerTransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23329
          },
          "name": "peerTransitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23347
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayPeeringAttachment.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23335
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayPeeringAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayProps: ec2.CfnTransitGatewayProps = {\n  amazonSideAsn: 123,\n  associationDefaultRouteTableId: 'associationDefaultRouteTableId',\n  autoAcceptSharedAttachments: 'autoAcceptSharedAttachments',\n  defaultRouteTableAssociation: 'defaultRouteTableAssociation',\n  defaultRouteTablePropagation: 'defaultRouteTablePropagation',\n  description: 'description',\n  dnsSupport: 'dnsSupport',\n  multicastSupport: 'multicastSupport',\n  propagationDefaultRouteTableId: 'propagationDefaultRouteTableId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayCidrBlocks: ['transitGatewayCidrBlocks'],\n  vpnEcmpSupport: 'vpnEcmpSupport',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21712
      },
      "name": "CfnTransitGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.AmazonSideAsn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21718
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-associationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.AssociationDefaultRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21724
          },
          "name": "associationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.AutoAcceptSharedAttachments`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21730
          },
          "name": "autoAcceptSharedAttachments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTableAssociation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21736
          },
          "name": "defaultRouteTableAssociation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTablePropagation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21742
          },
          "name": "defaultRouteTablePropagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21748
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.DnsSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21754
          },
          "name": "dnsSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.MulticastSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21760
          },
          "name": "multicastSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-propagationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.PropagationDefaultRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21766
          },
          "name": "propagationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21772
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-transitgatewaycidrblocks"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.TransitGatewayCidrBlocks`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21778
          },
          "name": "transitGatewayCidrBlocks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGateway.VpnEcmpSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21784
          },
          "name": "vpnEcmpSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRoute = new ec2.CfnTransitGatewayRoute(this, 'MyCfnTransitGatewayRoute', {\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n\n  // the properties below are optional\n  blackhole: false,\n  destinationCidrBlock: 'destinationCidrBlock',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 23762
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23706
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23778
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23792
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRoute",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.Blackhole`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23741
          },
          "name": "blackhole",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23710
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23783
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23747
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23753
          },
          "name": "transitGatewayAttachmentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23735
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRoute"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRouteProps: ec2.CfnTransitGatewayRouteProps = {\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n\n  // the properties below are optional\n  blackhole: false,\n  destinationCidrBlock: 'destinationCidrBlock',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23617
      },
      "name": "CfnTransitGatewayRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.Blackhole`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23629
          },
          "name": "blackhole",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23635
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23641
          },
          "name": "transitGatewayAttachmentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23623
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTable",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRouteTable = new ec2.CfnTransitGatewayRouteTable(this, 'MyCfnTransitGatewayRouteTable', {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTable",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTable`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 23918
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23874
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23932
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23944
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23878
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23937
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23909
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23903
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTable"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTableAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRouteTableAssociation = new ec2.CfnTransitGatewayRouteTableAssociation(this, 'MyCfnTransitGatewayRouteTableAssociation', {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTableAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 24071
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24027
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24086
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24098
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTableAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24031
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24091
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24056
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24062
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTableAssociation"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRouteTableAssociationProps: ec2.CfnTransitGatewayRouteTableAssociationProps = {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23955
      },
      "name": "CfnTransitGatewayRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23961
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23967
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTableAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTablePropagation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTablePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRouteTablePropagation = new ec2.CfnTransitGatewayRouteTablePropagation(this, 'MyCfnTransitGatewayRouteTablePropagation', {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTablePropagation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 24225
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24181
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24240
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24252
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTablePropagation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24185
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24245
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24210
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24216
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTablePropagation"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRouteTablePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRouteTablePropagationProps: ec2.CfnTransitGatewayRouteTablePropagationProps = {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24109
      },
      "name": "CfnTransitGatewayRouteTablePropagationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24115
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24121
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTablePropagationProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnTransitGatewayRouteTableProps: ec2.CfnTransitGatewayRouteTableProps = {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23803
      },
      "name": "CfnTransitGatewayRouteTableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23815
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23809
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTableProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayVpcAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayVpcAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\n\nconst cfnTransitGatewayVpcAttachment = new ec2.CfnTransitGatewayVpcAttachment(this, 'MyCfnTransitGatewayVpcAttachment', /* all optional props */ {\n  addSubnetIds: ['addSubnetIds'],\n  options: options,\n  removeSubnetIds: ['removeSubnetIds'],\n  subnetIds: ['subnetIds'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayVpcAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 24457
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24378
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24476
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24493
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayVpcAttachment",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-addsubnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.AddSubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24412
          },
          "name": "addSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24406
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24382
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24481
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.Options`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24418
          },
          "name": "options",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-removesubnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.RemoveSubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24424
          },
          "name": "removeSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.SubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24430
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24436
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24442
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24448
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayVpcAttachment"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayVpcAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\n\nconst cfnTransitGatewayVpcAttachmentProps: ec2.CfnTransitGatewayVpcAttachmentProps = {\n  addSubnetIds: ['addSubnetIds'],\n  options: options,\n  removeSubnetIds: ['removeSubnetIds'],\n  subnetIds: ['subnetIds'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24263
      },
      "name": "CfnTransitGatewayVpcAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-addsubnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.AddSubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24269
          },
          "name": "addSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-options"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.Options`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24275
          },
          "name": "options",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-removesubnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.RemoveSubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24281
          },
          "name": "removeSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.SubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24287
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24293
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24299
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::TransitGatewayVpcAttachment.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24305
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayVpcAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnVPC": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPC",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html"
        },
        "example": "declare const cfnTemplate: cfn_inc.CfnInclude;\n\n// using from*Name()\nconst cfnBucket = cfnTemplate.getResource('Bucket') as s3.CfnBucket;\nconst bucket = s3.Bucket.fromBucketName(this, 'L2Bucket', cfnBucket.ref);\n\n// using from*Arn()\nconst cfnKey = cfnTemplate.getResource('Key') as kms.CfnKey;\nconst key = kms.Key.fromKeyArn(this, 'L2Key', cfnKey.attrArn);\n\n// using from*Attributes()\ndeclare const privateCfnSubnet1: ec2.CfnSubnet;\ndeclare const privateCfnSubnet2: ec2.CfnSubnet;\nconst cfnVpc = cfnTemplate.getResource('Vpc') as ec2.CfnVPC;\nconst vpc = ec2.Vpc.fromVpcAttributes(this, 'L2Vpc', {\n  vpcId: cfnVpc.ref,\n  availabilityZones: core.Fn.getAzs(),\n  privateSubnetIds: [privateCfnSubnet1.ref, privateCfnSubnet2.ref],\n});",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPC`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPC",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPC`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 24689
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24602
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24711
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24726
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPC",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24606
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CidrBlock"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24630
          },
          "name": "attrCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CidrBlockAssociations"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24635
          },
          "name": "attrCidrBlockAssociations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultNetworkAcl"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24640
          },
          "name": "attrDefaultNetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultSecurityGroup"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24645
          },
          "name": "attrDefaultSecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv6CidrBlocks"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24650
          },
          "name": "attrIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24716
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24680
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24656
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.EnableDnsHostnames`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24662
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.EnableDnsSupport`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24668
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.InstanceTenancy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24674
          },
          "name": "instanceTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPC"
    },
    "@aws-cdk/aws-ec2.CfnVPCCidrBlock": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCCidrBlock",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCCidrBlock = new ec2.CfnVPCCidrBlock(this, 'MyCfnVPCCidrBlock', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  amazonProvidedIpv6CidrBlock: false,\n  cidrBlock: 'cidrBlock',\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  ipv6Pool: 'ipv6Pool',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlock",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCCidrBlock`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 24897
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24835
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24914
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24929
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCCidrBlock",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24870
          },
          "name": "amazonProvidedIpv6CidrBlock",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24839
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24919
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24876
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.Ipv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24882
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.Ipv6Pool`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24888
          },
          "name": "ipv6Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24864
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCCidrBlock"
    },
    "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCCidrBlockProps: ec2.CfnVPCCidrBlockProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  amazonProvidedIpv6CidrBlock: false,\n  cidrBlock: 'cidrBlock',\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  ipv6Pool: 'ipv6Pool',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24737
      },
      "name": "CfnVPCCidrBlockProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24749
          },
          "name": "amazonProvidedIpv6CidrBlock",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24755
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.Ipv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24761
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.Ipv6Pool`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24767
          },
          "name": "ipv6Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCCidrBlock.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24743
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCCidrBlockProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCDHCPOptionsAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCDHCPOptionsAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCDHCPOptionsAssociation = new ec2.CfnVPCDHCPOptionsAssociation(this, 'MyCfnVPCDHCPOptionsAssociation', {\n  dhcpOptionsId: 'dhcpOptionsId',\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCDHCPOptionsAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 25061
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25012
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25077
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25089
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCDHCPOptionsAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25040
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25016
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25082
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.DhcpOptionsId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25046
          },
          "name": "dhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25052
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCDHCPOptionsAssociation"
    },
    "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCDHCPOptionsAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCDHCPOptionsAssociationProps: ec2.CfnVPCDHCPOptionsAssociationProps = {\n  dhcpOptionsId: 'dhcpOptionsId',\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24940
      },
      "name": "CfnVPCDHCPOptionsAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.DhcpOptionsId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24946
          },
          "name": "dhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24952
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCDHCPOptionsAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpoint",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const policyDocument: any;\n\nconst cfnVPCEndpoint = new ec2.CfnVPCEndpoint(this, 'MyCfnVPCEndpoint', {\n  serviceName: 'serviceName',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  policyDocument: policyDocument,\n  privateDnsEnabled: false,\n  routeTableIds: ['routeTableIds'],\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n  vpcEndpointType: 'vpcEndpointType',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpoint",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpoint`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 25321
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25226
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25345
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25363
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpoint",
      "properties": [
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTimestamp"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25254
          },
          "name": "attrCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DnsEntries"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25259
          },
          "name": "attrDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInterfaceIds"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25264
          },
          "name": "attrNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25230
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25350
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.PolicyDocument`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25282
          },
          "name": "policyDocument",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.PrivateDnsEnabled`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25288
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.RouteTableIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25294
          },
          "name": "routeTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.SecurityGroupIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25300
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.ServiceName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25270
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.SubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25306
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.VpcEndpointType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25312
          },
          "name": "vpcEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25276
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpoint"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotification": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointConnectionNotification",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointConnectionNotification`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCEndpointConnectionNotification = new ec2.CfnVPCEndpointConnectionNotification(this, 'MyCfnVPCEndpointConnectionNotification', {\n  connectionEvents: ['connectionEvents'],\n  connectionNotificationArn: 'connectionNotificationArn',\n\n  // the properties below are optional\n  serviceId: 'serviceId',\n  vpcEndpointId: 'vpcEndpointId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotification",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpointConnectionNotification`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 25520
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25464
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25537
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25551
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointConnectionNotification",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25468
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25542
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionEvents`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25493
          },
          "name": "connectionEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionNotificationArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25499
          },
          "name": "connectionNotificationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ServiceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25505
          },
          "name": "serviceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.VPCEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25511
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointConnectionNotification"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpointConnectionNotification`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCEndpointConnectionNotificationProps: ec2.CfnVPCEndpointConnectionNotificationProps = {\n  connectionEvents: ['connectionEvents'],\n  connectionNotificationArn: 'connectionNotificationArn',\n\n  // the properties below are optional\n  serviceId: 'serviceId',\n  vpcEndpointId: 'vpcEndpointId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25374
      },
      "name": "CfnVPCEndpointConnectionNotificationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionEvents`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25380
          },
          "name": "connectionEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionNotificationArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25386
          },
          "name": "connectionNotificationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ServiceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25392
          },
          "name": "serviceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.VPCEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25398
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointConnectionNotificationProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const policyDocument: any;\n\nconst cfnVPCEndpointProps: ec2.CfnVPCEndpointProps = {\n  serviceName: 'serviceName',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  policyDocument: policyDocument,\n  privateDnsEnabled: false,\n  routeTableIds: ['routeTableIds'],\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n  vpcEndpointType: 'vpcEndpointType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25100
      },
      "name": "CfnVPCEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.PolicyDocument`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25118
          },
          "name": "policyDocument",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.PrivateDnsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25124
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.RouteTableIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25130
          },
          "name": "routeTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25136
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.ServiceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25106
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.SubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25142
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.VpcEndpointType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25148
          },
          "name": "vpcEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpoint.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25112
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointService",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointService`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCEndpointService = new ec2.CfnVPCEndpointService(this, 'MyCfnVPCEndpointService', /* all optional props */ {\n  acceptanceRequired: false,\n  gatewayLoadBalancerArns: ['gatewayLoadBalancerArns'],\n  networkLoadBalancerArns: ['networkLoadBalancerArns'],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointService",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpointService`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 25691
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25641
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25705
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25718
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointService",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointService.AcceptanceRequired`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25670
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25645
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25710
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointService.GatewayLoadBalancerArns`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25676
          },
          "name": "gatewayLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointService.NetworkLoadBalancerArns`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25682
          },
          "name": "networkLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointService"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissions": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointServicePermissions",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointServicePermissions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCEndpointServicePermissions = new ec2.CfnVPCEndpointServicePermissions(this, 'MyCfnVPCEndpointServicePermissions', {\n  serviceId: 'serviceId',\n\n  // the properties below are optional\n  allowedPrincipals: ['allowedPrincipals'],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissions",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpointServicePermissions`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 25844
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25800
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25858
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25870
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointServicePermissions",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.AllowedPrincipals`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25835
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25804
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25863
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.ServiceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25829
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointServicePermissions"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpointServicePermissions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCEndpointServicePermissionsProps: ec2.CfnVPCEndpointServicePermissionsProps = {\n  serviceId: 'serviceId',\n\n  // the properties below are optional\n  allowedPrincipals: ['allowedPrincipals'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25729
      },
      "name": "CfnVPCEndpointServicePermissionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.AllowedPrincipals`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25741
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.ServiceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25735
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointServicePermissionsProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpointService`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCEndpointServiceProps: ec2.CfnVPCEndpointServiceProps = {\n  acceptanceRequired: false,\n  gatewayLoadBalancerArns: ['gatewayLoadBalancerArns'],\n  networkLoadBalancerArns: ['networkLoadBalancerArns'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25562
      },
      "name": "CfnVPCEndpointServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointService.AcceptanceRequired`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25568
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointService.GatewayLoadBalancerArns`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25574
          },
          "name": "gatewayLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCEndpointService.NetworkLoadBalancerArns`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25580
          },
          "name": "networkLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointServiceProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCGatewayAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCGatewayAttachment = new ec2.CfnVPCGatewayAttachment(this, 'MyCfnVPCGatewayAttachment', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  internetGatewayId: 'internetGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCGatewayAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26011
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25961
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26026
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26039
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCGatewayAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25965
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26031
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCGatewayAttachment.InternetGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25996
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25990
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpnGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26002
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCGatewayAttachment"
    },
    "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCGatewayAttachmentProps: ec2.CfnVPCGatewayAttachmentProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  internetGatewayId: 'internetGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25881
      },
      "name": "CfnVPCGatewayAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCGatewayAttachment.InternetGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25893
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25887
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpnGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25899
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCGatewayAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCPeeringConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCPeeringConnection",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCPeeringConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCPeeringConnection = new ec2.CfnVPCPeeringConnection(this, 'MyCfnVPCPeeringConnection', {\n  peerVpcId: 'peerVpcId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  peerOwnerId: 'peerOwnerId',\n  peerRegion: 'peerRegion',\n  peerRoleArn: 'peerRoleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnection",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCPeeringConnection`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26226
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26158
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26245
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26261
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCPeeringConnection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26162
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26250
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerOwnerId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26199
          },
          "name": "peerOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRegion`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26205
          },
          "name": "peerRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26211
          },
          "name": "peerRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerVpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26187
          },
          "name": "peerVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26217
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26193
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCPeeringConnection"
    },
    "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPCPeeringConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCPeeringConnectionProps: ec2.CfnVPCPeeringConnectionProps = {\n  peerVpcId: 'peerVpcId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  peerOwnerId: 'peerOwnerId',\n  peerRegion: 'peerRegion',\n  peerRoleArn: 'peerRoleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26050
      },
      "name": "CfnVPCPeeringConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerOwnerId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26068
          },
          "name": "peerOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26074
          },
          "name": "peerRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26080
          },
          "name": "peerRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerVpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26056
          },
          "name": "peerVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26086
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPCPeeringConnection.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26062
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCPeeringConnectionProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPC`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPCProps: ec2.CfnVPCProps = {\n  cidrBlock: 'cidrBlock',\n\n  // the properties below are optional\n  enableDnsHostnames: false,\n  enableDnsSupport: false,\n  instanceTenancy: 'instanceTenancy',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24504
      },
      "name": "CfnVPCProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24510
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.EnableDnsHostnames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24516
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.EnableDnsSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24522
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.InstanceTenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24528
          },
          "name": "instanceTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPC.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24534
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNConnection",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNConnection = new ec2.CfnVPNConnection(this, 'MyCfnVPNConnection', {\n  customerGatewayId: 'customerGatewayId',\n  type: 'type',\n\n  // the properties below are optional\n  staticRoutesOnly: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayId: 'transitGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n  vpnTunnelOptionsSpecifications: [{\n    preSharedKey: 'preSharedKey',\n    tunnelInsideCidr: 'tunnelInsideCidr',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNConnection`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26463
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26389
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26483
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26500
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNConnection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26393
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26488
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.CustomerGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26418
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.StaticRoutesOnly`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26430
          },
          "name": "staticRoutesOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26436
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26442
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26424
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.VpnGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26448
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.VpnTunnelOptionsSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26454
          },
          "name": "vpnTunnelOptionsSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnection"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpnTunnelOptionsSpecificationProperty: ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty = {\n  preSharedKey: 'preSharedKey',\n  tunnelInsideCidr: 'tunnelInsideCidr',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26510
      },
      "name": "VpnTunnelOptionsSpecificationProperty",
      "namespace": "CfnVPNConnection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-presharedkey"
            },
            "stability": "external",
            "summary": "`CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.PreSharedKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26515
          },
          "name": "preSharedKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-tunnelinsidecidr"
            },
            "stability": "external",
            "summary": "`CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.TunnelInsideCidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26520
          },
          "name": "tunnelInsideCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPNConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNConnectionProps: ec2.CfnVPNConnectionProps = {\n  customerGatewayId: 'customerGatewayId',\n  type: 'type',\n\n  // the properties below are optional\n  staticRoutesOnly: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayId: 'transitGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n  vpnTunnelOptionsSpecifications: [{\n    preSharedKey: 'preSharedKey',\n    tunnelInsideCidr: 'tunnelInsideCidr',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26272
      },
      "name": "CfnVPNConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.CustomerGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26278
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.StaticRoutesOnly`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26290
          },
          "name": "staticRoutesOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26296
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26302
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26284
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.VpnGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26308
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnection.VpnTunnelOptionsSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26314
          },
          "name": "vpnTunnelOptionsSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnectionProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNConnectionRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNConnectionRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNConnectionRoute = new ec2.CfnVPNConnectionRoute(this, 'MyCfnVPNConnectionRoute', {\n  destinationCidrBlock: 'destinationCidrBlock',\n  vpnConnectionId: 'vpnConnectionId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNConnectionRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26697
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26653
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26712
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26724
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNConnectionRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26657
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26717
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnectionRoute.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26682
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnectionRoute.VpnConnectionId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26688
          },
          "name": "vpnConnectionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnectionRoute"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPNConnectionRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNConnectionRouteProps: ec2.CfnVPNConnectionRouteProps = {\n  destinationCidrBlock: 'destinationCidrBlock',\n  vpnConnectionId: 'vpnConnectionId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26581
      },
      "name": "CfnVPNConnectionRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnectionRoute.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26587
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNConnectionRoute.VpnConnectionId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26593
          },
          "name": "vpnConnectionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnectionRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNGateway = new ec2.CfnVPNGateway(this, 'MyCfnVPNGateway', {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26865
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26815
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26880
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26893
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNGateway",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGateway.AmazonSideAsn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26850
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26819
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26885
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26856
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGateway.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26844
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGateway"
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPNGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNGatewayProps: ec2.CfnVPNGatewayProps = {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26735
      },
      "name": "CfnVPNGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGateway.AmazonSideAsn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26747
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26753
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGateway.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26741
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNGatewayRoutePropagation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNGatewayRoutePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNGatewayRoutePropagation = new ec2.CfnVPNGatewayRoutePropagation(this, 'MyCfnVPNGatewayRoutePropagation', {\n  routeTableIds: ['routeTableIds'],\n  vpnGatewayId: 'vpnGatewayId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNGatewayRoutePropagation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 27020
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26976
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27035
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27047
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNGatewayRoutePropagation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26980
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27040
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-routetableids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.RouteTableIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27005
          },
          "name": "routeTableIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-vpngatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.VpnGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27011
          },
          "name": "vpnGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGatewayRoutePropagation"
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VPNGatewayRoutePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVPNGatewayRoutePropagationProps: ec2.CfnVPNGatewayRoutePropagationProps = {\n  routeTableIds: ['routeTableIds'],\n  vpnGatewayId: 'vpnGatewayId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26904
      },
      "name": "CfnVPNGatewayRoutePropagationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-routetableids"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.RouteTableIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26910
          },
          "name": "routeTableIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-vpngatewayid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.VpnGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26916
          },
          "name": "vpnGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGatewayRoutePropagationProps"
    },
    "@aws-cdk/aws-ec2.CfnVolume": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Volume",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Volume`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVolume = new ec2.CfnVolume(this, 'MyCfnVolume', {\n  availabilityZone: 'availabilityZone',\n\n  // the properties below are optional\n  autoEnableIo: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  multiAttachEnabled: false,\n  outpostArn: 'outpostArn',\n  size: 123,\n  snapshotId: 'snapshotId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  throughput: 123,\n  volumeType: 'volumeType',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolume",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Volume`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 27323
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVolumeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27219
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27352
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27374
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVolume",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.AutoEnableIO`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27254
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27248
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27223
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27357
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Encrypted`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27260
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Iops`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27266
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.KmsKeyId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27272
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.MultiAttachEnabled`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27278
          },
          "name": "multiAttachEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.OutpostArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27284
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Size`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27290
          },
          "name": "size",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.SnapshotId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27296
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27302
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Throughput`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27308
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.VolumeType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27314
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolume"
    },
    "@aws-cdk/aws-ec2.CfnVolumeAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VolumeAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VolumeAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVolumeAttachment = new ec2.CfnVolumeAttachment(this, 'MyCfnVolumeAttachment', {\n  device: 'device',\n  instanceId: 'instanceId',\n  volumeId: 'volumeId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VolumeAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 27517
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27467
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27534
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27547
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVolumeAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27471
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27539
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VolumeAttachment.Device`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27496
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VolumeAttachment.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27502
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VolumeAttachment.VolumeId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27508
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolumeAttachment"
    },
    "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::VolumeAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVolumeAttachmentProps: ec2.CfnVolumeAttachmentProps = {\n  device: 'device',\n  instanceId: 'instanceId',\n  volumeId: 'volumeId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27385
      },
      "name": "CfnVolumeAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VolumeAttachment.Device`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27391
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VolumeAttachment.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27397
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::VolumeAttachment.VolumeId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27403
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolumeAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnVolumeProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::EC2::Volume`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst cfnVolumeProps: ec2.CfnVolumeProps = {\n  availabilityZone: 'availabilityZone',\n\n  // the properties below are optional\n  autoEnableIo: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  multiAttachEnabled: false,\n  outpostArn: 'outpostArn',\n  size: 123,\n  snapshotId: 'snapshotId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  throughput: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27058
      },
      "name": "CfnVolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.AutoEnableIO`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27070
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27064
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27076
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27082
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.KmsKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27088
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.MultiAttachEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27094
          },
          "name": "multiAttachEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.OutpostArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27100
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Size`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27106
          },
          "name": "size",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27112
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27118
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.Throughput`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27124
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype"
            },
            "stability": "external",
            "summary": "`AWS::EC2::Volume.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27130
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolumeProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnAuthorizationRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A client VPN authorization rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\n\nconst clientVpnAuthorizationRule = new ec2.ClientVpnAuthorizationRule(this, 'MyClientVpnAuthorizationRule', {\n  cidr: 'cidr',\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n  groupId: 'groupId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/client-vpn-authorization-rule.ts",
          "line": 54
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-authorization-rule.ts",
        "line": 53
      },
      "name": "ClientVpnAuthorizationRule",
      "symbolId": "lib/client-vpn-authorization-rule:ClientVpnAuthorizationRule"
    },
    "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "Options for a ClientVpnAuthorizationRule."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-authorization-rule.ts",
        "line": 9
      },
      "name": "ClientVpnAuthorizationRuleOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IPv4 address range, in CIDR notation, of the network for which access is being authorized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 14
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "stable",
            "summary": "A brief description of the authorization rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 29
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- authorize all groups",
            "stability": "stable",
            "summary": "The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 22
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/client-vpn-authorization-rule:ClientVpnAuthorizationRuleOptions"
    },
    "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a ClientVpnAuthorizationRule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\n\nconst clientVpnAuthorizationRuleProps: ec2.ClientVpnAuthorizationRuleProps = {\n  cidr: 'cidr',\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n  groupId: 'groupId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-authorization-rule.ts",
        "line": 35
      },
      "name": "ClientVpnAuthorizationRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "deprecated": "Use `clientVpnEndpoint` instead",
            "stability": "deprecated",
            "summary": "The client VPN endpoint to which to add the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 47
          },
          "name": "clientVpnEndoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "stability": "stable",
            "summary": "The client VPN endpoint to which to add the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 40
          },
          "name": "clientVpnEndpoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        }
      ],
      "symbolId": "lib/client-vpn-authorization-rule:ClientVpnAuthorizationRuleProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "A client VPN connnection."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/client-vpn-endpoint.ts",
          "line": 262
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IClientVpnEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 238
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an authorization rule to this endpoint."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 356
          },
          "name": "addAuthorizationRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a route to this endpoint."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 366
          },
          "name": "addRoute",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRoute"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 242
          },
          "name": "fromEndpointAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
            }
          },
          "static": true
        }
      ],
      "name": "ClientVpnEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 256
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The endpoint ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 251
          },
          "name": "endpointId",
          "overrides": "@aws-cdk/aws-ec2.IClientVpnEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force target networks associations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 258
          },
          "name": "targetNetworksAssociated",
          "overrides": "@aws-cdk/aws-ec2.IClientVpnEndpoint",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpoint"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpointAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes when importing an existing client VPN endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\n\nconst clientVpnEndpointAttributes: ec2.ClientVpnEndpointAttributes = {\n  endpointId: 'endpointId',\n  securityGroups: [securityGroup],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 223
      },
      "name": "ClientVpnEndpointAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The endpoint ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 227
          },
          "name": "endpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security groups associated with the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 232
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpointAttributes"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "Options for a client VPN endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 17
      },
      "name": "ClientVpnEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This automatically creates an authorization rule. Set this to `false` and\nuse `addAuthorizationRule()` to create your own rules instead.",
            "stability": "stable",
            "summary": "Whether to authorize all users to the VPC CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 152
          },
          "name": "authorizeAllUsersToVpcCidr",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The address range cannot overlap with the local CIDR of the VPC\nin which the associated subnet is located, or the routes that you add manually.\n\nChanging the address range will replace the Client VPN endpoint.\n\nThe CIDR block should be /22 or greater.",
            "stability": "stable",
            "summary": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 27
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use user-based authentication",
            "remarks": "The certificate must be signed by a certificate authority (CA) and it must\nbe provisioned in AWS Certificate Manager (ACM).",
            "stability": "stable",
            "summary": "The ARN of the client certificate for mutual authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 37
          },
          "name": "clientCertificateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no connection handler",
            "remarks": "The name of the Lambda function must begin with the `AWSClientVPN-` prefix",
            "stability": "stable",
            "summary": "The AWS Lambda function used for connection authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 76
          },
          "name": "clientConnectionHandler",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnConnectionHandler"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "stable",
            "summary": "A brief description of the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 83
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the DNS address configured on the device",
            "remarks": "A Client VPN endpoint can have up to two DNS servers.",
            "stability": "stable",
            "summary": "Information about the DNS servers to be used for DNS resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 135
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to enable connections logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 53
          },
          "name": "logging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new group is created",
            "stability": "stable",
            "summary": "A CloudWatch Logs log group for connection logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 60
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new stream is created",
            "stability": "stable",
            "summary": "A CloudWatch Logs log stream for connection logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 67
          },
          "name": "logStream",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogStream"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "VpnPort.HTTPS",
            "stability": "stable",
            "summary": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 126
          },
          "name": "port",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpnPort"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created",
            "stability": "stable",
            "summary": "The security groups to apply to the target network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 90
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Specify whether to enable the self-service portal for the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 97
          },
          "name": "selfServicePortal",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the server certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 102
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html",
            "stability": "stable",
            "summary": "Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 111
          },
          "name": "splitTunnel",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TransportProtocol.UDP",
            "stability": "stable",
            "summary": "The transport protocol to be used by the VPN session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 118
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.TransportProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use mutual authentication",
            "see": "https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/client-authentication.html",
            "stability": "stable",
            "summary": "The type of user-based authentication to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 46
          },
          "name": "userBasedAuthentication",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the VPC default strategy",
            "stability": "stable",
            "summary": "Subnets to associate to the client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 142
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpointOptions"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a client VPN endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const clientVpnConnectionHandler: ec2.IClientVpnConnectionHandler;\ndeclare const clientVpnUserBasedAuthentication: ec2.ClientVpnUserBasedAuthentication;\ndeclare const logGroup: logs.LogGroup;\ndeclare const logStream: logs.LogStream;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n\nconst clientVpnEndpointProps: ec2.ClientVpnEndpointProps = {\n  cidr: 'cidr',\n  serverCertificateArn: 'serverCertificateArn',\n  vpc: vpc,\n\n  // the properties below are optional\n  authorizeAllUsersToVpcCidr: false,\n  clientCertificateArn: 'clientCertificateArn',\n  clientConnectionHandler: clientVpnConnectionHandler,\n  description: 'description',\n  dnsServers: ['dnsServers'],\n  logging: false,\n  logGroup: logGroup,\n  logStream: logStream,\n  port: ec2.VpnPort.HTTPS,\n  securityGroups: [securityGroup],\n  selfServicePortal: false,\n  splitTunnel: false,\n  transportProtocol: ec2.TransportProtocol.TCP,\n  userBasedAuthentication: clientVpnUserBasedAuthentication,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.ClientVpnEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 213
      },
      "name": "ClientVpnEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC to connect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 217
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpointProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A client VPN route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\ndeclare const clientVpnRouteTarget: ec2.ClientVpnRouteTarget;\n\nconst clientVpnRoute = new ec2.ClientVpnRoute(this, 'MyClientVpnRoute', {\n  cidr: 'cidr',\n  target: clientVpnRouteTarget,\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRoute",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/client-vpn-route.ts",
          "line": 84
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 83
      },
      "name": "ClientVpnRoute",
      "symbolId": "lib/client-vpn-route:ClientVpnRoute"
    },
    "@aws-cdk/aws-ec2.ClientVpnRouteOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n\n// Client-to-client access\nendpoint.addRoute('Route', {\n  cidr: '10.100.0.0/16',\n  target: ec2.ClientVpnRouteTarget.local(),\n});",
        "stability": "stable",
        "summary": "Options for a ClientVpnRoute."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 10
      },
      "name": "ClientVpnRouteOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example:\n   - To add a route for Internet access, enter 0.0.0.0/0\n   - To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range\n   - To add a route for an on-premises network, enter the AWS Site-to-Site VPN\n     connection's IPv4 CIDR range\n   - To add a route for the local network, enter the client CIDR range",
            "stability": "stable",
            "summary": "The IPv4 address range, in CIDR notation, of the route destination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 21
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "stable",
            "summary": "A brief description of the authorization rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 28
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target for the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 33
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget"
          }
        }
      ],
      "symbolId": "lib/client-vpn-route:ClientVpnRouteOptions"
    },
    "@aws-cdk/aws-ec2.ClientVpnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a ClientVpnRoute.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\ndeclare const clientVpnRouteTarget: ec2.ClientVpnRouteTarget;\n\nconst clientVpnRouteProps: ec2.ClientVpnRouteProps = {\n  cidr: 'cidr',\n  target: clientVpnRouteTarget,\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.ClientVpnRouteOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 64
      },
      "name": "ClientVpnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "deprecated": "Use `clientVpnEndpoint` instead",
            "stability": "deprecated",
            "summary": "The client VPN endpoint to which to add the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 77
          },
          "name": "clientVpnEndoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "stability": "stable",
            "summary": "The client VPN endpoint to which to add the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 70
          },
          "name": "clientVpnEndpoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        }
      ],
      "symbolId": "lib/client-vpn-route:ClientVpnRouteProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnRouteTarget": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n\n// Client-to-client access\nendpoint.addRoute('Route', {\n  cidr: '10.100.0.0/16',\n  target: ec2.ClientVpnRouteTarget.local(),\n});",
        "stability": "stable",
        "summary": "Target for a client VPN route."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Local network."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 53
          },
          "name": "local",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The specified subnet must be an existing target network of the client VPN\nendpoint.",
            "stability": "stable",
            "summary": "Subnet."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 46
          },
          "name": "subnet",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget"
            }
          },
          "static": true
        }
      ],
      "name": "ClientVpnRouteTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The subnet ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 58
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/client-vpn-route:ClientVpnRouteTarget"
    },
    "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "User-based authentication for a client VPN endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 158
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Active Directory authentication."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 162
          },
          "name": "activeDirectory",
          "parameters": [
            {
              "name": "directoryId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Federated authentication."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 167
          },
          "name": "federated",
          "parameters": [
            {
              "name": "samlProvider",
              "type": {
                "fqn": "@aws-cdk/aws-iam.ISamlProvider"
              }
            },
            {
              "name": "selfServiceSamlProvider",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-iam.ISamlProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Renders the user based authentication."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 172
          },
          "name": "render",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ClientVpnUserBasedAuthentication",
      "symbolId": "lib/client-vpn-endpoint:ClientVpnUserBasedAuthentication"
    },
    "@aws-cdk/aws-ec2.CloudFormationInit": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "A CloudFormation-init configuration."
      },
      "fqn": "@aws-cdk/aws-ec2.CloudFormationInit",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a config with the given name to this CloudFormationInit object."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 54
          },
          "name": "addConfig",
          "parameters": [
            {
              "name": "configName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "config",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitConfig"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The new configset will reference the given configs in the given order.",
            "stability": "stable",
            "summary": "Add a config set with the given name to this CloudFormationInit object."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 66
          },
          "name": "addConfigSet",
          "parameters": [
            {
              "name": "configSetName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "configNames",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "As an app builder, use `instance.applyCloudFormationInit()` or\n`autoScalingGroup.applyCloudFormationInit()` to trigger this method.\n\nThis method does the following:\n\n- Renders the `AWS::CloudFormation::Init` object to the given resource's\n   metadata, potentially adding a `AWS::CloudFormation::Authentication` object\n   next to it if required.\n- Updates the instance role policy to be able to call the APIs required for\n   `cfn-init` and `cfn-signal` to work, and potentially add permissions to download\n   referenced asset and bucket resources.\n- Updates the given UserData with commands to execute the `cfn-init` script.",
            "stability": "stable",
            "summary": "Attach the CloudFormation Init config to the given resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 95
          },
          "name": "attach",
          "parameters": [
            {
              "name": "attachedResource",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            },
            {
              "name": "attachOptions",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AttachInitOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use an existing InitConfig object as the default and only config."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 27
          },
          "name": "fromConfig",
          "parameters": [
            {
              "name": "config",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitConfig"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Build a CloudFormationInit from config sets."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 39
          },
          "name": "fromConfigSets",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ConfigSetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Build a new config from a set of Init Elements."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 20
          },
          "name": "fromElements",
          "parameters": [
            {
              "name": "elements",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitElement"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
            }
          },
          "static": true,
          "variadic": true
        }
      ],
      "name": "CloudFormationInit",
      "symbolId": "lib/cfn-init:CloudFormationInit"
    },
    "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic NetworkACL entry props.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const aclCidr: ec2.AclCidr;\ndeclare const aclTraffic: ec2.AclTraffic;\n\nconst commonNetworkAclEntryOptions: ec2.CommonNetworkAclEntryOptions = {\n  cidr: aclCidr,\n  ruleNumber: 123,\n  traffic: aclTraffic,\n\n  // the properties below are optional\n  direction: ec2.TrafficDirection.EGRESS,\n  networkAclEntryName: 'networkAclEntryName',\n  ruleAction: ec2.Action.ALLOW,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 205
      },
      "name": "CommonNetworkAclEntryOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CIDR range to allow or deny."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 219
          },
          "name": "cidr",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclCidr"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TrafficDirection.INGRESS",
            "stability": "stable",
            "summary": "Traffic direction, with respect to the subnet, this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 231
          },
          "name": "direction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.TrafficDirection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a NetworkAclName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit group name.",
            "stability": "stable",
            "summary": "The name of the NetworkAclEntry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 214
          },
          "name": "networkAclEntryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ALLOW",
            "remarks": "Any traffic that is not explicitly allowed is automatically denied in a custom\nACL, all traffic is automatically allowed in a default ACL.",
            "stability": "stable",
            "summary": "Whether to allow or deny traffic that matches the rule; valid values are \"allow\" or \"deny\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 241
          },
          "name": "ruleAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Action"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "ACL entries are processed in ascending order by rule number.\nEntries can't use the same rule number unless one is an egress rule and the other is an ingress rule.",
            "stability": "stable",
            "summary": "Rule number to assign to the entry, such as 100."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 247
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What kind of traffic this ACL rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 224
          },
          "name": "traffic",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclTraffic"
          }
        }
      ],
      "symbolId": "lib/network-acl:CommonNetworkAclEntryOptions"
    },
    "@aws-cdk/aws-ec2.ConfigSetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "Options for CloudFormationInit.withConfigSets."
      },
      "fqn": "@aws-cdk/aws-ec2.ConfigSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 286
      },
      "name": "ConfigSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The sets of configs to pick from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 295
          },
          "name": "configs",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitConfig"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The definitions of each config set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 290
          },
          "name": "configSets",
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init:ConfigSetProps"
    },
    "@aws-cdk/aws-ec2.ConfigureNatOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options passed by the VPC when NAT needs to be configured.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const privateSubnet: ec2.PrivateSubnet;\ndeclare const publicSubnet: ec2.PublicSubnet;\ndeclare const vpc: ec2.Vpc;\n\nconst configureNatOptions: ec2.ConfigureNatOptions = {\n  natSubnets: [publicSubnet],\n  privateSubnets: [privateSubnet],\n  vpc: vpc,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.ConfigureNatOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 107
      },
      "name": "ConfigureNatOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The public subnets where the NAT providers need to be placed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 116
          },
          "name": "natSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.PublicSubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "There may be more private subnets than public subnets with NAT providers.",
            "stability": "stable",
            "summary": "The private subnets that need to route through the NAT providers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 123
          },
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC we're configuring NAT for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 111
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Vpc"
          }
        }
      ],
      "symbolId": "lib/nat:ConfigureNatOptions"
    },
    "@aws-cdk/aws-ec2.ConnectionRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst connectionRule: ec2.ConnectionRule = {\n  fromPort: 123,\n\n  // the properties below are optional\n  description: 'description',\n  protocol: 'protocol',\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.ConnectionRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 652
      },
      "name": "ConnectionRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No description",
            "remarks": "It is applied to both the ingress rule\nand the egress rule.",
            "stability": "stable",
            "summary": "Description of this connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 690
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you specify icmp for the IpProtocol property, you can specify\n-1 as a wildcard (i.e., any ICMP type number).",
            "stability": "stable",
            "summary": "Start of port range for the TCP and UDP protocols, or an ICMP type number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 672
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "tcp",
            "remarks": "Use -1 to specify all protocols. If you specify -1, or a protocol number\nother than tcp, udp, icmp, or 58 (ICMPv6), traffic on all ports is\nallowed, regardless of any ports you specify. For tcp, udp, and icmp, you\nmust specify a port range. For protocol 58 (ICMPv6), you can optionally\nspecify a port range; if you don't, traffic for all types and codes is\nallowed.",
            "stability": "stable",
            "summary": "The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 664
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If toPort is not specified, it will be the same as fromPort.",
            "remarks": "If you specify icmp for the IpProtocol property, you can specify -1 as a\nwildcard (i.e., any ICMP code).",
            "stability": "stable",
            "summary": "End of port range for the TCP and UDP protocols, or an ICMP code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 682
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/security-group:ConnectionRule"
    },
    "@aws-cdk/aws-ec2.Connections": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Security Groups can be thought of as a firewall for network-connected\ndevices. This class makes it easy to allow network connections to and\nfrom security groups, and between security groups individually. When\nestablishing connectivity between security groups, it will automatically\nadd rules in both security groups\n\nThis object can manage one or more security groups.",
        "stability": "stable",
        "summary": "Manage the allowed network connections for constructs with Security Groups.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const peer: ec2.IPeer;\ndeclare const port: ec2.Port;\ndeclare const securityGroup: ec2.SecurityGroup;\n\nconst connections = new ec2.Connections(/* all optional props */ {\n  defaultPort: port,\n  peer: peer,\n  securityGroups: [securityGroup],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.Connections",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/connections.ts",
          "line": 99
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ConnectionsProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 68
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a security group to the list of security groups managed by this object."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 118
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "name": "securityGroups",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Even if the peer has a default port, we will always use our default port.",
            "stability": "stable",
            "summary": "Allow connections from the peer on our default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 202
          },
          "name": "allowDefaultPortFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow default connections from all IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 222
          },
          "name": "allowDefaultPortFromAnyIpv4",
          "parameters": [
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow hosts inside the security group to connect to each other."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 212
          },
          "name": "allowDefaultPortInternally",
          "parameters": [
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Even if the peer has a default port, we will always use our default port.",
            "stability": "stable",
            "summary": "Allow connections from the peer on our default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 245
          },
          "name": "allowDefaultPortTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow connections from the peer on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 151
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow from any IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 193
          },
          "name": "allowFromAnyIpv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow hosts inside the security group to connect to each other on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 174
          },
          "name": "allowInternally",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow connections to the peer on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 128
          },
          "name": "allowTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow to all IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 186
          },
          "name": "allowToAnyIpv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow connections to the security group on their default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 232
          },
          "name": "allowToDefaultPort",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Connections",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 69
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default port configured for this connection peer, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 74
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Port"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 111
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/connections:Connections"
    },
    "@aws-cdk/aws-ec2.ConnectionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to intialize a new Connections object.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const peer: ec2.IPeer;\ndeclare const port: ec2.Port;\ndeclare const securityGroup: ec2.SecurityGroup;\n\nconst connectionsProps: ec2.ConnectionsProps = {\n  defaultPort: port,\n  peer: peer,\n  securityGroups: [securityGroup],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.ConnectionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 32
      },
      "name": "ConnectionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No default port",
            "stability": "stable",
            "summary": "Default port range for initiating connections to and from this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 54
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Port"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Derived from securityGroup if set.",
            "remarks": "This object is required, but will be derived from securityGroup if that is passed.",
            "stability": "stable",
            "summary": "Class that represents the rule by which others can connect to this connectable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 40
          },
          "name": "peer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPeer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No security groups",
            "stability": "stable",
            "summary": "What securityGroup(s) this object is managing connections for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 47
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/connections:ConnectionsProps"
    },
    "@aws-cdk/aws-ec2.CpuCredits": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-how-to.html",
        "stability": "stable",
        "summary": "Provides the options for specifying the CPU credit type for burstable EC2 instance types (T2, T3, T3a, etc)."
      },
      "fqn": "@aws-cdk/aws-ec2.CpuCredits",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 39
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-standard-mode.html",
            "stability": "stable",
            "summary": "Standard bursting mode."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-unlimited-mode.html",
            "stability": "stable",
            "summary": "Unlimited bursting mode."
          },
          "name": "UNLIMITED"
        }
      ],
      "name": "CpuCredits",
      "symbolId": "lib/launch-template:CpuCredits"
    },
    "@aws-cdk/aws-ec2.DefaultInstanceTenancy": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The default tenancy of instances launched into the VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 961
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Any instance launched into the VPC automatically has dedicated tenancy, unless you launch it with the default tenancy."
          },
          "name": "DEDICATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instances can be launched with any tenancy."
          },
          "name": "DEFAULT"
        }
      ],
      "name": "DefaultInstanceTenancy",
      "symbolId": "lib/vpc:DefaultInstanceTenancy"
    },
    "@aws-cdk/aws-ec2.EbsDeviceOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});",
        "stability": "stable",
        "summary": "Block device options for an EBS volume."
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 82
      },
      "name": "EbsDeviceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances",
            "stability": "stable",
            "summary": "Specifies whether the EBS volume is encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 91
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptions"
    },
    "@aws-cdk/aws-ec2.EbsDeviceOptionsBase": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base block device options for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ebsDeviceOptionsBase: ec2.EbsDeviceOptionsBase = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeType: ec2.EbsDeviceVolumeType.STANDARD,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceOptionsBase",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 48
      },
      "name": "EbsDeviceOptionsBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true for Amazon EC2 Auto Scaling, false otherwise (e.g. EBS)",
            "stability": "stable",
            "summary": "Indicates whether to delete the volume when the instance is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 54
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required for {@link EbsDeviceVolumeType.IO1}",
            "remarks": "Must only be set for {@link volumeType}: {@link EbsDeviceVolumeType.IO1}\n\nThe maximum ratio of IOPS to volume size (in GiB) is 50:1, so for 5,000 provisioned IOPS,\nyou need at least 100 GiB storage on the volume.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The number of I/O operations per second (IOPS) to provision for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 68
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link EbsDeviceVolumeType.GP2}",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The EBS volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 76
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.EbsDeviceVolumeType"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptionsBase"
    },
    "@aws-cdk/aws-ec2.EbsDeviceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of an EBS block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ebsDeviceProps: ec2.EbsDeviceProps = {\n  deleteOnTermination: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: ec2.EbsDeviceVolumeType.STANDARD,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 111
      },
      "name": "EbsDeviceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No snapshot will be used",
            "stability": "stable",
            "summary": "The snapshot ID of the volume to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 117
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceProps"
    },
    "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device options for an EBS volume created from a snapshot.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst ebsDeviceSnapshotOptions: ec2.EbsDeviceSnapshotOptions = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: ec2.EbsDeviceVolumeType.STANDARD,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 97
      },
      "name": "EbsDeviceSnapshotOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The snapshot size",
            "remarks": "If you specify volumeSize, it must be equal or greater than the size of the snapshot.",
            "stability": "stable",
            "summary": "The volume size, in Gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 105
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceSnapshotOptions"
    },
    "@aws-cdk/aws-ec2.EbsDeviceVolumeType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});",
        "stability": "stable",
        "summary": "Supported EBS volume types for blockDevices."
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceVolumeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 169
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP2."
          },
          "name": "GP2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP3."
          },
          "name": "GP3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provisioned IOPS SSD - IO1."
          },
          "name": "IO1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provisioned IOPS SSD - IO2."
          },
          "name": "IO2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cold HDD."
          },
          "name": "SC1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Throughput Optimized HDD."
          },
          "name": "ST1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Magnetic."
          },
          "name": "STANDARD"
        }
      ],
      "name": "EbsDeviceVolumeType",
      "symbolId": "lib/volume:EbsDeviceVolumeType"
    },
    "@aws-cdk/aws-ec2.EnableVpnGatewayOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the Vpc.enableVpnGateway() method.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\n\nconst enableVpnGatewayOptions: ec2.EnableVpnGatewayOptions = {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n  vpnRoutePropagation: [{\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.EnableVpnGatewayOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.VpnGatewayProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 115
      },
      "name": "EnableVpnGatewayOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "noPropagation",
            "stability": "stable",
            "summary": "Provide an array of subnets where the route propagation should be added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 120
          },
          "name": "vpnRoutePropagation",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpn:EnableVpnGatewayOptions"
    },
    "@aws-cdk/aws-ec2.ExecuteFileOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "import { Asset } from '@aws-cdk/aws-s3-assets';\n\ndeclare const instance: ec2.Instance;\n\nconst asset = new Asset(this, 'Asset', {\n  path: './configure.sh'\n});\n\nconst localPath = instance.userData.addS3DownloadCommand({\n  bucket:asset.bucket,\n  bucketKey:asset.s3ObjectKey,\n  region: 'us-east-1', // Optional\n});\ninstance.userData.addExecuteFileCommand({\n  filePath:localPath,\n  arguments: '--verbose -y'\n});\nasset.grantRead(instance.role);",
        "stability": "stable",
        "summary": "Options when executing a file."
      },
      "fqn": "@aws-cdk/aws-ec2.ExecuteFileOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 51
      },
      "name": "ExecuteFileOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No arguments are passed to the file.",
            "stability": "stable",
            "summary": "The arguments to be passed to the file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 63
          },
          "name": "arguments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path to the file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 56
          },
          "name": "filePath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:ExecuteFileOptions"
    },
    "@aws-cdk/aws-ec2.FlowLog": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::FlowLog"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "A VPC flow log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLog",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-flow-logs.ts",
          "line": 371
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IFlowLog"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 332
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a Flow Log by it's Id."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 336
          },
          "name": "fromFlowLogId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "flowLogId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IFlowLog"
            }
          },
          "static": true
        }
      ],
      "name": "FlowLog",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The S3 bucket to publish flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 354
          },
          "name": "bucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Id of the VPC Flow Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 349
          },
          "name": "flowLogId",
          "overrides": "@aws-cdk/aws-ec2.IFlowLog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The iam role used to publish logs to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 364
          },
          "name": "iamRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "S3 bucket key prefix to publish the flow logs under."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 359
          },
          "name": "keyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The CloudWatch Logs LogGroup to publish flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 369
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLog"
    },
    "@aws-cdk/aws-ec2.FlowLogDestination": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "The destination type for the flow log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogDestination",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 117
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generates a flow log destination configuration."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 143
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "flowLog",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.FlowLog"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use CloudWatch logs as the destination."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 121
          },
          "name": "toCloudWatchLogs",
          "parameters": [
            {
              "name": "logGroup",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-logs.ILogGroup"
              }
            },
            {
              "name": "iamRole",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-iam.IRole"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogDestination"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use S3 as the destination."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 132
          },
          "name": "toS3",
          "parameters": [
            {
              "name": "bucket",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "keyPrefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogDestination"
            }
          },
          "static": true
        }
      ],
      "name": "FlowLogDestination",
      "symbolId": "lib/vpc-flow-logs:FlowLogDestination"
    },
    "@aws-cdk/aws-ec2.FlowLogDestinationConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Flow Log Destination configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\n\nconst flowLogDestinationConfig: ec2.FlowLogDestinationConfig = {\n  logDestinationType: ec2.FlowLogDestinationType.CLOUD_WATCH_LOGS,\n\n  // the properties below are optional\n  iamRole: role,\n  keyPrefix: 'keyPrefix',\n  logGroup: logGroup,\n  s3Bucket: bucket,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 151
      },
      "name": "FlowLogDestinationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- default IAM role is created for you",
            "stability": "stable",
            "summary": "The IAM Role that has access to publish to CloudWatch logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 164
          },
          "name": "iamRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "S3 bucket key prefix to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 185
          },
          "name": "keyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CLOUD_WATCH_LOGS",
            "stability": "stable",
            "summary": "The type of destination to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 157
          },
          "name": "logDestinationType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default log group is created for you",
            "stability": "stable",
            "summary": "The CloudWatch Logs Log Group to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 171
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "S3 bucket to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 178
          },
          "name": "s3Bucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogDestinationConfig"
    },
    "@aws-cdk/aws-ec2.FlowLogDestinationType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The available destination types for Flow Logs."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 53
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Send flow logs to CloudWatch Logs Group."
          },
          "name": "CLOUD_WATCH_LOGS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send flow logs to S3 Bucket."
          },
          "name": "S3"
        }
      ],
      "name": "FlowLogDestinationType",
      "symbolId": "lib/vpc-flow-logs:FlowLogDestinationType"
    },
    "@aws-cdk/aws-ec2.FlowLogOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLogS3', {\n  destination: ec2.FlowLogDestination.toS3()\n});\n\nvpc.addFlowLog('FlowLogCloudWatch', {\n  trafficType: ec2.FlowLogTrafficType.REJECT\n});",
        "stability": "stable",
        "summary": "Options to add a flow log to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 273
      },
      "name": "FlowLogOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "FlowLogDestinationType.toCloudWatchLogs()",
            "remarks": "Flow log data can be published to CloudWatch Logs or Amazon S3",
            "stability": "stable",
            "summary": "Specifies the type of destination to which the flow log data is to be published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 287
          },
          "name": "destination",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogDestination"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ALL",
            "remarks": "You can log traffic that the resource accepts or rejects, or all traffic.",
            "stability": "stable",
            "summary": "The type of traffic to log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 279
          },
          "name": "trafficType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogTrafficType"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogOptions"
    },
    "@aws-cdk/aws-ec2.FlowLogProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "Properties of a VPC Flow Log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.FlowLogOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 295
      },
      "name": "FlowLogProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a flowLogName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit name.",
            "stability": "stable",
            "summary": "The name of the FlowLog."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 304
          },
          "name": "flowLogName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of resource for which to create the flow log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 309
          },
          "name": "resourceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogProps"
    },
    "@aws-cdk/aws-ec2.FlowLogResourceType": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "The type of resource to create the flow log for."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 70
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Network Interface to attach the Flow Log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 94
          },
          "name": "fromNetworkInterfaceId",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The subnet to attach the Flow Log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 74
          },
          "name": "fromSubnet",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The VPC to attach the Flow Log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 84
          },
          "name": "fromVpc",
          "parameters": [
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
            }
          },
          "static": true
        }
      ],
      "name": "FlowLogResourceType",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Id of the resource that the flow log should be attached to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 109
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of resource to attach a flow log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 104
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogResourceType"
    },
    "@aws-cdk/aws-ec2.FlowLogTrafficType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLogS3', {\n  destination: ec2.FlowLogDestination.toS3()\n});\n\nvpc.addFlowLog('FlowLogCloudWatch', {\n  trafficType: ec2.FlowLogTrafficType.REJECT\n});",
        "stability": "stable",
        "summary": "The type of VPC traffic to log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogTrafficType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 32
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Only log accepts."
          },
          "name": "ACCEPT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Log all requests."
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only log rejects."
          },
          "name": "REJECT"
        }
      ],
      "name": "FlowLogTrafficType",
      "symbolId": "lib/vpc-flow-logs:FlowLogTrafficType"
    },
    "@aws-cdk/aws-ec2.GatewayConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Pair represents a gateway created by NAT Provider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst gatewayConfig: ec2.GatewayConfig = {\n  az: 'az',\n  gatewayId: 'gatewayId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 34
      },
      "name": "GatewayConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Availability Zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 39
          },
          "name": "az",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identity of gateway spawned by the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 44
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/nat:GatewayConfig"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.VpcEndpoint",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPCEndpoint"
        },
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "A gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 184
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IGatewayVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 153
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 155
          },
          "name": "fromGatewayVpcEndpointId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "gatewayVpcEndpointId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpoint"
            }
          },
          "static": true
        }
      ],
      "name": "GatewayVpcEndpoint",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The date and time the gateway VPC endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 172
          },
          "name": "vpcEndpointCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 182
          },
          "name": "vpcEndpointDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The gateway VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 166
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 177
          },
          "name": "vpcEndpointNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "An AWS service for a gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 101
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "prefix",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IGatewayVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 92
      },
      "name": "GatewayVpcEndpointAwsService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 93
          },
          "name": "DYNAMODB",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 94
          },
          "name": "S3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 99
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpointAwsService"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "Options to add a gateway endpoint to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 109
      },
      "name": "GatewayVpcEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service to use for this gateway VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 113
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All subnets in the VPC",
            "example": "declare const vpc: ec2.Vpc;\n\nvpc.addGatewayEndpoint('DynamoDbEndpoint', {\n  service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n  // Add only to ISOLATED subnets\n  subnets: [\n    { subnetType: ec2.SubnetType.PRIVATE_ISOLATED }\n  ]\n});",
            "remarks": "By default, this endpoint will be routable from all subnets in the VPC.\nSpecify a list of subnet selection objects here to be more specific.",
            "stability": "stable",
            "summary": "Where to add endpoint routing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 136
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpointOptions"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a GatewayVpcEndpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const gatewayVpcEndpointService: ec2.IGatewayVpcEndpointService;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n\nconst gatewayVpcEndpointProps: ec2.GatewayVpcEndpointProps = {\n  service: gatewayVpcEndpointService,\n  vpc: vpc,\n\n  // the properties below are optional\n  subnets: [{\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 142
      },
      "name": "GatewayVpcEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC network in which the gateway endpoint will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 146
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpointProps"
    },
    "@aws-cdk/aws-ec2.GenericLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "ec2.NatProvider.instance({\n   instanceType: new ec2.InstanceType('t3.micro'),\n   machineImage: new ec2.GenericLinuxImage({\n     'us-east-2': 'ami-0f9c61b5a562a16af'\n   })\n})",
        "remarks": "Linux images IDs are not published to SSM parameter store yet, so you'll have to\nmanually specify an AMI map.",
        "stability": "stable",
        "summary": "Construct a Linux machine image from an AMI map."
      },
      "fqn": "@aws-cdk/aws-ec2.GenericLinuxImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 510
        },
        "parameters": [
          {
            "name": "amiMap",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GenericLinuxImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 509
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 513
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "GenericLinuxImage",
      "symbolId": "lib/machine-image:GenericLinuxImage"
    },
    "@aws-cdk/aws-ec2.GenericLinuxImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for GenericLinuxImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst genericLinuxImageProps: ec2.GenericLinuxImageProps = {\n  userData: userData,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.GenericLinuxImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 482
      },
      "name": "GenericLinuxImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Linux machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 488
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:GenericLinuxImageProps"
    },
    "@aws-cdk/aws-ec2.GenericSSMParameterImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.\n\nThe AMI ID is selected using the values published to the SSM parameter store.",
        "stability": "stable",
        "summary": "Select the image based on a given SSM parameter.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst genericSSMParameterImage = new ec2.GenericSSMParameterImage('parameterName', ec2.OperatingSystemType.LINUX, /* all optional props */ userData);"
      },
      "fqn": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 163
        },
        "parameters": [
          {
            "name": "parameterName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "os",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
            }
          },
          {
            "name": "userData",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 153
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 170
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "GenericSSMParameterImage",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the SSM parameter we're looking up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 161
          },
          "name": "parameterName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/machine-image:GenericSSMParameterImage"
    },
    "@aws-cdk/aws-ec2.GenericWindowsImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Allows you to create a generic Windows EC2 , manually specify an AMI map.",
        "stability": "stable",
        "summary": "Construct a Windows machine image from an AMI map.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst genericWindowsImage = new ec2.GenericWindowsImage({\n  amiMapKey: 'amiMap',\n}, /* all optional props */ {\n  userData: userData,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.GenericWindowsImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 547
        },
        "parameters": [
          {
            "name": "amiMap",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GenericWindowsImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 546
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 550
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "GenericWindowsImage",
      "symbolId": "lib/machine-image:GenericWindowsImage"
    },
    "@aws-cdk/aws-ec2.GenericWindowsImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for GenericWindowsImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst genericWindowsImageProps: ec2.GenericWindowsImageProps = {\n  userData: userData,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.GenericWindowsImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 494
      },
      "name": "GenericWindowsImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Windows machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 500
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:GenericWindowsImageProps"
    },
    "@aws-cdk/aws-ec2.IClientVpnConnectionHandler": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A connection handler for client VPN endpoints."
      },
      "fqn": "@aws-cdk/aws-ec2.IClientVpnConnectionHandler",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 22
      },
      "name": "IClientVpnConnectionHandler",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 31
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 26
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint-types:IClientVpnConnectionHandler"
    },
    "@aws-cdk/aws-ec2.IClientVpnEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A client VPN endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 7
      },
      "name": "IClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The endpoint ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 11
          },
          "name": "endpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force target networks associations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 16
          },
          "name": "targetNetworksAssociated",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint-types:IClientVpnEndpoint"
    },
    "@aws-cdk/aws-ec2.IConnectable": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An object that has a Connections object."
      },
      "fqn": "@aws-cdk/aws-ec2.IConnectable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 22
      },
      "name": "IConnectable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 26
          },
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        }
      ],
      "symbolId": "lib/connections:IConnectable"
    },
    "@aws-cdk/aws-ec2.IFlowLog": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A FlowLog."
      },
      "fqn": "@aws-cdk/aws-ec2.IFlowLog",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 18
      },
      "name": "IFlowLog",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Id of the VPC Flow Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 24
          },
          "name": "flowLogId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:IFlowLog"
    },
    "@aws-cdk/aws-ec2.IGatewayVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpoint",
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 54
      },
      "name": "IGatewayVpcEndpoint",
      "symbolId": "lib/vpc-endpoint:IGatewayVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IGatewayVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A service for a gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 82
      },
      "name": "IGatewayVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 86
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:IGatewayVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.IInstance": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IInstance",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 23
      },
      "name": "IInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The availability zone the instance was launched in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 36
          },
          "name": "instanceAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The instance's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 29
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 42
          },
          "name": "instancePrivateDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private IP for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 49
          },
          "name": "instancePrivateIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public name).",
            "stability": "stable",
            "summary": "Publicly-routable DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 58
          },
          "name": "instancePublicDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public IP).",
            "stability": "stable",
            "summary": "Publicly-routable IP  address for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 67
          },
          "name": "instancePublicIp",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/instance:IInstance"
    },
    "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint",
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 468
      },
      "name": "IInterfaceVpcEndpoint",
      "symbolId": "lib/vpc-endpoint:IInterfaceVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 214
      },
      "name": "IInterfaceVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 218
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 223
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether Private DNS is supported by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 228
          },
          "name": "privateDnsDefault",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:IInterfaceVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.ILaunchTemplate": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for LaunchTemplate-like objects."
      },
      "fqn": "@aws-cdk/aws-ec2.ILaunchTemplate",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 74
      },
      "name": "ILaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The version number of this launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 80
          },
          "name": "versionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The identifier of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 89
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The name of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 98
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/launch-template:ILaunchTemplate"
    },
    "@aws-cdk/aws-ec2.IMachineImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for classes that can select an appropriate machine image to use."
      },
      "fqn": "@aws-cdk/aws-ec2.IMachineImage",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 15
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 19
          },
          "name": "getImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "IMachineImage",
      "symbolId": "lib/machine-image:IMachineImage"
    },
    "@aws-cdk/aws-ec2.INetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A NetworkAcl."
      },
      "fqn": "@aws-cdk/aws-ec2.INetworkAcl",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 12
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a new entry to the ACL."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 22
          },
          "name": "addEntry",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclEntry"
            }
          }
        }
      ],
      "name": "INetworkAcl",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current Network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 17
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:INetworkAcl"
    },
    "@aws-cdk/aws-ec2.INetworkAclEntry": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A NetworkAclEntry."
      },
      "fqn": "@aws-cdk/aws-ec2.INetworkAclEntry",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 166
      },
      "name": "INetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 170
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        }
      ],
      "symbolId": "lib/network-acl:INetworkAclEntry"
    },
    "@aws-cdk/aws-ec2.IPeer": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for classes that provide the peer-specification parts of a security group rule."
      },
      "fqn": "@aws-cdk/aws-ec2.IPeer",
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/peer.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 26
          },
          "name": "toEgressRuleConfig",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 21
          },
          "name": "toIngressRuleConfig",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IPeer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 11
          },
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 16
          },
          "name": "uniqueId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/peer:IPeer"
    },
    "@aws-cdk/aws-ec2.IPrivateSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IPrivateSubnet",
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1859
      },
      "name": "IPrivateSubnet",
      "symbolId": "lib/vpc:IPrivateSubnet"
    },
    "@aws-cdk/aws-ec2.IPublicSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IPublicSubnet",
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1821
      },
      "name": "IPublicSubnet",
      "symbolId": "lib/vpc:IPublicSubnet"
    },
    "@aws-cdk/aws-ec2.IRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An abstract route table."
      },
      "fqn": "@aws-cdk/aws-ec2.IRouteTable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 67
      },
      "name": "IRouteTable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Route table ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 71
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:IRouteTable"
    },
    "@aws-cdk/aws-ec2.ISecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for security group-like objects."
      },
      "fqn": "@aws-cdk/aws-ec2.ISecurityGroup",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IPeer"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 18
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an egress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 50
          },
          "name": "addEgressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an ingress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 39
          },
          "name": "addIngressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        }
      ],
      "name": "ISecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether the SecurityGroup has been configured to allow all outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 28
          },
          "name": "allowAllOutbound",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 23
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/security-group:ISecurityGroup"
    },
    "@aws-cdk/aws-ec2.ISubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.ISubnet",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 29
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Associate a Network ACL with this subnet."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 61
          },
          "name": "associateNetworkAcl",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The Network ACL to associate."
              },
              "name": "acl",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
              }
            }
          ]
        }
      ],
      "name": "ISubnet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 33
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 44
          },
          "name": "internetConnectivityEstablished",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IPv4 CIDR block for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 49
          },
          "name": "ipv4CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The route table for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 54
          },
          "name": "routeTable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IRouteTable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 39
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:ISubnet"
    },
    "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A SubnetNetworkAclAssociation."
      },
      "fqn": "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 293
      },
      "name": "ISubnetNetworkAclAssociation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current SubnetNetworkAclAssociation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 298
          },
          "name": "subnetNetworkAclAssociationAssociationId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:ISubnetNetworkAclAssociation"
    },
    "@aws-cdk/aws-ec2.IVolume": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An EBS Volume in AWS EC2."
      },
      "fqn": "@aws-cdk/aws-ec2.IVolume",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 245
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "CAUTION: Granting an instance permission to attach to itself using this method will lead to\nan unresolvable circular reference between the instance role and the instance.\nUse {@link IVolume.grantAttachVolumeToSelf} to grant an instance permission to attach this\nvolume to itself.",
            "stability": "stable",
            "summary": "Grants permission to attach this Volume to an instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 277
          },
          "name": "grantAttachVolume",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "remarks": "If not specified, then permission is granted to attach\nto all instances in this account.",
                "summary": "the instances to which permission is being granted to attach this volume to."
              },
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you are looking to\ngrant an Instance, AutoScalingGroup, EC2-Fleet, SpotFleet, ECS host, etc the ability to attach\nthis volume to **itself** then this is the method you want to use.\n\nThis is implemented by adding a Tag with key `VolumeGrantAttach-<suffix>` to the given\nconstructs and this Volume, and then conditioning the Grant such that the grantee is only\ngiven the ability to AttachVolume if both the Volume and the destination Instance have that\ntag applied to them.",
            "stability": "stable",
            "summary": "Grants permission to attach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 294
          },
          "name": "grantAttachVolumeByResourceTag",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The list of constructs that will have the generated resource tag applied to them."
              },
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "remarks": "Defaults to a hash calculated from this volume and list of constructs. (DEPRECATED)",
                "summary": "A suffix to use on the generated Tag key in place of the generated hash value."
              },
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Use {@link IVolume.grantDetachVolumeFromSelf} to grant an instance permission to detach this\nvolume from itself.",
            "stability": "stable",
            "summary": "Grants permission to detach this Volume from an instance CAUTION: Granting an instance permission to detach from itself using this method will lead to an unresolvable circular reference between the instance role and the instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 308
          },
          "name": "grantDetachVolume",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "remarks": "If not specified, then permission is granted to detach\nfrom all instances in this account.",
                "summary": "the instances to which permission is being granted to detach this volume from."
              },
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is implemented via the same mechanism as {@link IVolume.grantAttachVolumeByResourceTag},\nand is subject to the same conditions.",
            "stability": "stable",
            "summary": "Grants permission to detach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 321
          },
          "name": "grantDetachVolumeByResourceTag",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The list of constructs that will have the generated resource tag applied to them."
              },
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "remarks": "Defaults to a hash calculated from this volume and list of constructs. (DEPRECATED)",
                "summary": "A suffix to use on the generated Tag key in place of the generated hash value."
              },
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "IVolume",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The availability zone that the EBS Volume is contained within (ex: us-west-2a)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 256
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The EBS Volume's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 251
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 263
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/volume:IVolume"
    },
    "@aws-cdk/aws-ec2.IVpc": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IVpc",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 74
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new client VPN endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 145
          },
          "name": "addClientVpnEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpoint"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new Flow Log to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 160
          },
          "name": "addFlowLog",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.FlowLogOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLog"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 150
          },
          "name": "addGatewayEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new interface endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 155
          },
          "name": "addInterfaceEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new VPN connection to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 140
          },
          "name": "addVpnConnection",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnection"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a VPN Gateway to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 135
          },
          "name": "enableVpnGateway",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EnableVpnGatewayOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Requires that at least one subnet is matched, throws a descriptive\nerror message otherwise.",
            "stability": "stable",
            "summary": "Return information on the subnets appropriate for the given selection strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 130
          },
          "name": "selectSubnets",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SelectedSubnets"
            }
          }
        }
      ],
      "name": "IVpc",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "AZs for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 112
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 122
          },
          "name": "internetConnectivityEstablished",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of isolated subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 107
          },
          "name": "isolatedSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of private subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 102
          },
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of public subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 97
          },
          "name": "publicSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 85
          },
          "name": "vpcArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "CIDR range for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 92
          },
          "name": "vpcCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Identifier for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 79
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifier for the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 117
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:IVpc"
    },
    "@aws-cdk/aws-ec2.IVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpcEndpoint",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 16
      },
      "name": "IVpcEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 21
          },
          "name": "vpcEndpointId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:IVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A VPC endpoint service."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpcEndpointService",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 22
      },
      "name": "IVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of the VPC Endpoint Service that clients use to connect to, like vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 37
          },
          "name": "vpcEndpointServiceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The service name of the VPC Endpoint Service that clients use to connect to, like com.amazonaws.vpce.<region>.vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 29
          },
          "name": "vpcEndpointServiceName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:IVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A load balancer that can host a VPC Endpoint Service."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 11
      },
      "name": "IVpcEndpointServiceLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the load balancer that hosts the VPC Endpoint Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 15
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:IVpcEndpointServiceLoadBalancer"
    },
    "@aws-cdk/aws-ec2.IVpnConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IVpnConnection",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 13
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this VPNConnection."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 11
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes received through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 23
          },
          "name": "metricTunnelDataIn",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes sent through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 29
          },
          "name": "metricTunnelDataOut",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The state of the tunnel. 0 indicates DOWN and 1 indicates UP."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 17
          },
          "name": "metricTunnelState",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IVpnConnection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 32
          },
          "name": "customerGatewayAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 22
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 27
          },
          "name": "customerGatewayIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 17
          },
          "name": "vpnId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:IVpnConnection"
    },
    "@aws-cdk/aws-ec2.IVpnGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The virtual private gateway interface."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpnGateway",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 38
      },
      "name": "IVpnGateway",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The virtual private gateway Id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 43
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:IVpnGateway"
    },
    "@aws-cdk/aws-ec2.InitCommand": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "example": "const handle = new ec2.InitServiceRestartHandle();\nec2.CloudFormationInit.fromElements(\n   ec2.InitCommand.shellCommand('/usr/bin/custom-nginx-install.sh', { serviceRestartHandles: [handle] }),\n   ec2.InitService.enable('nginx', { serviceRestartHandle: handle }),\n);",
        "stability": "stable",
        "summary": "Command to execute on the instance."
      },
      "fqn": "@aws-cdk/aws-ec2.InitCommand",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 206
      },
      "methods": [
        {
          "docs": {
            "remarks": "You do not need to escape space characters or enclose command parameters in quotes.",
            "stability": "stable",
            "summary": "Run a command from an argv array."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 222
          },
          "name": "argvCommand",
          "parameters": [
            {
              "name": "argv",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitCommandOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommand"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Remember that some characters like `&`, `|`, `;`, `>` etc. have special meaning in a shell and\nneed to be preceded by a `\\` if you want to treat them as part of a filename.",
            "stability": "stable",
            "summary": "Run a shell command."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 213
          },
          "name": "shellCommand",
          "parameters": [
            {
              "name": "shellCommand",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitCommandOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommand"
            }
          },
          "static": true
        }
      ],
      "name": "InitCommand",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 229
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitCommand"
    },
    "@aws-cdk/aws-ec2.InitCommandOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const handle = new ec2.InitServiceRestartHandle();\nec2.CloudFormationInit.fromElements(\n   ec2.InitCommand.shellCommand('/usr/bin/custom-nginx-install.sh', { serviceRestartHandles: [handle] }),\n   ec2.InitService.enable('nginx', { serviceRestartHandle: handle }),\n);",
        "stability": "stable",
        "summary": "Options for InitCommand."
      },
      "fqn": "@aws-cdk/aws-ec2.InitCommandOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 109
      },
      "name": "InitCommandOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Use default working directory",
            "stability": "stable",
            "summary": "The working directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 133
          },
          "name": "cwd",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use current environment",
            "remarks": "This property overwrites, rather than appends, the existing environment.",
            "stability": "stable",
            "summary": "Sets environment variables for the command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 126
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Continue running if this command fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 149
          },
          "name": "ignoreErrors",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated based on index",
            "remarks": "Commands are executed in lexicographical order of their key names.",
            "stability": "stable",
            "summary": "Identifier key for this command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 117
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given service(s) after this command has run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 168
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Always run the command",
            "remarks": "If the test passes (exits with error code of 0), the command is run.",
            "stability": "stable",
            "summary": "Command to determine whether this command should be run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 142
          },
          "name": "testCmd",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 60 seconds",
            "remarks": "Set this value to `InitCommandWaitDuration.none()` if you do not want to wait for every command;\n`InitCommandWaitDuration.forever()` directs cfn-init to exit and resume only after the reboot is complete.\n\nFor Windows systems only.",
            "stability": "stable",
            "summary": "The duration to wait after a command has finished in case the command causes a reboot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 161
          },
          "name": "waitAfterCompletion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitCommandOptions"
    },
    "@aws-cdk/aws-ec2.InitCommandWaitDuration": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Represents a duration to wait after a command has finished, in case of a reboot (Windows only).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst initCommandWaitDuration = ec2.InitCommandWaitDuration.forever();"
      },
      "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 174
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "cfn-init will exit and resume only after a reboot."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 189
          },
          "name": "forever",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Do not wait for this command."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 184
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Wait for a specified duration after a command."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 176
          },
          "name": "of",
          "parameters": [
            {
              "name": "duration",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
            }
          },
          "static": true
        }
      ],
      "name": "InitCommandWaitDuration",
      "symbolId": "lib/cfn-init-elements:InitCommandWaitDuration"
    },
    "@aws-cdk/aws-ec2.InitConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "A collection of configuration elements."
      },
      "fqn": "@aws-cdk/aws-ec2.InitConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init.ts",
          "line": 197
        },
        "parameters": [
          {
            "name": "elements",
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.InitElement"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 194
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more elements to the config."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 211
          },
          "name": "add",
          "parameters": [
            {
              "name": "elements",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitElement"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether this configset has elements or not."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 204
          },
          "name": "isEmpty",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "InitConfig",
      "symbolId": "lib/cfn-init:InitConfig"
    },
    "@aws-cdk/aws-ec2.InitElement": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Base class for all CloudFormation Init elements."
      },
      "fqn": "@aws-cdk/aws-ec2.InitElement",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 87
      },
      "name": "InitElement",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 92
          },
          "name": "elementType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitElement"
    },
    "@aws-cdk/aws-ec2.InitFile": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
        "stability": "stable",
        "summary": "Create files on the EC2 instance."
      },
      "fqn": "@aws-cdk/aws-ec2.InitFile",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 464
        },
        "parameters": [
          {
            "name": "fileName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 324
      },
      "methods": [
        {
          "docs": {
            "remarks": "This is appropriate for files that are too large to embed into the template.",
            "stability": "stable",
            "summary": "Create an asset from the given file."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 424
          },
          "name": "fromAsset",
          "parameters": [
            {
              "name": "targetFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileAssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use a file from an asset at instance startup time."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 447
          },
          "name": "fromExistingAsset",
          "parameters": [
            {
              "name": "targetFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/aws-s3-assets.Asset"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The file will be embedded in the template, so care should be taken to not\nexceed the template size.\n\nIf options.base64encoded is set to true, this will base64-encode the file's contents.",
            "stability": "stable",
            "summary": "Read a file from disk and use its contents."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 381
          },
          "name": "fromFileInline",
          "parameters": [
            {
              "name": "targetFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "sourceFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "May contain tokens.",
            "stability": "stable",
            "summary": "Use a JSON-compatible object as the file content, write it to a JSON file."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 361
          },
          "name": "fromObject",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "obj",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Download a file from an S3 bucket at instance startup time."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 405
          },
          "name": "fromS3Object",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use a literal string as the file content."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 329
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Download from a URL at instance startup time."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 390
          },
          "name": "fromUrl",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Write a symlink with the given symlink target."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 348
          },
          "name": "symlink",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        }
      ],
      "name": "InitFile",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 462
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitFile"
    },
    "@aws-cdk/aws-ec2.InitFileAssetOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Additional options for creating an InitFile from an asset.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dockerImage: cdk.DockerImage;\ndeclare const grantable: iam.IGrantable;\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\ndeclare const localBundling: cdk.ILocalBundling;\n\nconst initFileAssetOptions: ec2.InitFileAssetOptions = {\n  assetHash: 'assetHash',\n  assetHashType: cdk.AssetHashType.SOURCE,\n  base64Encoded: false,\n  bundling: {\n    image: dockerImage,\n\n    // the properties below are optional\n    command: ['command'],\n    entrypoint: ['entrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    local: localBundling,\n    outputType: cdk.BundlingOutput.ARCHIVED,\n    securityOpt: 'securityOpt',\n    user: 'user',\n    volumes: [{\n      containerPath: 'containerPath',\n      hostPath: 'hostPath',\n\n      // the properties below are optional\n      consistency: cdk.DockerVolumeConsistency.CONSISTENT,\n    }],\n    workingDirectory: 'workingDirectory',\n  },\n  exclude: ['exclude'],\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  group: 'group',\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  mode: 'mode',\n  owner: 'owner',\n  readers: [grantable],\n  serviceRestartHandles: [initServiceRestartHandle],\n  sourceHash: 'sourceHash',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.InitFileAssetOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.InitFileOptions",
        "@aws-cdk/aws-s3-assets.AssetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 318
      },
      "name": "InitFileAssetOptions",
      "symbolId": "lib/cfn-init-elements:InitFileAssetOptions"
    },
    "@aws-cdk/aws-ec2.InitFileOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Options for InitFile."
      },
      "fqn": "@aws-cdk/aws-ec2.InitFileOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 266
      },
      "name": "InitFileOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only applicable for inlined string and file content.",
            "stability": "stable",
            "summary": "True if the inlined content (from a string or file) should be treated as base64 encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 305
          },
          "name": "base64Encoded",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'root'",
            "remarks": "Not supported for Windows systems.",
            "stability": "stable",
            "summary": "The name of the owning group for this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 274
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'000644'",
            "remarks": "Use the first three digits for symlinks and the last three digits for\nsetting permissions. To create a symlink, specify 120xxx, where xxx\ndefines the permissions of the target file. To specify permissions for a\nfile, use the last three digits, such as 000644.\n\nNot supported for Windows systems.",
            "stability": "stable",
            "summary": "A six-digit octal value representing the mode for this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 297
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'root'",
            "remarks": "Not supported for Windows systems.",
            "stability": "stable",
            "summary": "The name of the owning user for this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 283
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given service after this file has been written."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 312
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitFileOptions"
    },
    "@aws-cdk/aws-ec2.InitGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "remarks": "Not supported for Windows systems.",
        "stability": "stable",
        "summary": "Create Linux/UNIX groups and assign group IDs."
      },
      "fqn": "@aws-cdk/aws-ec2.InitGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 527
        },
        "parameters": [
          {
            "name": "groupName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "groupId",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 516
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a group from its name, and optionally, group id."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 521
          },
          "name": "fromName",
          "parameters": [
            {
              "name": "groupName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "groupId",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitGroup"
            }
          },
          "static": true
        }
      ],
      "name": "InitGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 525
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitGroup"
    },
    "@aws-cdk/aws-ec2.InitPackage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "A package to be installed during cfn-init time."
      },
      "fqn": "@aws-cdk/aws-ec2.InitPackage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 705
        },
        "parameters": [
          {
            "name": "type",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "versions",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          {
            "name": "packageName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "serviceHandles",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
                },
                "kind": "array"
              }
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 657
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package using APT."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 689
          },
          "name": "apt",
          "parameters": [
            {
              "name": "packageName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install an MSI package from an HTTP URL or a location on disk."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 696
          },
          "name": "msi",
          "parameters": [
            {
              "name": "location",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LocationPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package from PyPI."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 682
          },
          "name": "python",
          "parameters": [
            {
              "name": "packageName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install an RPM from an HTTP URL or a location on disk."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 661
          },
          "name": "rpm",
          "parameters": [
            {
              "name": "location",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LocationPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package from RubyGems."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 675
          },
          "name": "rubyGem",
          "parameters": [
            {
              "name": "gemName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package using Yum."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 668
          },
          "name": "yum",
          "parameters": [
            {
              "name": "packageName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 743
          },
          "name": "renderPackageVersions",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "InitPackage",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 703
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitPackage"
    },
    "@aws-cdk/aws-ec2.InitService": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "A services that be enabled, disabled or restarted when the instance is launched."
      },
      "fqn": "@aws-cdk/aws-ec2.InitService",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 789
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Disable and stop the given service."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 805
          },
          "name": "disable",
          "parameters": [
            {
              "name": "serviceName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Enable and start the given service, optionally restarting it."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 793
          },
          "name": "enable",
          "parameters": [
            {
              "name": "serviceName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitService"
            }
          },
          "static": true
        }
      ],
      "name": "InitService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 809
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitService"
    },
    "@aws-cdk/aws-ec2.InitServiceOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Options for an InitService."
      },
      "fqn": "@aws-cdk/aws-ec2.InitServiceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 751
      },
      "name": "InitServiceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true if used in `InitService.enable()`, no change to service\nstate if used in `InitService.fromOptions()`.",
            "remarks": "Set to true to ensure that the service will be started automatically upon boot.\n\nSet to false to ensure that the service will not be started automatically upon boot.",
            "stability": "stable",
            "summary": "Enable or disable this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 762
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same value as `enabled`.",
            "remarks": "Set to true to ensure that the service is running after cfn-init finishes.\n\nSet to false to ensure that the service is not running after cfn-init finishes.",
            "stability": "stable",
            "summary": "Make sure this service is running or not running after cfn-init finishes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 773
          },
          "name": "ensureRunning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No files trigger restart",
            "remarks": "Register actions into the restartHandle by passing it to `InitFile`, `InitCommand`,\n`InitPackage` and `InitSource` objects.",
            "stability": "stable",
            "summary": "Restart service when the actions registered into the restartHandle have been performed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 783
          },
          "name": "serviceRestartHandle",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitServiceOptions"
    },
    "@aws-cdk/aws-ec2.InitServiceRestartHandle": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "remarks": "Pass an instance of this object to the `InitFile`, `InitCommand`,\n`InitSource` and `InitPackage` objects, and finally to an `InitService`\nitself to cause the actions (files, commands, sources, and packages)\nto trigger a restart of the service.\n\nFor example, the following will run a custom command to install Nginx,\nand trigger the nginx service to be restarted after the command has run.\n\n```ts\nconst handle = new ec2.InitServiceRestartHandle();\nec2.CloudFormationInit.fromElements(\n   ec2.InitCommand.shellCommand('/usr/bin/custom-nginx-install.sh', { serviceRestartHandles: [handle] }),\n   ec2.InitService.enable('nginx', { serviceRestartHandle: handle }),\n);\n```",
        "stability": "stable",
        "summary": "An object that represents reasons to restart an InitService."
      },
      "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 27
      },
      "name": "InitServiceRestartHandle",
      "symbolId": "lib/cfn-init-elements:InitServiceRestartHandle"
    },
    "@aws-cdk/aws-ec2.InitSource": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Extract an archive into a directory."
      },
      "fqn": "@aws-cdk/aws-ec2.InitSource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 934
        },
        "parameters": [
          {
            "name": "targetDirectory",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "serviceHandles",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
                },
                "kind": "array"
              }
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 857
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an InitSource from an asset created from the given path."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 897
          },
          "name": "fromAsset",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceAssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Extract a directory from an existing directory asset."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 918
          },
          "name": "fromExistingAsset",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/aws-s3-assets.Asset"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Extract a GitHub branch into a given directory."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 874
          },
          "name": "fromGitHub",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "owner",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "repo",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "refSpec",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Extract an archive stored in an S3 bucket into the given directory."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 881
          },
          "name": "fromS3Object",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve a URL and extract it into the given directory."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 861
          },
          "name": "fromUrl",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        }
      ],
      "name": "InitSource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 932
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitSource"
    },
    "@aws-cdk/aws-ec2.InitSourceAssetOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Additional options for an InitSource that builds an asset from local files.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dockerImage: cdk.DockerImage;\ndeclare const grantable: iam.IGrantable;\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\ndeclare const localBundling: cdk.ILocalBundling;\n\nconst initSourceAssetOptions: ec2.InitSourceAssetOptions = {\n  assetHash: 'assetHash',\n  assetHashType: cdk.AssetHashType.SOURCE,\n  bundling: {\n    image: dockerImage,\n\n    // the properties below are optional\n    command: ['command'],\n    entrypoint: ['entrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    local: localBundling,\n    outputType: cdk.BundlingOutput.ARCHIVED,\n    securityOpt: 'securityOpt',\n    user: 'user',\n    volumes: [{\n      containerPath: 'containerPath',\n      hostPath: 'hostPath',\n\n      // the properties below are optional\n      consistency: cdk.DockerVolumeConsistency.CONSISTENT,\n    }],\n    workingDirectory: 'workingDirectory',\n  },\n  exclude: ['exclude'],\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  readers: [grantable],\n  serviceRestartHandles: [initServiceRestartHandle],\n  sourceHash: 'sourceHash',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.InitSourceAssetOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.InitSourceOptions",
        "@aws-cdk/aws-s3-assets.AssetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 850
      },
      "name": "InitSourceAssetOptions",
      "symbolId": "lib/cfn-init-elements:InitSourceAssetOptions"
    },
    "@aws-cdk/aws-ec2.InitSourceOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Additional options for an InitSource."
      },
      "fqn": "@aws-cdk/aws-ec2.InitSourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 837
      },
      "name": "InitSourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given services after this archive has been extracted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 844
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitSourceOptions"
    },
    "@aws-cdk/aws-ec2.InitUser": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "remarks": "Users are created as non-interactive system users with a shell of\n/sbin/nologin. This is by design and cannot be modified.\n\nNot supported for Windows systems.",
        "stability": "stable",
        "summary": "Create Linux/UNIX users and to assign user IDs."
      },
      "fqn": "@aws-cdk/aws-ec2.InitUser",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 592
        },
        "parameters": [
          {
            "name": "userName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "userOptions",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitUserOptions"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 582
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a user from user name."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 586
          },
          "name": "fromName",
          "parameters": [
            {
              "name": "userName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitUserOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitUser"
            }
          },
          "static": true
        }
      ],
      "name": "InitUser",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 590
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitUser"
    },
    "@aws-cdk/aws-ec2.InitUserOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Optional parameters used when creating a user.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst initUserOptions: ec2.InitUserOptions = {\n  groups: ['groups'],\n  homeDir: 'homeDir',\n  userId: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.InitUserOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 549
      },
      "name": "InitUserOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "the user is not associated with any groups.",
            "remarks": "The user will be added to each group in the list.",
            "stability": "stable",
            "summary": "A list of group names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 571
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "assigned by the OS",
            "stability": "stable",
            "summary": "The user's home directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 555
          },
          "name": "homeDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "assigned by the OS",
            "remarks": "The creation process fails if the user name exists with a different user ID.\nIf the user ID is already assigned to an existing user the operating system may\nreject the creation request.",
            "stability": "stable",
            "summary": "A user ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 564
          },
          "name": "userId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitUserOptions"
    },
    "@aws-cdk/aws-ec2.Instance": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50),\n    },\n    {\n      deviceName: '/dev/sdm',\n      volume: ec2.BlockDeviceVolume.ebs(100),\n    },\n  ],\n});",
        "stability": "stable",
        "summary": "This represents a single EC2 instance."
      },
      "fqn": "@aws-cdk/aws-ec2.Instance",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/instance.ts",
          "line": 305
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInstance"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 246
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add the security group to the instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 430
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "docs": {
                "summary": ": The security group to add."
              },
              "name": "securityGroup",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by the instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 445
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The command must be in the scripting language supported by the instance's OS (i.e. Linux/Windows).",
            "stability": "stable",
            "summary": "Add command to the startup script of the instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 438
          },
          "name": "addUserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Instance",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 256
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 266
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "the underlying instance resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 276
          },
          "name": "instance",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CfnInstance"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The availability zone the instance was launched in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 284
          },
          "name": "instanceAvailabilityZone",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The instance's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 280
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 288
          },
          "name": "instancePrivateDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private IP for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 292
          },
          "name": "instancePrivateIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public name).",
            "stability": "stable",
            "summary": "Publicly-routable DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 296
          },
          "name": "instancePublicDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public IP).",
            "stability": "stable",
            "summary": "Publicly-routable IP  address for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 300
          },
          "name": "instancePublicIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of OS the instance is running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 251
          },
          "name": "osType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role assumed by the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 261
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UserData for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 271
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/instance:Instance"
    },
    "@aws-cdk/aws-ec2.InstanceArchitecture": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Identifies an instance's CPU architecture."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceArchitecture",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 573
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARM64 architecture."
          },
          "name": "ARM_64"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "x86-64 architecture."
          },
          "name": "X86_64"
        }
      ],
      "name": "InstanceArchitecture",
      "symbolId": "lib/instance-types:InstanceArchitecture"
    },
    "@aws-cdk/aws-ec2.InstanceClass": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\nnew rds.DatabaseInstanceFromSnapshot(this, 'Instance', {\n  snapshotIdentifier: 'my-snapshot',\n  engine: rds.DatabaseInstanceEngine.postgres({ version: rds.PostgresEngineVersion.VER_12_3 }),\n  // optional, defaults to m5.large\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});\n\ndeclare const sourceInstance: rds.DatabaseInstance;\nnew rds.DatabaseInstanceReadReplica(this, 'ReadReplica', {\n  sourceDatabaseInstance: sourceInstance,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});",
        "remarks": "We have both symbolic and concrete enums for every type.\n\nThe first are for people that want to specify by purpose,\nthe second one are for people who already know exactly what\n'R4' means.",
        "stability": "stable",
        "summary": "What class and generation of instance to use."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceClass",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 10
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Arm processor based instances, 1st generation."
          },
          "name": "ARM1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances, 2nd generation."
          },
          "name": "BURSTABLE2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances, 3rd generation."
          },
          "name": "BURSTABLE3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances based on AMD EPYC, 3rd generation."
          },
          "name": "BURSTABLE3_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances, 4th generation with Graviton2 processors."
          },
          "name": "BURSTABLE4_GRAVITON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 3rd generation."
          },
          "name": "COMPUTE3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 4th generation."
          },
          "name": "COMPUTE4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 5th generation."
          },
          "name": "COMPUTE5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances based on AMD EPYC, 5th generation."
          },
          "name": "COMPUTE5_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances with local NVME drive based on AMD EPYC, 5th generation."
          },
          "name": "COMPUTE5_AMD_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 5th generation."
          },
          "name": "COMPUTE5_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances with local NVME drive, 5th generation."
          },
          "name": "COMPUTE5_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 6th generation with Graviton2 processors."
          },
          "name": "COMPUTE6_GRAVITON2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 6th generation with Graviton2 processors and high network bandwidth capabilities."
          },
          "name": "COMPUTE6_GRAVITON2_HIGH_NETWORK_BANDWITH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 6th generation with Graviton2 processors and local NVME drive."
          },
          "name": "COMPUTE6_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 6th generation."
          },
          "name": "COMPUTE6_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instances with customizable hardware acceleration, 1st generation."
          },
          "name": "FPGA1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances, 3rd generation."
          },
          "name": "GRAPHICS3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances with NVME drive for high performance computing, 4th generation."
          },
          "name": "GRAPHICS4_NVME_DRIVE_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances, 5th generation."
          },
          "name": "GRAPHICS5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High memory and compute capacity instances, 1st generation."
          },
          "name": "HIGH_COMPUTE_MEMORY1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Inferentia Chips based instances for machine learning inference applications, 1st generation."
          },
          "name": "INFERENCE1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "I/O-optimized instances, 3rd generation."
          },
          "name": "IO3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "I/O-optimized instances with local NVME drive, 3rd generation."
          },
          "name": "IO3_DENSE_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances, 1st generation."
          },
          "name": "MEMORY_INTENSIVE_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances, extended, 1st generation."
          },
          "name": "MEMORY_INTENSIVE_1_EXTENDED"
        },
        {
          "docs": {
            "remarks": "This instance type can be used only in RDS. It is not supported in EC2.",
            "stability": "stable",
            "summary": "Memory-intensive instances, 2nd generation with Graviton2 processors."
          },
          "name": "MEMORY_INTENSIVE_2_GRAVITON2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances, 2nd generation with Graviton2 processors and local NVME drive."
          },
          "name": "MEMORY_INTENSIVE_2_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 3rd generation."
          },
          "name": "MEMORY3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 4th generation."
          },
          "name": "MEMORY4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 5th generation."
          },
          "name": "MEMORY5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances based on AMD EPYC, 5th generation."
          },
          "name": "MEMORY5_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances based on AMD EPYC with local NVME drive, 5th generation."
          },
          "name": "MEMORY5_AMD_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances that are also EBS-optimized, 5th generation."
          },
          "name": "MEMORY5_EBS_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances for high performance computing, 5th generation."
          },
          "name": "MEMORY5_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances with local NVME drive, 5th generation."
          },
          "name": "MEMORY5_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances with local NVME drive for high performance computing, 5th generation."
          },
          "name": "MEMORY5_NVME_DRIVE_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 6th generation with Graviton2 processors."
          },
          "name": "MEMORY6_GRAVITON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 6th generation with Graviton2 processors and local NVME drive."
          },
          "name": "MEMORY6_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parallel-processing optimized instances, 2nd generation."
          },
          "name": "PARALLEL2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parallel-processing optimized instances, 3nd generation."
          },
          "name": "PARALLEL3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parallel-processing optimized instances, 4th generation."
          },
          "name": "PARALLEL4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 3rd generation."
          },
          "name": "STANDARD3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 4th generation."
          },
          "name": "STANDARD4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 5th generation."
          },
          "name": "STANDARD5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances based on AMD EPYC, 5th generation."
          },
          "name": "STANDARD5_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances based on AMD EPYC with local NVME drive, 5th generation."
          },
          "name": "STANDARD5_AMD_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances for high performance computing, 5th generation."
          },
          "name": "STANDARD5_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances with local NVME drive, 5th generation."
          },
          "name": "STANDARD5_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances with local NVME drive for high performance computing, 5th generation."
          },
          "name": "STANDARD5_NVME_DRIVE_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Arm processor based instances, 2nd generation."
          },
          "name": "STANDARD6_GRAVITON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 6th generation with Graviton2 processors and local NVME drive."
          },
          "name": "STANDARD6_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances based on Intel (Ice Lake), 6th generation."
          },
          "name": "STANDARD6_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage/compute balanced instances, 1st generation."
          },
          "name": "STORAGE_COMPUTE_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage-optimized instances, 2nd generation."
          },
          "name": "STORAGE2"
        }
      ],
      "name": "InstanceClass",
      "symbolId": "lib/instance-types:InstanceClass"
    },
    "@aws-cdk/aws-ec2.InstanceInitiatedShutdownBehavior": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior",
        "stability": "stable",
        "summary": "Provides the options for specifying the instance initiated shutdown behavior."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceInitiatedShutdownBehavior",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 59
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will stop when it initiates a shutdown."
          },
          "name": "STOP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will be terminated when it initiates a shutdown."
          },
          "name": "TERMINATE"
        }
      ],
      "name": "InstanceInitiatedShutdownBehavior",
      "symbolId": "lib/launch-template:InstanceInitiatedShutdownBehavior"
    },
    "@aws-cdk/aws-ec2.InstanceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50),\n    },\n    {\n      deviceName: '/dev/sdm',\n      volume: ec2.BlockDeviceVolume.ebs(100),\n    },\n  ],\n});",
        "stability": "stable",
        "summary": "Properties of an EC2 Instance."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 73
      },
      "name": "InstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This property is only used when you do not provide a security group.",
            "stability": "stable",
            "summary": "Whether the instance could initiate connections to anywhere by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 102
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Random zone.",
            "stability": "stable",
            "summary": "In which AZ to place the instance within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 94
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 208
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no CloudFormation init",
            "stability": "stable",
            "summary": "Apply the given CloudFormation Init configuration to the instance at startup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 224
          },
          "name": "init",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "remarks": "Describes the configsets to use and the timeout to wait",
            "stability": "stable",
            "summary": "Use the given options for applying CloudFormation Init."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 233
          },
          "name": "initOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ApplyCloudFormationInitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CDK generated name",
            "stability": "stable",
            "summary": "The name of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 184
          },
          "name": "instanceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 128
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 80
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "AMI to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 133
          },
          "name": "machineImage",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no association",
            "remarks": "Private IP should be available within the VPC that the instance is build within.",
            "stability": "stable",
            "summary": "Defines a private IP address to associate with an instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 217
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether IMDSv2 should be required on this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 240
          },
          "name": "requireImdsv2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "The maximum value is 43200 (12 hours).",
            "stability": "stable",
            "summary": "The length of time to wait for the resourceSignalCount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 111
          },
          "name": "resourceSignalTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will automatically be created, it can be accessed via the `role` property",
            "example": "const role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n});",
            "remarks": "The role must be assumable by the service principal `ec2.amazonaws.com`:",
            "stability": "stable",
            "summary": "An IAM role to associate with the instance profile assigned to this Auto Scaling Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 177
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- create new security group",
            "stability": "stable",
            "summary": "Security Group to assign to this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 123
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This controls whether source/destination checking is enabled on the instance.\nA value of true means that checking is enabled, and false means that checking is disabled.\nThe value must be false for the instance to perform NAT.",
            "stability": "stable",
            "summary": "Specifies whether to enable an instance launched in a VPC to perform NAT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 194
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A UserData object appropriate for the MachineImage's\nOperating System is created.",
            "remarks": "The UserData may still be mutated after creation.",
            "stability": "stable",
            "summary": "Specific UserData to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 143
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true iff `initOptions` is specified, false otherwise.",
            "remarks": "Depending the EC2 instance type, changing UserData either\nrestarts the instance or replaces the instance.\n\n- Instance store-backed instances are replaced.\n- EBS-backed instances are restarted.\n\nBy default, restarting does not execute the new UserData so you\nwill need a different mechanism to ensure the instance is restarted.\n\nSetting this to `true` will make the instance's Logical ID depend on the\nUserData, which will cause CloudFormation to replace it if the UserData\nchanges.",
            "stability": "stable",
            "summary": "Changes to the UserData force replacement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 163
          },
          "name": "userDataCausesReplacement",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC to launch the instance in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 116
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Private subnets.",
            "stability": "stable",
            "summary": "Where to place the instance within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 87
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/instance:InstanceProps"
    },
    "@aws-cdk/aws-ec2.InstanceRequireImdsv2Aspect": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const aspect = new ec2.InstanceRequireImdsv2Aspect();\nAspects.of(this).add(aspect);",
        "remarks": "This aspect configures IMDS on an EC2 instance by creating a Launch Template with the\nIMDS configuration and associating that Launch Template with the instance. If an Instance\nis already associated with a Launch Template, a warning will (optionally) be added to the\nconstruct node and it will be skipped.\n\nTo cover Instances already associated with Launch Templates, use `LaunchTemplateImdsAspect`.",
        "stability": "stable",
        "summary": "Aspect that applies IMDS configuration on EC2 Instance constructs."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceRequireImdsv2Aspect",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aspects/require-imdsv2-aspect.ts",
          "line": 72
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceRequireImdsv2AspectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 77
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a warning annotation to a node, unless `suppressWarnings` is true."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 101
          },
          "name": "warn",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            },
            {
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "InstanceRequireImdsv2Aspect",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 22
          },
          "name": "suppressWarnings",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:InstanceRequireImdsv2Aspect"
    },
    "@aws-cdk/aws-ec2.InstanceRequireImdsv2AspectProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `InstanceRequireImdsv2Aspect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst instanceRequireImdsv2AspectProps: ec2.InstanceRequireImdsv2AspectProps = {\n  suppressLaunchTemplateWarning: false,\n  suppressWarnings: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceRequireImdsv2AspectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 46
      },
      "name": "InstanceRequireImdsv2AspectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "You can set this to `true` if `LaunchTemplateImdsAspect` is being used alongside this Aspect to\nsuppress false-positive warnings because any Launch Templates associated with Instances will still be covered.",
            "stability": "stable",
            "summary": "Whether warnings that would be raised when an Instance is associated with an existing Launch Template should be suppressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 56
          },
          "name": "suppressLaunchTemplateWarning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether warning annotations from this Aspect should be suppressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 15
          },
          "name": "suppressWarnings",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:InstanceRequireImdsv2AspectProps"
    },
    "@aws-cdk/aws-ec2.InstanceSize": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\nnew rds.DatabaseInstanceFromSnapshot(this, 'Instance', {\n  snapshotIdentifier: 'my-snapshot',\n  engine: rds.DatabaseInstanceEngine.postgres({ version: rds.PostgresEngineVersion.VER_12_3 }),\n  // optional, defaults to m5.large\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});\n\ndeclare const sourceInstance: rds.DatabaseInstance;\nnew rds.DatabaseInstanceReadReplica(this, 'ReadReplica', {\n  sourceDatabaseInstance: sourceInstance,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});",
        "stability": "stable",
        "summary": "What size of instance to use."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceSize",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 588
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size LARGE (large)."
          },
          "name": "LARGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size MEDIUM (medium)."
          },
          "name": "MEDIUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size METAL (metal)."
          },
          "name": "METAL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size MICRO (micro)."
          },
          "name": "MICRO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size NANO (nano)."
          },
          "name": "NANO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size SMALL (small)."
          },
          "name": "SMALL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE (xlarge)."
          },
          "name": "XLARGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE10 (10xlarge)."
          },
          "name": "XLARGE10"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE12 (12xlarge)."
          },
          "name": "XLARGE12"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE16 (16xlarge)."
          },
          "name": "XLARGE16"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE18 (18xlarge)."
          },
          "name": "XLARGE18"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE2 (2xlarge)."
          },
          "name": "XLARGE2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE24 (24xlarge)."
          },
          "name": "XLARGE24"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE3 (3xlarge)."
          },
          "name": "XLARGE3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE32 (32xlarge)."
          },
          "name": "XLARGE32"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE4 (4xlarge)."
          },
          "name": "XLARGE4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE48 (48xlarge)."
          },
          "name": "XLARGE48"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE6 (6xlarge)."
          },
          "name": "XLARGE6"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE8 (8xlarge)."
          },
          "name": "XLARGE8"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE9 (9xlarge)."
          },
          "name": "XLARGE9"
        }
      ],
      "name": "InstanceSize",
      "symbolId": "lib/instance-types:InstanceSize"
    },
    "@aws-cdk/aws-ec2.InstanceType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
        "remarks": "This class takes a literal string, good if you already\nknow the identifier of the type you want.",
        "stability": "stable",
        "summary": "Instance type for EC2 instances."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceType",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/instance-types.ts",
          "line": 710
        },
        "parameters": [
          {
            "name": "instanceTypeIdentifier",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 697
      },
      "methods": [
        {
          "docs": {
            "remarks": "This class takes a combination of a class and size.\n\nBe aware that not all combinations of class and size are available, and not all\nclasses are available in all regions.",
            "stability": "stable",
            "summary": "Instance type for EC2 instances."
          },
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 706
          },
          "name": "of",
          "parameters": [
            {
              "name": "instanceClass",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InstanceClass"
              }
            },
            {
              "name": "instanceSize",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InstanceSize"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the instance type as a dotted string."
          },
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 716
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "InstanceType",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance's CPU architecture."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 723
          },
          "name": "architecture",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceArchitecture"
          }
        }
      ],
      "symbolId": "lib/instance-types:InstanceType"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.VpcEndpoint",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPCEndpoint"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});",
        "stability": "stable",
        "summary": "A interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 531
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 475
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports an existing interface VPC endpoint."
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 479
          },
          "name": "fromInterfaceVpcEndpointAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint"
            }
          },
          "static": true
        }
      ],
      "name": "InterfaceVpcEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Access to network connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 529
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "deprecated": "use the `connections` object",
            "stability": "deprecated",
            "summary": "The identifier of the first security group associated with this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 524
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The date and time the interface VPC endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 504
          },
          "name": "vpcEndpointCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The DNS entries for the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 510
          },
          "name": "vpcEndpointDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The interface VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 498
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "One or more network interfaces for the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 516
          },
          "name": "vpcEndpointNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for an ImportedInterfaceVpcEndpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\n\nconst interfaceVpcEndpointAttributes: ec2.InterfaceVpcEndpointAttributes = {\n  port: 123,\n  vpcEndpointId: 'vpcEndpointId',\n\n  // the properties below are optional\n  securityGroupId: 'securityGroupId',\n  securityGroups: [securityGroup],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 661
      },
      "name": "InterfaceVpcEndpointAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port of the service of the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 683
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `securityGroups` instead",
            "stability": "deprecated",
            "summary": "The identifier of the security group associated with the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 672
          },
          "name": "securityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security groups associated with the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 678
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The interface VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 665
          },
          "name": "vpcEndpointId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointAttributes"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "An AWS service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 331
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "prefix",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "port",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 260
      },
      "name": "InterfaceVpcEndpointAwsService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 285
          },
          "name": "APIGATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 262
          },
          "name": "ATHENA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 263
          },
          "name": "CLOUDFORMATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 264
          },
          "name": "CLOUDTRAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 294
          },
          "name": "CLOUDWATCH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 284
          },
          "name": "CLOUDWATCH_EVENTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 293
          },
          "name": "CLOUDWATCH_LOGS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 265
          },
          "name": "CODEBUILD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 266
          },
          "name": "CODEBUILD_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 267
          },
          "name": "CODECOMMIT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 268
          },
          "name": "CODECOMMIT_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 286
          },
          "name": "CODECOMMIT_GIT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 287
          },
          "name": "CODECOMMIT_GIT_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 269
          },
          "name": "CODEGURU_PROFILER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 270
          },
          "name": "CODEGURU_REVIEWER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 271
          },
          "name": "CODEPIPELINE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 272
          },
          "name": "CONFIG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 273
          },
          "name": "EC2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 274
          },
          "name": "EC2_MESSAGES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 275
          },
          "name": "ECR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 276
          },
          "name": "ECR_DOCKER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 277
          },
          "name": "ECS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 278
          },
          "name": "ECS_AGENT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 279
          },
          "name": "ECS_TELEMETRY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 280
          },
          "name": "ELASTIC_FILESYSTEM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 281
          },
          "name": "ELASTIC_FILESYSTEM_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 282
          },
          "name": "ELASTIC_INFERENCE_RUNTIME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 283
          },
          "name": "ELASTIC_LOAD_BALANCING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 288
          },
          "name": "GLUE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 289
          },
          "name": "KEYSPACES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 291
          },
          "name": "KINESIS_FIREHOSE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 290
          },
          "name": "KINESIS_STREAMS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 292
          },
          "name": "KMS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 312
          },
          "name": "LAMBDA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 295
          },
          "name": "RDS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 296
          },
          "name": "RDS_DATA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 309
          },
          "name": "REKOGNITION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 310
          },
          "name": "REKOGNITION_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 297
          },
          "name": "SAGEMAKER_API",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 261
          },
          "name": "SAGEMAKER_NOTEBOOK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 298
          },
          "name": "SAGEMAKER_RUNTIME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 299
          },
          "name": "SAGEMAKER_RUNTIME_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 300
          },
          "name": "SECRETS_MANAGER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 301
          },
          "name": "SERVICE_CATALOG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 302
          },
          "name": "SNS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 303
          },
          "name": "SQS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 304
          },
          "name": "SSM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 305
          },
          "name": "SSM_MESSAGES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 311
          },
          "name": "STEP_FUNCTIONS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 308
          },
          "name": "STORAGE_GATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 306
          },
          "name": "STS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 313
          },
          "name": "TRANSCRIBE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 307
          },
          "name": "TRANSFER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 314
          },
          "name": "XRAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 319
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 324
          },
          "name": "port",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether Private DNS is supported by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 329
          },
          "name": "privateDnsDefault",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointAwsService"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "Options to add an interface endpoint to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 404
      },
      "name": "InterfaceVpcEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Setting this to 'true' requires a lookup to be performed at synthesis time. Account\nand region must be set on the containing stack for this to work.",
            "stability": "stable",
            "summary": "Limit to only those availability zones where the endpoint service can be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 452
          },
          "name": "lookupSupportedAzs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If enabled, all traffic to the endpoint from within the VPC will be\nautomatically allowed. This is done based on the VPC's CIDR range.",
            "stability": "stable",
            "summary": "Whether to automatically allow VPC traffic to the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 442
          },
          "name": "open",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "set by the instance of IInterfaceVpcEndpointService, or true if\nnot defined by the instance of IInterfaceVpcEndpointService",
            "remarks": "This\nallows you to make requests to the service using its default DNS hostname.",
            "stability": "stable",
            "summary": "Whether to associate a private hosted zone with the specified VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 417
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created",
            "stability": "stable",
            "summary": "The security groups to associate with this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 432
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service to use for this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 408
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- private subnets",
            "remarks": "At most one\nper availability zone.",
            "stability": "stable",
            "summary": "The subnets in which to create an endpoint network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 425
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointOptions"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});",
        "stability": "stable",
        "summary": "Construction properties for an InterfaceVpcEndpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 458
      },
      "name": "InterfaceVpcEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC network in which the interface endpoint will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 462
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointProps"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});",
        "stability": "stable",
        "summary": "A custom-hosted service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 251
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "port",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 234
      },
      "name": "InterfaceVpcEndpointService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 239
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 244
          },
          "name": "port",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether Private DNS is supported by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 249
          },
          "name": "privateDnsDefault",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.LaunchTemplate": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "example": "const bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});",
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html",
        "stability": "stable",
        "summary": "This represents an EC2 LaunchTemplate."
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplate",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/launch-template.ts",
          "line": 485
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.LaunchTemplateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ILaunchTemplate",
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 399
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing LaunchTemplate."
          },
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 403
          },
          "name": "fromLaunchTemplateAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LaunchTemplateAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ILaunchTemplate"
            }
          },
          "static": true
        }
      ],
      "name": "LaunchTemplate",
      "properties": [
        {
          "docs": {
            "custom": {
              "note": "Only available if you provide a securityGroup when constructing the LaunchTemplate."
            },
            "stability": "stable",
            "summary": "Allows specifying security group connections for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 660
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The default version for the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 433
          },
          "name": "defaultVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "note": "Only available if you provide a role when constructing the LaunchTemplate."
            },
            "stability": "stable",
            "summary": "Principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 672
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The latest version of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 440
          },
          "name": "latestVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TagManager for tagging support."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 481
          },
          "name": "tags",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The version number of this launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 421
          },
          "name": "versionNumber",
          "overrides": "@aws-cdk/aws-ec2.ILaunchTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The identifier of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 422
          },
          "name": "launchTemplateId",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.ILaunchTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The name of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 423
          },
          "name": "launchTemplateName",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.ILaunchTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The type of OS the instance is running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 447
          },
          "name": "osType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "IAM Role assumed by instances that are launched from this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 454
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "UserData executed by instances that are launched from this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 461
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplate"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes for an imported LaunchTemplate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateAttributes: ec2.LaunchTemplateAttributes = {\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n  versionNumber: 'versionNumber',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 367
      },
      "name": "LaunchTemplateAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` may be set.",
            "stability": "stable",
            "summary": "The identifier of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 382
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` may be set.",
            "stability": "stable",
            "summary": "The name of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 391
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Version: \"$Default\"",
            "stability": "stable",
            "summary": "The version number of this launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 373
          },
          "name": "versionNumber",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateAttributes"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});",
        "stability": "stable",
        "summary": "Properties of a LaunchTemplate."
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 199
      },
      "name": "LaunchTemplateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 255
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No credit type is specified in the Launch Template.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html",
            "stability": "stable",
            "summary": "CPU credit type for burstable EC2 instance types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 264
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CpuCredits"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "False - Detailed monitoring is disabled.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html",
            "stability": "stable",
            "summary": "If set to true, then detailed monitoring will be enabled on instances created with this launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 329
          },
          "name": "detailedMonitoring",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The API termination setting is not specified in the Launch Template.",
            "remarks": "otherwise, you can.",
            "stability": "stable",
            "summary": "If you set this parameter to true, you cannot terminate the instances launched with this launch template using the Amazon EC2 console, CLI, or API;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 272
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EBS optimization is not specified in the launch template.",
            "remarks": "This optimization provides dedicated throughput\nto Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization\nisn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.",
            "stability": "stable",
            "summary": "Indicates whether the instances are optimized for Amazon EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 281
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Hibernation configuration is not specified in the launch template; defaulting to false.",
            "stability": "stable",
            "summary": "If you set this parameter to true, the instance is enabled for hibernation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 295
          },
          "name": "hibernationConfigured",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Shutdown behavior is not specified in the launch template; defaults to STOP.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior",
            "stability": "stable",
            "summary": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 304
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceInitiatedShutdownBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This Launch Template does not specify a default Instance Type.",
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 212
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 319
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "stable",
            "summary": "Name for this launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 205
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This Launch Template does not specify a default AMI.",
            "stability": "stable",
            "summary": "The AMI that will be used by instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 219
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Enablement of Nitro enclaves is not specified in the launch template; defaulting to false.",
            "remarks": "otherwise, it is not enabled for AWS Nitro Enclaves.",
            "stability": "stable",
            "summary": "If this parameter is set to true, the instance is enabled for AWS Nitro Enclaves;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 288
          },
          "name": "nitroEnclaveEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether IMDSv2 should be required on launched instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 343
          },
          "name": "requireImdsv2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No new role is created.",
            "example": "const role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n});",
            "remarks": "The role must be assumable by the service principal `ec2.amazonaws.com`:",
            "stability": "stable",
            "summary": "An IAM role to associate with the instance profile that is used by instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 241
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No security group is assigned.",
            "stability": "stable",
            "summary": "Security group to assign to instances created with the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 336
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Instance launched with this template will not be spot instances.",
            "stability": "stable",
            "summary": "If this property is defined, then the Launch Template's InstanceMarketOptions will be set to use Spot instances, and the options for the Spot instances will be as defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 312
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.LaunchTemplateSpotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This Launch Template creates a UserData based on the type of provided\nmachineImage; no UserData is created if a machineImage is not provided",
            "stability": "stable",
            "summary": "The AMI that will be used by instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 227
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateProps"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2Aspect": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html",
        "stability": "stable",
        "summary": "Aspect that applies IMDS configuration on EC2 Launch Template constructs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateRequireImdsv2Aspect = new ec2.LaunchTemplateRequireImdsv2Aspect(/* all optional props */ {\n  suppressWarnings: false,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2Aspect",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aspects/require-imdsv2-aspect.ts",
          "line": 119
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2AspectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 118
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 123
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a warning annotation to a node, unless `suppressWarnings` is true."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 36
          },
          "name": "warn",
          "parameters": [
            {
              "docs": {
                "summary": "The scope to add the warning to."
              },
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            },
            {
              "docs": {
                "summary": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "LaunchTemplateRequireImdsv2Aspect",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 22
          },
          "name": "suppressWarnings",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:LaunchTemplateRequireImdsv2Aspect"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2AspectProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `LaunchTemplateRequireImdsv2Aspect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateRequireImdsv2AspectProps: ec2.LaunchTemplateRequireImdsv2AspectProps = {\n  suppressWarnings: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2AspectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 111
      },
      "name": "LaunchTemplateRequireImdsv2AspectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether warning annotations from this Aspect should be suppressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 15
          },
          "name": "suppressWarnings",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:LaunchTemplateRequireImdsv2AspectProps"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateSpecialVersions": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A class that provides convenient access to special version tokens for LaunchTemplate versions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst launchTemplateSpecialVersions = new ec2.LaunchTemplateSpecialVersions();"
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateSpecialVersions",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 350
      },
      "name": "LaunchTemplateSpecialVersions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The special value that denotes that users of a Launch Template should reference the DEFAULT version of the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 361
          },
          "name": "DEFAULT_VERSION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The special value that denotes that users of a Launch Template should reference the LATEST version of the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 355
          },
          "name": "LATEST_VERSION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateSpecialVersions"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateSpotOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Interface for the Spot market instance options provided in a LaunchTemplate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const expiration: cdk.Expiration;\n\nconst launchTemplateSpotOptions: ec2.LaunchTemplateSpotOptions = {\n  blockDuration: cdk.Duration.minutes(30),\n  interruptionBehavior: ec2.SpotInstanceInterruption.STOP,\n  maxPrice: 123,\n  requestType: ec2.SpotRequestType.ONE_TIME,\n  validUntil: expiration,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateSpotOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 149
      },
      "name": "LaunchTemplateSpotOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Requested spot instances do not have a pre-defined duration.",
            "remarks": "You can use a duration of 1, 2, 3, 4, 5, or 6 hours.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#fixed-duration-spot-instances",
            "stability": "stable",
            "summary": "Spot Instances with a defined duration (also known as Spot blocks) are designed not to be interrupted and will run continuously for the duration you select."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 158
          },
          "name": "blockDuration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Spot instances will terminate when interrupted.",
            "stability": "stable",
            "summary": "The behavior when a Spot Instance is interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 165
          },
          "name": "interruptionBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SpotInstanceInterruption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Maximum hourly price will default to the on-demand price for the instance type.",
            "remarks": "The value is given\nin dollars. ex: 0.01 for 1 cent per hour, or 0.001 for one-tenth of a cent per hour.",
            "stability": "stable",
            "summary": "Maximum hourly price you're willing to pay for each Spot instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 173
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "One-time spot request.",
            "remarks": "If you are using Spot Instances with an Auto Scaling group, use one-time requests, as the\nAmazon EC2 Auto Scaling service handles requesting new Spot Instances whenever the group is\nbelow its desired capacity.",
            "stability": "stable",
            "summary": "The Spot Instance request type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 184
          },
          "name": "requestType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SpotRequestType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default end date is 7 days from the current date.",
            "remarks": "For a one-time request, the request remains active until all instances\nlaunch, the request is canceled, or this date is reached. If the request is persistent, it remains\nactive until it is canceled or this date and time is reached.",
            "stability": "stable",
            "summary": "The end date of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 193
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Expiration"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateSpotOptions"
    },
    "@aws-cdk/aws-ec2.LinuxUserDataOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when constructing UserData for Linux.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst linuxUserDataOptions: ec2.LinuxUserDataOptions = {\n  shebang: 'shebang',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.LinuxUserDataOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 8
      },
      "name": "LinuxUserDataOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"#!/bin/bash\"",
            "stability": "stable",
            "summary": "Shebang for the UserData script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 14
          },
          "name": "shebang",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:LinuxUserDataOptions"
    },
    "@aws-cdk/aws-ec2.LocationPackageOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for InitPackage.rpm/InitPackage.msi.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\n\nconst locationPackageOptions: ec2.LocationPackageOptions = {\n  key: 'key',\n  serviceRestartHandles: [initServiceRestartHandle],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.LocationPackageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 617
      },
      "name": "LocationPackageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated",
            "remarks": "You can use this to order package installs.",
            "stability": "stable",
            "summary": "Identifier key for this package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 625
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given service after this command has run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 632
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:LocationPackageOptions"
    },
    "@aws-cdk/aws-ec2.LookupMachineImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "The most recent, available, launchable image matching the given filter\ncriteria will be used. Looking up AMIs may take a long time; specify\nas many filter criteria as possible to narrow down the search.\n\nThe AMI selected will be cached in `cdk.context.json` and the same value\nwill be used on future runs. To refresh the AMI lookup, you will have to\nevict the value from the cache using the `cdk context` command. See\nhttps://docs.aws.amazon.com/cdk/latest/guide/context.html for more information.",
        "stability": "stable",
        "summary": "A machine image whose AMI ID will be searched using DescribeImages.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst lookupMachineImage = new ec2.LookupMachineImage({\n  name: 'name',\n\n  // the properties below are optional\n  filters: {\n    filtersKey: ['filters'],\n  },\n  owners: ['owners'],\n  userData: userData,\n  windows: false,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.LookupMachineImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 604
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.LookupMachineImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 603
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 607
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "LookupMachineImage",
      "symbolId": "lib/machine-image:LookupMachineImage"
    },
    "@aws-cdk/aws-ec2.LookupMachineImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Properties for looking up an image."
      },
      "fqn": "@aws-cdk/aws-ec2.LookupMachineImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 644
      },
      "name": "LookupMachineImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No additional filters",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html",
            "stability": "stable",
            "summary": "Additional filters on the AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 663
          },
          "name": "filters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the image (may contain wildcards)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 648
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All owners",
            "stability": "stable",
            "summary": "Owner account IDs or aliases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 655
          },
          "name": "owners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Empty user data appropriate for the platform type",
            "stability": "stable",
            "summary": "Custom userdata for this image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 677
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Look for Windows images."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 670
          },
          "name": "windows",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/machine-image:LookupMachineImageProps"
    },
    "@aws-cdk/aws-ec2.MachineImage": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst template = new ec2.LaunchTemplate(this, 'LaunchTemplate', {\n  machineImage: ec2.MachineImage.latestAmazonLinux(),\n  securityGroup: new ec2.SecurityGroup(this, 'LaunchTemplateSG', {\n    vpc: vpc,\n  }),\n});",
        "stability": "stable",
        "summary": "Factory functions for standard Amazon Machine Image objects."
      },
      "fqn": "@aws-cdk/aws-ec2.MachineImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "remarks": "By default, the SSM parameter is refreshed at every deployment,\ncausing your instances to be replaced whenever a new version of the AMI\nis released.\n\nPass `{ cachedInContext: true }` to keep the AMI ID stable. If you do, you\nwill have to remember to periodically invalidate the context to refresh\nto the newest AMI ID.",
            "stability": "stable",
            "summary": "An image specified in SSM parameter store."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 100
          },
          "name": "fromSsmParameter",
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SsmParameterImageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `MachineImage.fromSsmParameter()` instead",
            "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.",
            "stability": "deprecated",
            "summary": "An image specified in SSM parameter store that is automatically kept up-to-date."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 85
          },
          "name": "fromSSMParameter",
          "parameters": [
            {
              "docs": {
                "summary": "The name of SSM parameter containing the AMi id."
              },
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The operating system type of the AMI."
              },
              "name": "os",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
              }
            },
            {
              "docs": {
                "summary": "optional user data for the given image."
              },
              "name": "userData",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.UserData"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A Linux image where you specify the AMI ID for every region."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 57
          },
          "name": "genericLinux",
          "parameters": [
            {
              "docs": {
                "summary": "For every region where you are deploying the stack, specify the AMI ID for that region."
              },
              "name": "amiMap",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "docs": {
                "summary": "Customize the image by supplying additional props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GenericLinuxImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A Windows image where you specify the AMI ID for every region."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 68
          },
          "name": "genericWindows",
          "parameters": [
            {
              "docs": {
                "summary": "For every region where you are deploying the stack, specify the AMI ID for that region."
              },
              "name": "amiMap",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "docs": {
                "summary": "Customize the image by supplying additional props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GenericWindowsImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.",
            "stability": "stable",
            "summary": "An Amazon Linux image that is automatically kept up-to-date."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 46
          },
          "name": "latestAmazonLinux",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.",
            "stability": "stable",
            "summary": "A Windows image that is automatically kept up-to-date."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 34
          },
          "name": "latestWindows",
          "parameters": [
            {
              "name": "version",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.WindowsVersion"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.WindowsImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The most recent, available, launchable image matching the given filter\ncriteria will be used. Looking up AMIs may take a long time; specify\nas many filter criteria as possible to narrow down the search.\n\nThe AMI selected will be cached in `cdk.context.json` and the same value\nwill be used on future runs. To refresh the AMI lookup, you will have to\nevict the value from the cache using the `cdk context` command. See\nhttps://docs.aws.amazon.com/cdk/latest/guide/context.html for more information.\n\nThis function can not be used in environment-agnostic stacks.",
            "stability": "stable",
            "summary": "Look up a shared Machine Image using DescribeImages."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 118
          },
          "name": "lookup",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LookupMachineImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        }
      ],
      "name": "MachineImage",
      "symbolId": "lib/machine-image:MachineImage"
    },
    "@aws-cdk/aws-ec2.MachineImageConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for a machine image.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst machineImageConfig: ec2.MachineImageConfig = {\n  imageId: 'imageId',\n  osType: ec2.OperatingSystemType.LINUX,\n  userData: userData,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.MachineImageConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 126
      },
      "name": "MachineImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AMI ID of the image to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 130
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Operating system type for this image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 135
          },
          "name": "osType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Initial UserData for this image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 140
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:MachineImageConfig"
    },
    "@aws-cdk/aws-ec2.MultipartBody": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const multipartUserData = new ec2.MultipartUserData();\nconst commandsUserData = ec2.UserData.forLinux();\nmultipartUserData.addUserDataPart(commandsUserData, ec2.MultipartBody.SHELL_SCRIPT, true);\n\n// Adding commands to the multipartUserData adds them to commandsUserData, and vice-versa.\nmultipartUserData.addCommands('touch /root/multi.txt');\ncommandsUserData.addCommands('touch /root/userdata.txt');",
        "stability": "stable",
        "summary": "The base class for all classes which can be used as {@link MultipartUserData}."
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartBody",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-data.ts",
          "line": 354
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 320
      },
      "methods": [
        {
          "docs": {
            "remarks": "When transfer encoding is specified (typically as Base64), it's caller responsibility to convert body to\nBase64 either by wrapping with `Fn.base64` or by converting it by other converters.",
            "stability": "stable",
            "summary": "Constructs the raw `MultipartBody` using specified body, content type and transfer encoding."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 350
          },
          "name": "fromRawBody",
          "parameters": [
            {
              "name": "opts",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.MultipartBodyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MultipartBody"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For more information about content types see {@link MultipartBodyOptions.contentType}.",
            "stability": "stable",
            "summary": "Constructs the new `MultipartBody` wrapping existing `UserData`. Modification to `UserData` are reflected in subsequent renders of the part."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 340
          },
          "name": "fromUserData",
          "parameters": [
            {
              "docs": {
                "summary": "user data to wrap into body part."
              },
              "name": "userData",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.UserData"
              }
            },
            {
              "docs": {
                "summary": "optional content type, if default one should not be used."
              },
              "name": "contentType",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MultipartBody"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Subclasses should not add leading nor trailing new line characters (\\r \\n)",
            "stability": "stable",
            "summary": "Render body part as the string."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 362
          },
          "name": "renderBodyPart",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "MultipartBody",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Content type for boot hooks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 329
          },
          "name": "CLOUD_BOOTHOOK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Content type for shell scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 324
          },
          "name": "SHELL_SCRIPT",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:MultipartBody"
    },
    "@aws-cdk/aws-ec2.MultipartBodyOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when creating `MultipartBody`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst multipartBodyOptions: ec2.MultipartBodyOptions = {\n  contentType: 'contentType',\n\n  // the properties below are optional\n  body: 'body',\n  transferEncoding: 'transferEncoding',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartBodyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 289
      },
      "name": "MultipartBodyOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "undefined - body will not be added to part",
            "stability": "stable",
            "summary": "The body of message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 314
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Some examples of content types:\n* `text/x-shellscript; charset=\"utf-8\"` (shell script)\n* `text/cloud-boothook; charset=\"utf-8\"` (shell script executed during boot phase)\n\nFor Linux shell scripts use `text/x-shellscript`.",
            "stability": "stable",
            "summary": "`Content-Type` header of this part."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 300
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined - body is not encoded",
            "stability": "stable",
            "summary": "`Content-Transfer-Encoding` header specifying part encoding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 307
          },
          "name": "transferEncoding",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:MultipartBodyOptions"
    },
    "@aws-cdk/aws-ec2.MultipartUserData": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.UserData",
      "docs": {
        "example": "const bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});",
        "remarks": "This class represents MIME multipart user data, as described in.\n[Specifying Multiple User Data Blocks Using a MIME Multi Part Archive](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#multi-part_user_data)",
        "stability": "stable",
        "summary": "Mime multipart user data."
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartUserData",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-data.ts",
          "line": 454
        },
        "parameters": [
          {
            "name": "opts",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MultipartUserDataOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 444
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 561
          },
          "name": "addCommands",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds commands to execute a file."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 545
          },
          "name": "addExecuteFileCommand",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ExecuteFileOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data that will run when the script exits."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 569
          },
          "name": "addOnExitCommands",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a part to the list of parts."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 478
          },
          "name": "addPart",
          "parameters": [
            {
              "name": "part",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.MultipartBody"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds commands to download a file from S3."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 537
          },
          "name": "addS3DownloadCommand",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.S3DownloadOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a command which will send a cfn-signal when the user data script ends."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 553
          },
          "name": "addSignalOnExitCommand",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.Resource"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "If `makeDefault` is true, then the UserData added by this method\nwill also be the target of calls to the `add*Command` methods on\nthis MultipartUserData object.\n\nIf `makeDefault` is false, then this is the same as calling:\n\n```ts\ndeclare const multiPart: ec2.MultipartUserData;\ndeclare const userData: ec2.UserData;\ndeclare const contentType: string;\n\nmultiPart.addPart(ec2.MultipartBody.fromUserData(userData, contentType));\n```\n\nAn undefined `makeDefault` defaults to either:\n- `true` if no default UserData has been set yet; or\n- `false` if there is no default UserData set.",
            "stability": "stable",
            "summary": "Adds a multipart part based on a UserData object."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 503
          },
          "name": "addUserDataPart",
          "parameters": [
            {
              "name": "userData",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.UserData"
              }
            },
            {
              "name": "contentType",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "makeDefault",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the UserData for use in a construct."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 511
          },
          "name": "render",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "MultipartUserData",
      "symbolId": "lib/user-data:MultipartUserData"
    },
    "@aws-cdk/aws-ec2.MultipartUserDataOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating {@link MultipartUserData}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst multipartUserDataOptions: ec2.MultipartUserDataOptions = {\n  partsSeparator: 'partsSeparator',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartUserDataOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 426
      },
      "name": "MultipartUserDataOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "`+AWS+CDK+User+Data+Separator==`",
            "remarks": "This string should contain [a-zA-Z0-9()+,-./:=?] characters only, and should not be present in any part, or in text content of archive.",
            "stability": "stable",
            "summary": "The string used to separate parts in multipart user data archive (it's like MIME boundary)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 434
          },
          "name": "partsSeparator",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:MultipartUserDataOptions"
    },
    "@aws-cdk/aws-ec2.NamedPackageOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for InitPackage.yum/apt/rubyGem/python.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\n\nconst namedPackageOptions: ec2.NamedPackageOptions = {\n  serviceRestartHandles: [initServiceRestartHandle],\n  version: ['version'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 638
      },
      "name": "NamedPackageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given services after this command has run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 651
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Install the latest version",
            "stability": "stable",
            "summary": "Specify the versions to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 644
          },
          "name": "version",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:NamedPackageOptions"
    },
    "@aws-cdk/aws-ec2.NatGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a NAT gateway.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst natGatewayProps: ec2.NatGatewayProps = {\n  eipAllocationIds: ['eipAllocationIds'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.NatGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 130
      },
      "name": "NatGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No fixed EIPs allocated for the NAT gateways",
            "stability": "stable",
            "summary": "EIP allocation IDs for the NAT gateways."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 136
          },
          "name": "eipAllocationIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/nat:NatGatewayProps"
    },
    "@aws-cdk/aws-ec2.NatInstanceImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.LookupMachineImage",
      "docs": {
        "stability": "stable",
        "summary": "Machine image representing the latest NAT instance image.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst natInstanceImage = new ec2.NatInstanceImage();"
      },
      "fqn": "@aws-cdk/aws-ec2.NatInstanceImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nat.ts",
          "line": 394
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 393
      },
      "name": "NatInstanceImage",
      "symbolId": "lib/nat:NatInstanceImage"
    },
    "@aws-cdk/aws-ec2.NatInstanceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });",
        "stability": "stable",
        "summary": "Properties for a NAT instance."
      },
      "fqn": "@aws-cdk/aws-ec2.NatInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 144
      },
      "name": "NatInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "- Use `defaultAllowedTraffic`.",
            "remarks": "If you set this to false, you must configure the NAT instance's security\ngroups in another way, either by passing in a fully configured Security\nGroup using the `securityGroup` property, or by configuring it using the\n`.securityGroup` or `.connections` members after passing the NAT Instance\nProvider to a Vpc.",
            "stability": "deprecated",
            "summary": "Allow all inbound traffic through the NAT instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 196
          },
          "name": "allowAllTraffic",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NatTrafficDirection.INBOUND_AND_OUTBOUND",
            "remarks": "By default, inbound and outbound traffic is allowed.\n\nIf you set this to another value than INBOUND_AND_OUTBOUND, you must\nconfigure the NAT instance's security groups in another way, either by\npassing in a fully configured Security Group using the `securityGroup`\nproperty, or by configuring it using the `.securityGroup` or\n`.connections` members after passing the NAT Instance Provider to a Vpc.",
            "stability": "stable",
            "summary": "Direction to allow all traffic through the NAT instance by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 211
          },
          "name": "defaultAllowedTraffic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.NatTrafficDirection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Instance type of the NAT instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 168
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 175
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Latest NAT instance image",
            "remarks": "By default, will do an AMI lookup for the latest NAT instance image.\n\nIf you have a specific AMI ID you want to use, pass a `GenericLinuxImage`. For example:\n\n```ts\nec2.NatProvider.instance({\n   instanceType: new ec2.InstanceType('t3.micro'),\n   machineImage: new ec2.GenericLinuxImage({\n     'us-east-2': 'ami-0f9c61b5a562a16af'\n   })\n})\n```",
            "stability": "stable",
            "summary": "The machine image (AMI) to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 163
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group will be created",
            "stability": "stable",
            "summary": "Security Group for NAT instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 182
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        }
      ],
      "symbolId": "lib/nat:NatInstanceProps"
    },
    "@aws-cdk/aws-ec2.NatInstanceProvider": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.NatProvider",
      "docs": {
        "example": "    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });",
        "stability": "stable",
        "summary": "NAT provider which uses NAT Instances."
      },
      "fqn": "@aws-cdk/aws-ec2.NatInstanceProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nat.ts",
          "line": 271
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NatInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 266
      },
      "methods": [
        {
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Called by the VPC to configure NAT."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 279
          },
          "name": "configureNat",
          "overrides": "@aws-cdk/aws-ec2.NatProvider",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ConfigureNatOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Configures subnet with the gateway."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 347
          },
          "name": "configureSubnet",
          "overrides": "@aws-cdk/aws-ec2.NatProvider",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnet"
              }
            }
          ]
        }
      ],
      "name": "NatInstanceProvider",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return list of gateways spawned by the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 343
          },
          "name": "configuredGateways",
          "overrides": "@aws-cdk/aws-ec2.NatProvider",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.GatewayConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Manage the Security Groups associated with the NAT instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 336
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Security Group associated with the NAT instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 326
          },
          "name": "securityGroup",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        }
      ],
      "symbolId": "lib/nat:NatInstanceProvider"
    },
    "@aws-cdk/aws-ec2.NatProvider": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });",
        "remarks": "Determines what type of NAT provider to create, either NAT gateways or NAT\ninstance.",
        "stability": "stable",
        "summary": "NAT providers."
      },
      "fqn": "@aws-cdk/aws-ec2.NatProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 55
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Called by the VPC to configure NAT."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 92
          },
          "name": "configureNat",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ConfigureNatOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Configures subnet with the gateway."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 99
          },
          "name": "configureSubnet",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnet"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "NAT gateways are managed by AWS.",
            "see": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html",
            "stability": "stable",
            "summary": "Use NAT Gateways to provide NAT services for your VPC."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 63
          },
          "name": "gateway",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NatGatewayProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NatProvider"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "NAT instances are managed by you, but in return allow more configuration.\n\nBe aware that instances created using this provider will not be\nautomatically replaced if they are stopped for any reason. You should implement\nyour own NatProvider based on AutoScaling groups if you need that.",
            "see": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_NAT_Instance.html",
            "stability": "stable",
            "summary": "Use NAT instances to provide NAT services for your VPC."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 78
          },
          "name": "instance",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NatInstanceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NatInstanceProvider"
            }
          },
          "static": true
        }
      ],
      "name": "NatProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return list of gateways spawned by the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 85
          },
          "name": "configuredGateways",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.GatewayConfig"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/nat:NatProvider"
    },
    "@aws-cdk/aws-ec2.NatTrafficDirection": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Direction of traffic to allow all by default."
      },
      "fqn": "@aws-cdk/aws-ec2.NatTrafficDirection",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 14
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow all outbound and inbound traffic."
          },
          "name": "INBOUND_AND_OUTBOUND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Disallow all outbound and inbound traffic."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow all outbound traffic and disallow all inbound traffic."
          },
          "name": "OUTBOUND_ONLY"
        }
      ],
      "name": "NatTrafficDirection",
      "symbolId": "lib/nat:NatTrafficDirection"
    },
    "@aws-cdk/aws-ec2.NetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "By default, will deny all inbound and outbound traffic unless entries are\nadded explicitly allowing it.",
        "stability": "stable",
        "summary": "Define a new custom network ACL.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n\nconst networkAcl = new ec2.NetworkAcl(this, 'MyNetworkAcl', {\n  vpc: vpc,\n\n  // the properties below are optional\n  networkAclName: 'networkAclName',\n  subnetSelection: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAcl",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/network-acl.ts",
          "line": 114
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.INetworkAcl"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a new entry to the ACL."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 36
          },
          "name": "addEntry",
          "overrides": "@aws-cdk/aws-ec2.INetworkAcl",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclEntry"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate the ACL with a given set of subnets."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 136
          },
          "name": "associateWithSubnet",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "selection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing NetworkAcl into this app."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 89
          },
          "name": "fromNetworkAclId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "networkAclId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
            }
          },
          "static": true
        }
      ],
      "name": "NetworkAcl",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the NetworkACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 102
          },
          "name": "networkAclId",
          "overrides": "@aws-cdk/aws-ec2.INetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The VPC ID for this NetworkACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 109
          },
          "name": "networkAclVpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAcl"
    },
    "@aws-cdk/aws-ec2.NetworkAclEntry": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define an entry in a Network ACL table.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const aclCidr: ec2.AclCidr;\ndeclare const aclTraffic: ec2.AclTraffic;\ndeclare const networkAcl: ec2.NetworkAcl;\n\nconst networkAclEntry = new ec2.NetworkAclEntry(this, 'MyNetworkAclEntry', {\n  cidr: aclCidr,\n  networkAcl: networkAcl,\n  ruleNumber: 123,\n  traffic: aclTraffic,\n\n  // the properties below are optional\n  direction: ec2.TrafficDirection.EGRESS,\n  networkAclEntryName: 'networkAclEntryName',\n  ruleAction: ec2.Action.ALLOW,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAclEntry",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/network-acl.ts",
          "line": 270
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclEntryProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.INetworkAclEntry"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 267
      },
      "name": "NetworkAclEntry",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 268
          },
          "name": "networkAcl",
          "overrides": "@aws-cdk/aws-ec2.INetworkAclEntry",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAclEntry"
    },
    "@aws-cdk/aws-ec2.NetworkAclEntryProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create NetworkAclEntry.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const aclCidr: ec2.AclCidr;\ndeclare const aclTraffic: ec2.AclTraffic;\ndeclare const networkAcl: ec2.NetworkAcl;\n\nconst networkAclEntryProps: ec2.NetworkAclEntryProps = {\n  cidr: aclCidr,\n  networkAcl: networkAcl,\n  ruleNumber: 123,\n  traffic: aclTraffic,\n\n  // the properties below are optional\n  direction: ec2.TrafficDirection.EGRESS,\n  networkAclEntryName: 'networkAclEntryName',\n  ruleAction: ec2.Action.ALLOW,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAclEntryProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 255
      },
      "name": "NetworkAclEntryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The network ACL this entry applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 259
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAclEntryProps"
    },
    "@aws-cdk/aws-ec2.NetworkAclProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create NetworkAcl.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n\nconst networkAclProps: ec2.NetworkAclProps = {\n  vpc: vpc,\n\n  // the properties below are optional\n  networkAclName: 'networkAclName',\n  subnetSelection: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAclProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 50
      },
      "name": "NetworkAclProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a networkAclName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit name.",
            "stability": "stable",
            "summary": "The name of the NetworkAcl."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 59
          },
          "name": "networkAclName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No subnets associated",
            "remarks": "More subnets can always be added later by calling\n`associateWithSubnets()`.",
            "stability": "stable",
            "summary": "Subnets in the given VPC to associate the ACL with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 74
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC in which to create the NetworkACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 64
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAclProps"
    },
    "@aws-cdk/aws-ec2.OperatingSystemType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "The OS type of a particular image."
      },
      "fqn": "@aws-cdk/aws-ec2.OperatingSystemType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 581
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LINUX"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Used when the type of the operating system is not known (for example, for imported Auto-Scaling Groups)."
          },
          "name": "UNKNOWN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS"
        }
      ],
      "name": "OperatingSystemType",
      "symbolId": "lib/machine-image:OperatingSystemType"
    },
    "@aws-cdk/aws-ec2.Peer": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const instanceType: ec2.InstanceType;\n\nconst provider = ec2.NatProvider.instance({\n  instanceType,\n  allowAllTraffic: false,\n});\nnew ec2.Vpc(this, 'TheVPC', {\n  natGatewayProvider: provider,\n});\nprovider.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/8'), ec2.Port.tcp(80));",
        "remarks": "The static methods on this object can be used to create peer objects\nwhich represent a connection partner in Security Group rules.\n\nUse this object if you need to represent connection partners using plain IP\naddresses, or a prefix list ID.\n\nIf you want to address a connection partner by Security Group, you can just\nuse the Security Group (or the construct that contains a Security Group)\ndirectly, as it already implements `IPeer`.",
        "stability": "stable",
        "summary": "Peer object factories (to be used in Security Group management)."
      },
      "fqn": "@aws-cdk/aws-ec2.Peer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/peer.ts",
          "line": 78
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/peer.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Any IPv4 address."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 53
          },
          "name": "anyIpv4",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any IPv6 address."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 67
          },
          "name": "anyIpv6",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an IPv4 peer from a CIDR."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 46
          },
          "name": "ipv4",
          "parameters": [
            {
              "name": "cidrIp",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an IPv6 peer from a CIDR."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 60
          },
          "name": "ipv6",
          "parameters": [
            {
              "name": "cidrIp",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A prefix list."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 74
          },
          "name": "prefixList",
          "parameters": [
            {
              "name": "prefixListId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        }
      ],
      "name": "Peer",
      "symbolId": "lib/peer:Peer"
    },
    "@aws-cdk/aws-ec2.Port": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "declare const instanceType: ec2.InstanceType;\n\nconst provider = ec2.NatProvider.instance({\n  instanceType,\n  allowAllTraffic: false,\n});\nnew ec2.Vpc(this, 'TheVPC', {\n  natGatewayProvider: provider,\n});\nprovider.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/8'), ec2.Port.tcp(80));",
        "stability": "stable",
        "summary": "Interface for classes that provide the connection-specification parts of a security group rule."
      },
      "fqn": "@aws-cdk/aws-ec2.Port",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/port.ts",
          "line": 346
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PortProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/port.ts",
        "line": 189
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A single AH port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 332
          },
          "name": "ah",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All ICMP traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 298
          },
          "name": "allIcmp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any TCP traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 217
          },
          "name": "allTcp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 310
          },
          "name": "allTraffic",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any UDP traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 253
          },
          "name": "allUdp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A single ESP port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 320
          },
          "name": "esp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ICMP ping (echo) traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 291
          },
          "name": "icmpPing",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All codes for a single ICMP type."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 279
          },
          "name": "icmpType",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml",
            "stability": "stable",
            "summary": "A specific combination of ICMP type and code."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 267
          },
          "name": "icmpTypeAndCode",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "code",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A single TCP port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 193
          },
          "name": "tcp",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A TCP port range."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 205
          },
          "name": "tcpRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 353
          },
          "name": "toRuleJson",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 361
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A single UDP port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 229
          },
          "name": "udp",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A UDP port range."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 241
          },
          "name": "udpRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        }
      ],
      "name": "Port",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 344
          },
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/port:Port"
    },
    "@aws-cdk/aws-ec2.PortProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create a port range.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst portProps: ec2.PortProps = {\n  protocol: ec2.Protocol.ALL,\n  stringRepresentation: 'stringRepresentation',\n\n  // the properties below are optional\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.PortProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/port.ts",
        "line": 160
      },
      "name": "PortProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Not included in the rule",
            "stability": "stable",
            "summary": "The starting port for the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 171
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The protocol for the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 164
          },
          "name": "protocol",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Protocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "String representation for this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 183
          },
          "name": "stringRepresentation",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not included in the rule",
            "stability": "stable",
            "summary": "The ending port for the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 178
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/port:PortProps"
    },
    "@aws-cdk/aws-ec2.PrivateSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.Subnet",
      "docs": {
        "stability": "stable",
        "summary": "Represents a private VPC subnet resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst privateSubnet = new ec2.PrivateSubnet(this, 'MyPrivateSubnet', {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1872
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PrivateSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPrivateSubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1866
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1868
          },
          "name": "fromPrivateSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPrivateSubnet"
            }
          },
          "static": true
        }
      ],
      "name": "PrivateSubnet",
      "symbolId": "lib/vpc:PrivateSubnet"
    },
    "@aws-cdk/aws-ec2.PrivateSubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst privateSubnetAttributes: ec2.PrivateSubnetAttributes = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  availabilityZone: 'availabilityZone',\n  ipv4CidrBlock: 'ipv4CidrBlock',\n  routeTableId: 'routeTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnetAttributes",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1861
      },
      "name": "PrivateSubnetAttributes",
      "symbolId": "lib/vpc:PrivateSubnetAttributes"
    },
    "@aws-cdk/aws-ec2.PrivateSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst privateSubnetProps: ec2.PrivateSubnetProps = {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnetProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1855
      },
      "name": "PrivateSubnetProps",
      "symbolId": "lib/vpc:PrivateSubnetProps"
    },
    "@aws-cdk/aws-ec2.Protocol": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml",
        "stability": "stable",
        "summary": "Protocol for use in Connection Rules."
      },
      "fqn": "@aws-cdk/aws-ec2.Protocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/port.ts",
        "line": 8
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "A_N"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_0_HOP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_DFS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_ENC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_LOCAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ARIS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AX_25"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BBN_RCC_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BNA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BR_SAT_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CBT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHAOS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMPAQ_PEER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CPHB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CPNX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CRTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CRUDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DCCP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DCN_MEAS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DDX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DSR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EIGRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMCON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ENCAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ESP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ETHERIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ETHERNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXPERIMENT_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXPERIMENT_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FIRE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GRE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HOPOPT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "I_NLSP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IATP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ICMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ICMPV6"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IDPR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IDPR_CMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IDRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IFMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IGMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPCOMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPCV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPLT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV4"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_FRAG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_NONXT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_OPTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_ROUTE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPX_IN_IP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IRTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ISIS_IPV4"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ISO_IP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ISO_TP4"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KRYPTOLAN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "L2_T_P"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LARP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LEAF_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LEAF_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MERIT_INP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MFE_NSP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MICP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILITY_HEADER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MPLS_IN_IP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MUX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NARP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NETBLT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NSFNET_IGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NVP_II"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OSPFIGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PGM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PIM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PIPE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PNNI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PVP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QNX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESERVED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROHC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSVP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSVP_E2E_IGNORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RVD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAT_EXPAK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAT_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCC_SP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCPS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SDRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECURE_VMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SHIM6"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SKIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SPRITE_RPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SPS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SSCOPMCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SUN_ND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SWIPE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TCF"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THREEPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLSP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TPPLUSPLUS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRUNK_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRUNK_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UDPLITE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UTI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VINES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VISA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VRRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WB_EXPAK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WB_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WESP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WSN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "XNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "XNS_IDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "XTP"
        }
      ],
      "name": "Protocol",
      "symbolId": "lib/port:Protocol"
    },
    "@aws-cdk/aws-ec2.PublicSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.Subnet",
      "docs": {
        "stability": "stable",
        "summary": "Represents a public VPC subnet resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst publicSubnet = new ec2.PublicSubnet(this, 'MyPublicSubnet', {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1834
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PublicSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPublicSubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1828
      },
      "methods": [
        {
          "docs": {
            "remarks": "Also adds the EIP for the managed NAT.",
            "returns": "A ref to the the NAT Gateway ID",
            "stability": "stable",
            "summary": "Creates a new managed NAT gateway attached to this public subnet."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1843
          },
          "name": "addNatGateway",
          "parameters": [
            {
              "name": "eipAllocationId",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNatGateway"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1830
          },
          "name": "fromPublicSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PublicSubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPublicSubnet"
            }
          },
          "static": true
        }
      ],
      "name": "PublicSubnet",
      "symbolId": "lib/vpc:PublicSubnet"
    },
    "@aws-cdk/aws-ec2.PublicSubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst publicSubnetAttributes: ec2.PublicSubnetAttributes = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  availabilityZone: 'availabilityZone',\n  ipv4CidrBlock: 'ipv4CidrBlock',\n  routeTableId: 'routeTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnetAttributes",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1823
      },
      "name": "PublicSubnetAttributes",
      "symbolId": "lib/vpc:PublicSubnetAttributes"
    },
    "@aws-cdk/aws-ec2.PublicSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst publicSubnetProps: ec2.PublicSubnetProps = {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnetProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1817
      },
      "name": "PublicSubnetProps",
      "symbolId": "lib/vpc:PublicSubnetProps"
    },
    "@aws-cdk/aws-ec2.RouterType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const vpc = new ec2.Vpc(this, \"VPC\", {\n  subnetConfiguration: [{\n      subnetType: ec2.SubnetType.PUBLIC,\n      name: 'Public',\n    },{\n      subnetType: ec2.SubnetType.ISOLATED,\n      name: 'Isolated',\n    }]\n});\n\n(vpc.isolatedSubnets[0] as ec2.Subnet).addRoute(\"StaticRoute\", {\n    routerId: vpc.internetGatewayId!,\n    routerType: ec2.RouterType.GATEWAY,\n    destinationCidrBlock: \"8.8.8.8/32\",\n})",
        "stability": "stable",
        "summary": "Type of router used in route."
      },
      "fqn": "@aws-cdk/aws-ec2.RouterType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1774
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Egress-only Internet Gateway."
          },
          "name": "EGRESS_ONLY_INTERNET_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Internet Gateway."
          },
          "name": "GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance."
          },
          "name": "INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "NAT Gateway."
          },
          "name": "NAT_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Network Interface."
          },
          "name": "NETWORK_INTERFACE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "VPC peering connection."
          },
          "name": "VPC_PEERING_CONNECTION"
        }
      ],
      "name": "RouterType",
      "symbolId": "lib/vpc:RouterType"
    },
    "@aws-cdk/aws-ec2.S3DownloadOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "import { Asset } from '@aws-cdk/aws-s3-assets';\n\ndeclare const instance: ec2.Instance;\n\nconst asset = new Asset(this, 'Asset', {\n  path: './configure.sh'\n});\n\nconst localPath = instance.userData.addS3DownloadCommand({\n  bucket:asset.bucket,\n  bucketKey:asset.s3ObjectKey,\n  region: 'us-east-1', // Optional\n});\ninstance.userData.addExecuteFileCommand({\n  filePath:localPath,\n  arguments: '--verbose -y'\n});\nasset.grantRead(instance.role);",
        "stability": "stable",
        "summary": "Options when downloading files from S3."
      },
      "fqn": "@aws-cdk/aws-ec2.S3DownloadOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 20
      },
      "name": "S3DownloadOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the S3 bucket to download from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 25
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The key of the file to download."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 30
          },
          "name": "bucketKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Linux   - /tmp/bucketKey\nWindows - %TEMP%/bucketKey",
            "stability": "stable",
            "summary": "The name of the local file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 38
          },
          "name": "localFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "The region of the S3 Bucket (needed for access via VPC Gateway)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 44
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:S3DownloadOptions"
    },
    "@aws-cdk/aws-ec2.SecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "example": "const mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', {\n  vpc,\n  description: 'Allow ssh access to ec2 instances',\n  allowAllOutbound: true   // Can be set to false\n});\nmySecurityGroup.addIngressRule(ec2.Peer.anyIpv4(), ec2.Port.tcp(22), 'allow ssh access from the world');",
        "remarks": "Security Groups act like a firewall with a set of rules, and are associated\nwith any AWS resource that has or creates Elastic Network Interfaces (ENIs).\nA typical example of a resource that has a security group is an Instance (or\nAuto Scaling Group of instances)\n\nIf you are defining new infrastructure in CDK, there is a good chance you\nwon't have to interact with this class at all. Like IAM Roles, Security\nGroups need to exist to control access between AWS resources, but CDK will\nautomatically generate and populate them with least-privilege permissions\nfor you so you can concentrate on your business logic.\n\nAll Constructs that require Security Groups will create one for you if you\ndon't specify one at construction. After construction, you can selectively\nallow connections to and between constructs via--for example-- the `instance.connections`\nobject. Think of it as \"allowing connections to your instance\", rather than\n\"adding ingress rules a security group\". See the [Allowing\nConnections](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#allowing-connections)\nsection in the library documentation for examples.\n\nDirect manipulation of the Security Group through `addIngressRule` and\n`addEgressRule` is possible, but mutation through the `.connections` object\nis recommended. If you peer two constructs with security groups this way,\nappropriate rules will be created in both.\n\nIf you have an existing security group you want to use in your CDK application,\nyou would import it like this:\n\n```ts\nconst securityGroup = ec2.SecurityGroup.fromSecurityGroupId(this, 'SG', 'sg-12345', {\n   mutable: false\n});\n```",
        "stability": "stable",
        "summary": "Creates an Amazon EC2 security group within a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/security-group.ts",
          "line": 453
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISecurityGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 325
      },
      "methods": [
        {
          "docs": {
            "deprecated": "Use `fromLookupById()` instead",
            "stability": "deprecated",
            "summary": "Look up a security group by id."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 331
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Look up a security group by id."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 338
          },
          "name": "fromLookupById",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Look up a security group by name."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 345
          },
          "name": "fromLookupByName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This method will assume that the Security Group has a rule in it which allows\nall outbound traffic, and so will not add egress rules to the imported Security\nGroup (only ingress rules).\n\nIf your existing Security Group needs to have egress rules added, pass the\n`allowAllOutbound: false` option on import.",
            "stability": "stable",
            "summary": "Import an existing security group into this app."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 359
          },
          "name": "fromSecurityGroupId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SecurityGroupImportOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return whether the indicated object is a security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 60
          },
          "name": "isSecurityGroup",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an egress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 498
          },
          "name": "addEgressRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an ingress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 481
          },
          "name": "addIngressRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "A SecurityGroup rule is parented under the group it's related to, UNLESS\nwe're in a cross-stack scenario with another Security Group. In that case,\nwe respect the 'remoteRule' flag and will parent under the other security\ngroup.\n\nThis is necessary to avoid cyclic dependencies between stacks, since both\ningress and egress rules will reference both security groups, and a naive\nparenting will lead to the following situation:\n\n   ╔════════════════════╗         ╔════════════════════╗\n   ║  ┌───────────┐     ║         ║    ┌───────────┐   ║\n   ║  │  GroupA   │◀────╬─┐   ┌───╬───▶│  GroupB   │   ║\n   ║  └───────────┘     ║ │   │   ║    └───────────┘   ║\n   ║        ▲           ║ │   │   ║          ▲         ║\n   ║        │           ║ │   │   ║          │         ║\n   ║        │           ║ │   │   ║          │         ║\n   ║  ┌───────────┐     ║ └───┼───╬────┌───────────┐   ║\n   ║  │  EgressA  │─────╬─────┘   ║    │ IngressB  │   ║\n   ║  └───────────┘     ║         ║    └───────────┘   ║\n   ║                    ║         ║                    ║\n   ╚════════════════════╝         ╚════════════════════╝\n\nBy having the ability to switch the parent, we avoid the cyclic reference by\nkeeping all rules in a single stack.\n\nIf this happens, we also have to change the construct ID, because\notherwise we might have two objects with the same ID if we have\nmultiple reversed security group relationships.\n\n   ╔═══════════════════════════════════╗\n   ║┌───────────┐                      ║\n   ║│  GroupB   │                      ║\n   ║└───────────┘                      ║\n   ║      ▲                            ║\n   ║      │              ┌───────────┐ ║\n   ║      ├────\"from A\"──│ IngressB  │ ║\n   ║      │              └───────────┘ ║\n   ║      │              ┌───────────┐ ║\n   ║      ├─────\"to B\"───│  EgressA  │ ║\n   ║      │              └───────────┘ ║\n   ║      │              ┌───────────┐ ║\n   ║      └─────\"to B\"───│  EgressC  │ ║  <-- oops\n   ║                     └───────────┘ ║\n   ╚═══════════════════════════════════╝",
            "stability": "stable",
            "summary": "Determine where to parent a new ingress/egress rule."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 176
          },
          "name": "determineRuleScope",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "fromTo",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "json"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 123
          },
          "name": "toEgressRuleConfig",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 119
          },
          "name": "toIngressRuleConfig",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "SecurityGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the SecurityGroup has been configured to allow all outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 442
          },
          "name": "allowAllOutbound",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 67
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 68
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 430
          },
          "name": "securityGroupId",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "deprecated": "returns the security group ID, rather than the name.",
            "stability": "deprecated",
            "summary": "An attribute that represents the security group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 423
          },
          "name": "securityGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The VPC ID this security group is part of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 437
          },
          "name": "securityGroupVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 79
          },
          "name": "uniqueId",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 69
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Port"
          }
        }
      ],
      "symbolId": "lib/security-group:SecurityGroup"
    },
    "@aws-cdk/aws-ec2.SecurityGroupImportOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const securityGroup = ec2.SecurityGroup.fromSecurityGroupId(this, 'SG', 'sg-12345', {\n   mutable: false\n});",
        "stability": "stable",
        "summary": "Additional options for imported security groups."
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupImportOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 264
      },
      "name": "SecurityGroupImportOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Only if this is set to false will egress rules be added to this security\ngroup. Be aware, this would undo any potential \"all outbound traffic\"\ndefault.",
            "stability": "stable",
            "summary": "Mark the SecurityGroup as having been created allowing all outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 275
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Beware that making a SecurityGroup immutable might lead to issue\ndue to missing ingress/egress rules for new resources.",
            "stability": "stable",
            "summary": "If a SecurityGroup is mutable CDK can add rules to existing groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 286
          },
          "name": "mutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/security-group:SecurityGroupImportOptions"
    },
    "@aws-cdk/aws-ec2.SecurityGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 208
      },
      "name": "SecurityGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC in which to create the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 231
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this is set to true, there will only be a single egress rule which allows all\noutbound traffic. If this is set to false, no outbound traffic will be allowed by\ndefault and all egress traffic must be explicitly authorized.",
            "stability": "stable",
            "summary": "Whether to allow all outbound traffic by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 242
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default name will be the construct's CDK path.",
            "stability": "stable",
            "summary": "A description of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 226
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If this is set to true, ingress and egress rules will not be declared under the\nSecurityGroup in cloudformation, but will be separate elements.\n\nInlining rules is an optimization for producing smaller stack templates. Sometimes\nthis is not desirable, for example when security group access is managed via tags.\n\nThe default value can be overriden globally by setting the context variable\n'@aws-cdk/aws-ec2.securityGroupDisableInlineRules'.",
            "stability": "stable",
            "summary": "Whether to disable inline ingress and egress rule optimization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 258
          },
          "name": "disableInlineRules",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a GroupName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "For valid values, see the GroupName\nparameter of the CreateSecurityGroup action in the Amazon EC2 API\nReference.\n\nIt is not recommended to use an explicit group name.",
            "stability": "stable",
            "summary": "The name of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 219
          },
          "name": "securityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/security-group:SecurityGroupProps"
    },
    "@aws-cdk/aws-ec2.SelectedSubnets": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const vpc = new ec2.Vpc(this, 'TheVPC', {\n   cidr: \"10.0.0.0/16\"\n})\n\n// Iterate the private subnets\nconst selection = vpc.selectSubnets({\n   subnetType: ec2.SubnetType.PRIVATE_WITH_NAT\n});\n\nfor (const subnet of selection.subnets) {\n   // ...\n}",
        "stability": "stable",
        "summary": "Result of selecting a subset of subnets from a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.SelectedSubnets",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 329
      },
      "name": "SelectedSubnets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The respective AZs of each subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 338
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether any of the given subnets are from the VPC's public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 353
          },
          "name": "hasPublic",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependency representing internet connectivity for these subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 343
          },
          "name": "internetConnectivityEstablished",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 333
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Selected subnet objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 348
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc:SelectedSubnets"
    },
    "@aws-cdk/aws-ec2.SpotInstanceInterruption": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Provides the options for the types of interruption for spot instances."
      },
      "fqn": "@aws-cdk/aws-ec2.SpotInstanceInterruption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 105
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will hibernate when interrupted."
          },
          "name": "HIBERNATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will stop when interrupted."
          },
          "name": "STOP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will be terminated when interrupted."
          },
          "name": "TERMINATE"
        }
      ],
      "name": "SpotInstanceInterruption",
      "symbolId": "lib/launch-template:SpotInstanceInterruption"
    },
    "@aws-cdk/aws-ec2.SpotRequestType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html",
        "stability": "stable",
        "summary": "The Spot Instance request type."
      },
      "fqn": "@aws-cdk/aws-ec2.SpotRequestType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 127
      },
      "members": [
        {
          "docs": {
            "remarks": "If the Spot price exceeds your maximum price\nor capacity is not available, your Spot Instance is terminated and the Spot Instance request\nis closed.",
            "stability": "stable",
            "summary": "A one-time Spot Instance request remains active until Amazon EC2 launches the Spot Instance, the request expires, or you cancel the request."
          },
          "name": "ONE_TIME"
        },
        {
          "docs": {
            "remarks": "If the Spot price exceeds your maximum price or capacity is not available,\nyour Spot Instance is interrupted. After your instance is interrupted, when your maximum price exceeds\nthe Spot price or capacity becomes available again, the Spot Instance is started if stopped or resumed\nif hibernated.",
            "stability": "stable",
            "summary": "A persistent Spot Instance request remains active until it expires or you cancel it, even if the request is fulfilled."
          },
          "name": "PERSISTENT"
        }
      ],
      "name": "SpotRequestType",
      "symbolId": "lib/launch-template:SpotRequestType"
    },
    "@aws-cdk/aws-ec2.SsmParameterImageOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for GenericSsmParameterImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst ssmParameterImageOptions: ec2.SsmParameterImageOptions = {\n  cachedInContext: false,\n  os: ec2.OperatingSystemType.LINUX,\n  userData: userData,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.SsmParameterImageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 183
      },
      "name": "SsmParameterImageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, the newest image is used on each deployment. This will cause\ninstances to be replaced whenever a new version is released, and may cause\ndowntime if there aren't enough running instances in the AutoScalingGroup\nto reschedule the tasks on.\n\nIf set to true, the AMI ID will be cached in `cdk.context.json` and the\nsame value will be used on future runs. Your instances will not be replaced\nbut your AMI version will grow old over time. To refresh the AMI lookup,\nyou will have to evict the value from the cache using the `cdk context`\ncommand. See https://docs.aws.amazon.com/cdk/latest/guide/context.html for\nmore information.\n\nCan not be set to `true` in environment-agnostic stacks.",
            "stability": "stable",
            "summary": "Whether the AMI ID is cached to be stable between deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 217
          },
          "name": "cachedInContext",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OperatingSystemType.LINUX",
            "stability": "stable",
            "summary": "Operating system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 189
          },
          "name": "os",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- UserData appropriate for the OS",
            "stability": "stable",
            "summary": "Custom UserData."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 196
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:SsmParameterImageOptions"
    },
    "@aws-cdk/aws-ec2.Subnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::Subnet"
        },
        "example": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n  taskSubnets: {\n    subnets: [ec2.Subnet.fromSubnetId(this, 'subnet', 'VpcISOLATEDSubnet1Subnet80F07FA0')],\n  },\n});",
        "stability": "stable",
        "summary": "Represents a new VPC subnet resource."
      },
      "fqn": "@aws-cdk/aws-ec2.Subnet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1611
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1536
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a default route that points to a passed IGW, with a dependency on the IGW's attachment to the VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1659
          },
          "name": "addDefaultInternetRoute",
          "parameters": [
            {
              "docs": {
                "summary": "the logical ID (ref) of the gateway attached to your VPC."
              },
              "name": "gatewayId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the gateway attachment construct to be added as a dependency."
              },
              "name": "gatewayAttachment",
              "type": {
                "fqn": "@aws-cdk/core.IDependable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an entry to this subnets route table that points to the passed NATGatewayId."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1690
          },
          "name": "addDefaultNatRoute",
          "parameters": [
            {
              "docs": {
                "summary": "The ID of the NAT gateway."
              },
              "name": "natGatewayId",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an entry to this subnets route table."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1701
          },
          "name": "addRoute",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AddRouteOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate a Network ACL with this subnet."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1718
          },
          "name": "associateNetworkAcl",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "networkAcl",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1542
          },
          "name": "fromSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISubnet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import existing subnet from id."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1550
          },
          "name": "fromSubnetId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnetId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISubnet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1538
          },
          "name": "isVpcSubnet",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "Subnet",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1557
          },
          "name": "availabilityZone",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parts of this VPC subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1598
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IDependable"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1605
          },
          "name": "internetConnectivityEstablished",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The IPv4 CIDR block for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1562
          },
          "name": "ipv4CidrBlock",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Upon creation, this is the default ACL which allows all traffic, except\nexplicit DENY entries that you add.\n\nYou can replace it with a custom ACL which denies all traffic except\nthe explicit ALLOW entries that you add by creating a `NetworkAcl`\nobject and calling `associateNetworkAcl()`.",
            "stability": "stable",
            "summary": "Network ACL associated with this Subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1682
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The routeTableId attached to this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1603
          },
          "name": "routeTable",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IRouteTable"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1577
          },
          "name": "subnetAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1567
          },
          "name": "subnetId",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1582
          },
          "name": "subnetIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1593
          },
          "name": "subnetNetworkAclAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the Outpost for this subnet (if one exists)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1588
          },
          "name": "subnetOutpostArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1572
          },
          "name": "subnetVpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:Subnet"
    },
    "@aws-cdk/aws-ec2.SubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "// Supply all properties\nconst subnet1 = ec2.Subnet.fromSubnetAttributes(this, 'SubnetFromAttributes', {\n  subnetId: 's-1234',\n  availabilityZone: 'pub-az-4465',\n  routeTableId: 'rt-145'\n});\n\n// Supply only subnet id\nconst subnet2 = ec2.Subnet.fromSubnetId(this, 'SubnetFromId', 's-1234');",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 737
      },
      "name": "SubnetAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No AZ information, cannot use AZ selection features",
            "stability": "stable",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 744
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No CIDR information, cannot use CIDR filter features",
            "stability": "stable",
            "summary": "The IPv4 CIDR block associated with the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 751
          },
          "name": "ipv4CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No route table information, cannot create VPC endpoints",
            "stability": "stable",
            "summary": "The ID of the route table for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 758
          },
          "name": "routeTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 763
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetAttributes"
    },
    "@aws-cdk/aws-ec2.SubnetConfiguration": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specify configuration parameters for a single subnet group in a VPC.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst subnetConfiguration: ec2.SubnetConfiguration = {\n  name: 'name',\n  subnetType: ec2.SubnetType.ISOLATED,\n\n  // the properties below are optional\n  cidrMask: 123,\n  reserved: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 976
      },
      "name": "SubnetConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Available IP space is evenly divided across subnets.",
            "remarks": "The number of available IP addresses in each subnet of this group\nwill be equal to `2^(32 - cidrMask) - 2`.\n\nValid values are `16--28`.",
            "stability": "stable",
            "summary": "The number of leading 1 bits in the routing mask."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 987
          },
          "name": "cidrMask",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This name can be used when selecting VPC subnets to distinguish\nbetween different subnet groups of the same type.",
            "stability": "stable",
            "summary": "Logical name for the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1003
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When true, the IP space for the subnet is reserved but no actual\nresources are provisioned. This space is only dependent on the\nnumber of availability zones and on `cidrMask` - all other subnet\nproperties are ignored.",
            "stability": "stable",
            "summary": "Controls if subnet IP space needs to be reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1015
          },
          "name": "reserved",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The Subnet type will control the ability to route and connect to the\nInternet.",
            "stability": "stable",
            "summary": "The type of Subnet to configure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 995
          },
          "name": "subnetType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetType"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetConfiguration"
    },
    "@aws-cdk/aws-ec2.SubnetFilter": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Contains logic which chooses a set of subnets from a larger list, in conjunction with SubnetSelection, to determine where to place AWS resources such as VPC endpoints, EC2 instances, etc.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst subnetFilter = ec2.SubnetFilter.availabilityZones(['availabilityZones']);"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetFilter",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/subnet.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets which are in one of the given availability zones."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 21
          },
          "name": "availabilityZones",
          "parameters": [
            {
              "name": "availabilityZones",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets which have the provided CIDR netmask."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 42
          },
          "name": "byCidrMask",
          "parameters": [
            {
              "name": "mask",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets by id."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 14
          },
          "name": "byIds",
          "parameters": [
            {
              "name": "subnetIds",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets which contain any of the specified IP addresses."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 35
          },
          "name": "containsIpAddresses",
          "parameters": [
            {
              "name": "ipv4addrs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets such that there is at most one per availability zone."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 28
          },
          "name": "onePerAz",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Executes the subnet filtering logic, returning a filtered set of subnets."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 49
          },
          "name": "selectSubnets",
          "parameters": [
            {
              "name": "_subnets",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.ISubnet"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.ISubnet"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "SubnetFilter",
      "symbolId": "lib/subnet:SubnetFilter"
    },
    "@aws-cdk/aws-ec2.SubnetNetworkAclAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const networkAcl: ec2.NetworkAcl;\ndeclare const subnet: ec2.Subnet;\n\nconst subnetNetworkAclAssociation = new ec2.SubnetNetworkAclAssociation(this, 'MySubnetNetworkAclAssociation', {\n  networkAcl: networkAcl,\n  subnet: subnet,\n\n  // the properties below are optional\n  subnetNetworkAclAssociationName: 'subnetNetworkAclAssociationName',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociation",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/network-acl.ts",
          "line": 369
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 339
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 340
          },
          "name": "fromSubnetNetworkAclAssociationAssociationId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnetNetworkAclAssociationAssociationId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation"
            }
          },
          "static": true
        }
      ],
      "name": "SubnetNetworkAclAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current Network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 359
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID of the Subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 365
          },
          "name": "subnet",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISubnet"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current SubnetNetworkAclAssociation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 353
          },
          "name": "subnetNetworkAclAssociationAssociationId",
          "overrides": "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:SubnetNetworkAclAssociation"
    },
    "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create a SubnetNetworkAclAssociation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const networkAcl: ec2.NetworkAcl;\ndeclare const subnet: ec2.Subnet;\n\nconst subnetNetworkAclAssociationProps: ec2.SubnetNetworkAclAssociationProps = {\n  networkAcl: networkAcl,\n  subnet: subnet,\n\n  // the properties below are optional\n  subnetNetworkAclAssociationName: 'subnetNetworkAclAssociationName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 306
      },
      "name": "SubnetNetworkAclAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Network ACL this association is defined for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 322
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID of the Subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 328
          },
          "name": "subnet",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISubnet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a SubnetNetworkAclAssociationName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit name.",
            "stability": "stable",
            "summary": "The name of the SubnetNetworkAclAssociation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 315
          },
          "name": "subnetNetworkAclAssociationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:SubnetNetworkAclAssociationProps"
    },
    "@aws-cdk/aws-ec2.SubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specify configuration parameters for a VPC subnet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst subnetProps: ec2.SubnetProps = {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1506
      },
      "name": "SubnetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The availability zone for the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1511
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CIDR notation for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1521
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true in Subnet.Public, false in Subnet.Private or Subnet.Isolated.",
            "stability": "stable",
            "summary": "Controls if a public IP is associated to an instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1528
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC which this subnet is part of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1516
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetProps"
    },
    "@aws-cdk/aws-ec2.SubnetSelection": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n  taskSubnets: {\n    subnets: [ec2.Subnet.fromSubnetId(this, 'subnet', 'VpcISOLATEDSubnet1Subnet80F07FA0')],\n  },\n});",
        "remarks": "Constructs that allow customization of VPC placement use parameters of this\ntype to provide placement settings.\n\nBy default, the instances are placed in the private subnets.",
        "stability": "stable",
        "summary": "Customize subnets that are selected for placement of ENIs."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetSelection",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 252
      },
      "name": "SubnetSelection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "no filtering on AZs is done",
            "stability": "stable",
            "summary": "Select subnets only in the given AZs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 267
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "If true, return at most one subnet per AZ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 303
          },
          "name": "onePerAz",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "List of provided subnet filters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 310
          },
          "name": "subnetFilters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Selection by type instead of by name",
            "remarks": "Select the subnet group with the given name. This only needs\nto be used if you have multiple subnet groups of the same type\nand you need to distinguish between them. Otherwise, prefer\n`subnetType`.\n\nThis field does not select individual subnets, it selects all subnets that\nshare the given subnet group name. This is the name supplied in\n`subnetConfiguration`.\n\nAt most one of `subnetType` and `subnetGroupName` can be supplied.",
            "stability": "stable",
            "summary": "Select the subnet group with the given name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 285
          },
          "name": "subnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `subnetGroupName` instead",
            "remarks": "Select the subnet group with the given name. This only needs\nto be used if you have multiple subnet groups of the same type\nand you need to distinguish between them.",
            "stability": "deprecated",
            "summary": "Alias for `subnetGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 296
          },
          "name": "subnetName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use all subnets in a selected group (all private subnets by default)",
            "remarks": "Use this if you don't want to automatically use all subnets in\na group, but have a need to control selection down to\nindividual subnets.\n\nCannot be specified together with `subnetType` or `subnetGroupName`.",
            "stability": "stable",
            "summary": "Explicitly select individual subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 323
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SubnetType.PRIVATE_WITH_NAT (or ISOLATED or PUBLIC if there are no PRIVATE_WITH_NAT subnets)",
            "remarks": "At most one of `subnetType` and `subnetGroupName` can be supplied.",
            "stability": "stable",
            "summary": "Select all subnets of the given type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 260
          },
          "name": "subnetType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetType"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetSelection"
    },
    "@aws-cdk/aws-ec2.SubnetType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "    const asg = cluster.addCapacity('Nodes', {\n      instanceType: new ec2.InstanceType('t2.medium'),\n      vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n      keyName: 'my-key-name',\n    });\n\n    // Replace with desired IP\n    asg.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/32'), ec2.Port.tcp(22));",
        "stability": "stable",
        "summary": "The type of Subnet."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 166
      },
      "members": [
        {
          "docs": {
            "deprecated": "use `SubnetType.PRIVATE_ISOLATED`",
            "remarks": "Isolated subnets can only connect to or be connected to from other\ninstances in the same VPC. A default VPC configuration will not include\nisolated subnets.\n\nThis can be good for subnets with RDS or Elasticache instances,\nor which route Internet traffic through a peer VPC.",
            "stability": "deprecated",
            "summary": "Isolated Subnets do not route traffic to the Internet (in this VPC), and as such, do not require NAT gateways."
          },
          "name": "ISOLATED"
        },
        {
          "docs": {
            "deprecated": "use `PRIVATE_WITH_NAT`",
            "remarks": "Instances in a private subnet can connect to the Internet, but will not\nallow connections to be initiated from the Internet. NAT Gateway(s) are\nrequired with this subnet type to route the Internet traffic through.\nIf a NAT Gateway is not required or desired, use `SubnetType.PRIVATE_ISOLATED` instead.\n\nBy default, a NAT gateway is created in every public subnet for maximum availability.\nBe aware that you will be charged for NAT gateways.\n\nNormally a Private subnet will use a NAT gateway in the same AZ, but\nif `natGateways` is used to reduce the number of NAT gateways, a NAT\ngateway from another AZ will be used instead.",
            "stability": "deprecated",
            "summary": "Subnet that routes to the internet, but not vice versa."
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "remarks": "Instances in a Public subnet can connect to the Internet and can be\nconnected to from the Internet as long as they are launched with public\nIPs (controlled on the AutoScalingGroup or other constructs that launch\ninstances).\n\nPublic subnets route outbound traffic via an Internet Gateway.",
            "stability": "stable",
            "summary": "Subnet connected to the Internet."
          },
          "name": "PUBLIC"
        }
      ],
      "name": "SubnetType",
      "symbolId": "lib/vpc:SubnetType"
    },
    "@aws-cdk/aws-ec2.TrafficDirection": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Direction of traffic the AclEntry applies to."
      },
      "fqn": "@aws-cdk/aws-ec2.TrafficDirection",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 188
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Traffic leaving the subnet."
          },
          "name": "EGRESS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Traffic entering the subnet."
          },
          "name": "INGRESS"
        }
      ],
      "name": "TrafficDirection",
      "symbolId": "lib/network-acl:TrafficDirection"
    },
    "@aws-cdk/aws-ec2.TransportProtocol": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Transport protocol for client VPN."
      },
      "fqn": "@aws-cdk/aws-ec2.TransportProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 37
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Transmission Control Protocol (TCP)."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "User Datagram Protocol (UDP)."
          },
          "name": "UDP"
        }
      ],
      "name": "TransportProtocol",
      "symbolId": "lib/client-vpn-endpoint-types:TransportProtocol"
    },
    "@aws-cdk/aws-ec2.UserData": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "const multipartUserData = new ec2.MultipartUserData();\nconst commandsUserData = ec2.UserData.forLinux();\nmultipartUserData.addUserDataPart(commandsUserData, ec2.MultipartBody.SHELL_SCRIPT, true);\n\n// Adding commands to the multipartUserData adds them to commandsUserData, and vice-versa.\nmultipartUserData.addCommands('touch /root/multi.txt');\ncommandsUserData.addCommands('touch /root/userdata.txt');",
        "stability": "stable",
        "summary": "Instance User Data."
      },
      "fqn": "@aws-cdk/aws-ec2.UserData",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 70
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 105
          },
          "name": "addCommands",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds commands to execute a file."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 127
          },
          "name": "addExecuteFileCommand",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ExecuteFileOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data that will run when the script exits."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 110
          },
          "name": "addOnExitCommands",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "returns": ": The local path that the file will be downloaded to",
            "stability": "stable",
            "summary": "Adds commands to download a file from S3."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 122
          },
          "name": "addS3DownloadCommand",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.S3DownloadOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a command which will send a cfn-signal when the user data script ends."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 132
          },
          "name": "addSignalOnExitCommand",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.Resource"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a userdata object with custom content."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 88
          },
          "name": "custom",
          "parameters": [
            {
              "name": "content",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a userdata object for Linux hosts."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 74
          },
          "name": "forLinux",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LinuxUserDataOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 94
          },
          "name": "forOperatingSystem",
          "parameters": [
            {
              "name": "os",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a userdata object for Windows hosts."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 81
          },
          "name": "forWindows",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the UserData for use in a construct."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 115
          },
          "name": "render",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "UserData",
      "symbolId": "lib/user-data:UserData"
    },
    "@aws-cdk/aws-ec2.Volume": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "example": "declare const instance: ec2.Instance;\ndeclare const role: iam.Role;\n\nconst volume = new ec2.Volume(this, 'Volume', {\n  availabilityZone: 'us-west-2a',\n  size: Size.gibibytes(500),\n  encrypted: true,\n});\n\nvolume.grantAttachVolume(role, [instance]);",
        "stability": "stable",
        "summary": "Creates a new EBS Volume in AWS EC2."
      },
      "fqn": "@aws-cdk/aws-ec2.Volume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/volume.ts",
          "line": 596
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VolumeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVolume"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 571
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing EBS Volume into the Stack."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 579
          },
          "name": "fromVolumeAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the scope of the import."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the ID of the imported Volume in the construct tree."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the attributes of the imported Volume."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VolumeAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "CAUTION: Granting an instance permission to attach to itself using this method will lead to\nan unresolvable circular reference between the instance role and the instance.\nUse {@link IVolume.grantAttachVolumeToSelf} to grant an instance permission to attach this\nvolume to itself.",
            "stability": "stable",
            "summary": "Grants permission to attach this Volume to an instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 472
          },
          "name": "grantAttachVolume",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If you are looking to\ngrant an Instance, AutoScalingGroup, EC2-Fleet, SpotFleet, ECS host, etc the ability to attach\nthis volume to **itself** then this is the method you want to use.\n\nThis is implemented by adding a Tag with key `VolumeGrantAttach-<suffix>` to the given\nconstructs and this Volume, and then conditioning the Grant such that the grantee is only\ngiven the ability to AttachVolume if both the Volume and the destination Instance have that\ntag applied to them.",
            "stability": "stable",
            "summary": "Grants permission to attach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 499
          },
          "name": "grantAttachVolumeByResourceTag",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use {@link IVolume.grantDetachVolumeFromSelf} to grant an instance permission to detach this\nvolume from itself.",
            "stability": "stable",
            "summary": "Grants permission to detach this Volume from an instance CAUTION: Granting an instance permission to detach from itself using this method will lead to an unresolvable circular reference between the instance role and the instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 518
          },
          "name": "grantDetachVolume",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "This is implemented via the same mechanism as {@link IVolume.grantAttachVolumeByResourceTag},\nand is subject to the same conditions.",
            "stability": "stable",
            "summary": "Grants permission to detach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 528
          },
          "name": "grantDetachVolumeByResourceTag",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 642
          },
          "name": "validateProps",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VolumeProps"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "Volume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The availability zone that the EBS Volume is contained within (ex: us-west-2a)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 593
          },
          "name": "availabilityZone",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The EBS Volume's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 592
          },
          "name": "volumeId",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 594
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/volume:Volume"
    },
    "@aws-cdk/aws-ec2.VolumeAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes required to import an existing EBS Volume into the Stack.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\ndeclare const key: kms.Key;\n\nconst volumeAttributes: ec2.VolumeAttributes = {\n  availabilityZone: 'availabilityZone',\n  volumeId: 'volumeId',\n\n  // the properties below are optional\n  encryptionKey: key,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.VolumeAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 445
      },
      "name": "VolumeAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The availability zone that the EBS Volume is contained within (ex: us-west-2a)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 454
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None -- The EBS Volume is not using a customer-managed KMS key for encryption.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 461
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The EBS Volume's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 449
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:VolumeAttributes"
    },
    "@aws-cdk/aws-ec2.VolumeProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const instance: ec2.Instance;\ndeclare const role: iam.Role;\n\nconst volume = new ec2.Volume(this, 'Volume', {\n  availabilityZone: 'us-west-2a',\n  size: Size.gibibytes(500),\n  encrypted: true,\n});\n\nvolume.grantAttachVolume(role, [instance]);",
        "stability": "stable",
        "summary": "Properties of an EBS Volume."
      },
      "fqn": "@aws-cdk/aws-ec2.VolumeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 327
      },
      "name": "VolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Availability Zone in which to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 338
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, Amazon EBS disables I/O to the volume from attached EC2\ninstances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and\nyou prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.",
            "stability": "stable",
            "summary": "Indicates whether the volume is auto-enabled for I/O operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 413
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See {@link https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html#considerations|Considerations and limitations}\nfor the constraints of multi-attach.",
            "stability": "stable",
            "summary": "Indicates whether Amazon EBS Multi-Attach is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 363
          },
          "name": "enableMultiAttach",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "The effect of setting the encryption state to true depends on the volume origin\n(new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information,\nsee {@link https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default|Encryption by Default}\nin the Amazon Elastic Compute Cloud User Guide.\n\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see\n{@link https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances|Supported Instance Types.}",
            "stability": "stable",
            "summary": "Specifies whether the volume should be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 376
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default KMS key for the account, region, and EC2 service is used.",
            "remarks": "The encrypted property must\nbe true if this is provided.\n\nNote: If using an {@link aws-kms.IKey} created from a {@link aws-kms.Key.fromKeyArn()} here,\nthen the KMS key **must** have the following in its Key policy; otherwise, the Volume\nwill fail to create.\n\n     {\n       \"Effect\": \"Allow\",\n       \"Principal\": { \"AWS\": \"<arn for your account-user> ex: arn:aws:iam::00000000000:root\" },\n       \"Resource\": \"*\",\n       \"Action\": [\n         \"kms:DescribeKey\",\n         \"kms:GenerateDataKeyWithoutPlainText\",\n       ],\n       \"Condition\": {\n         \"StringEquals\": {\n           \"kms:ViaService\": \"ec2.<Region>.amazonaws.com\", (eg: ec2.us-east-1.amazonaws.com)\n           \"kms:CallerAccount\": \"0000000000\" (your account ID)\n         }\n       }\n     }",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 404
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None -- Required for io1 and io2 volumes. The default for gp3 volumes is 3,000 IOPS if omitted.",
            "remarks": "The maximum ratio is 50 IOPS/GiB for PROVISIONED_IOPS_SSD,\nand 500 IOPS/GiB for both PROVISIONED_IOPS_SSD_IO2 and GENERAL_PURPOSE_SSD_GP3.\nSee {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html}\nfor more information.\n\nThis parameter is valid only for PROVISIONED_IOPS_SSD, PROVISIONED_IOPS_SSD_IO2 and GENERAL_PURPOSE_SSD_GP3 volumes.",
            "stability": "stable",
            "summary": "The number of I/O operations per second (IOPS) to provision for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 432
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "stability": "stable",
            "summary": "Policy to apply when the volume is removed from the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 439
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.",
            "remarks": "You must specify either a snapshot ID or a volume size.\nSee {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html}\nfor details on the allowable size for each type of volume.",
            "stability": "stable",
            "summary": "The size of the volume, in GiBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 347
          },
          "name": "size",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The EBS volume is not created from a snapshot.",
            "remarks": "You must specify either a snapshot ID or a volume size.",
            "stability": "stable",
            "summary": "The snapshot from which to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 354
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The physical name will be allocated by CloudFormation at deployment time",
            "stability": "stable",
            "summary": "The value of the physicalName property of this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 333
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link EbsDeviceVolumeType.GENERAL_PURPOSE_SSD}",
            "remarks": "what type of storage to use to form the EBS Volume.",
            "stability": "stable",
            "summary": "The type of the volume;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 420
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.EbsDeviceVolumeType"
          }
        }
      ],
      "symbolId": "lib/volume:VolumeProps"
    },
    "@aws-cdk/aws-ec2.Vpc": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPC"
        },
        "example": "const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 1 });\nconst cluster = new ecs.Cluster(this, 'EcsCluster', { vpc });\nconst securityGroup = new ec2.SecurityGroup(this, 'SG', { vpc });\n\nconst scheduledFargateTask = new ecsPatterns.ScheduledFargateTask(this, 'ScheduledFargateTask', {\n  cluster,\n  scheduledFargateTaskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry('amazon/amazon-ecs-sample'),\n    memoryLimitMiB: 512,\n  },\n  schedule: appscaling.Schedule.expression('rate(1 minute)'),\n  securityGroups: [securityGroup],\n});",
        "remarks": "See the package-level documentation of this package for an overview\nof the various dimensions in which you can configure your VPC.\n\nFor example:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n   cidr: \"10.0.0.0/16\"\n})\n\n// Iterate the private subnets\nconst selection = vpc.selectSubnets({\n   subnetType: ec2.SubnetType.PRIVATE_WITH_NAT\n});\n\nfor (const subnet of selection.subnets) {\n   // ...\n}\n```",
        "stability": "stable",
        "summary": "Define an AWS Virtual Private Cloud."
      },
      "fqn": "@aws-cdk/aws-ec2.Vpc",
      "initializer": {
        "docs": {
          "remarks": "It will automatically divide the provided VPC CIDR range, and create public and private subnets per Availability Zone.\nNetwork routing for the public subnets will be configured to allow outbound access directly via an Internet Gateway.\nNetwork routing for the private subnets will be configured to allow outbound access via a set of resilient NAT Gateways (one per AZ).",
          "stability": "stable",
          "summary": "Vpc creates a VPC that spans a whole region."
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1258
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpc"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1043
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new client VPN endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 487
          },
          "name": "addClientVpnEndpoint",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpoint"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use `addGatewayEndpoint()` instead",
            "stability": "deprecated",
            "summary": "Adds a new DynamoDB gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1402
          },
          "name": "addDynamoDbEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnets",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new flow log to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 517
          },
          "name": "addFlowLog",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.FlowLogOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLog"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 507
          },
          "name": "addGatewayEndpoint",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new interface endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 497
          },
          "name": "addInterfaceEndpoint",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use `addGatewayEndpoint()` instead",
            "stability": "deprecated",
            "summary": "Adds a new S3 gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1389
          },
          "name": "addS3Endpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnets",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new VPN connection to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 477
          },
          "name": "addVpnConnection",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnection"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a VPN Gateway to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 439
          },
          "name": "enableVpnGateway",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EnableVpnGatewayOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This function only needs to be used to use VPCs not defined in your CDK\napplication. If you are looking to share a VPC between stacks, you can\npass the `Vpc` object between stacks and use it as normal.\n\nCalling this method will lead to a lookup when the CDK CLI is executed.\nYou can therefore not use any values that will only be available at\nCloudFormation execution time (i.e., Tokens).\n\nThe VPC information will be cached in `cdk.context.json` and the same VPC\nwill be used on future runs. To refresh the lookup, you will have to\nevict the value from the cache using the `cdk context` command. See\nhttps://docs.aws.amazon.com/cdk/latest/guide/context.html for more information.",
            "stability": "stable",
            "summary": "Import an existing VPC from by querying the AWS environment this stack is deployed to."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1115
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcLookupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVpc"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "NOTE: using `fromVpcAttributes()` with deploy-time parameters (like a `Fn.importValue()` or\n`CfnParameter` to represent a list of subnet IDs) sometimes accidentally works. It happens\nto work for constructs that need a list of subnets (like `AutoScalingGroup` and `eks.Cluster`)\nbut it does not work for constructs that need individual subnets (like\n`Instance`). See https://github.com/aws/aws-cdk/issues/4118 for more\ninformation.\n\nPrefer to use `Vpc.fromLookup()` instead.",
            "stability": "stable",
            "summary": "Import a VPC by supplying all attributes directly."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1095
          },
          "name": "fromVpcAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVpc"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the subnets appropriate for the placement strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 534
          },
          "name": "selectSubnetObjects",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.ISubnet"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns IDs of selected subnets."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 423
          },
          "name": "selectSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SelectedSubnets"
            }
          }
        }
      ],
      "name": "Vpc",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "AZs for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1215
          },
          "name": "availabilityZones",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "This can be overridden using VpcProps when creating a VPCNetwork resource.\ne.g. new VpcResource(this, { cidr: '192.168.0.0./16' })",
            "stability": "stable",
            "summary": "The default CIDR range used when creating VPCs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1049
          },
          "name": "DEFAULT_CIDR_RANGE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "1 Public and 1 Private subnet per AZ evenly split",
            "stability": "stable",
            "summary": "The default subnet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1056
          },
          "name": "DEFAULT_SUBNETS",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "1 Public and 1 Isolated Subnet per AZ evenly split",
            "stability": "stable",
            "summary": "The default subnet configuration if natGateways specified to be 0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1072
          },
          "name": "DEFAULT_SUBNETS_NO_NAT",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if instances launched in this VPC will have public DNS hostnames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1228
          },
          "name": "dnsHostnamesEnabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if DNS support is enabled for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1233
          },
          "name": "dnsSupportEnabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If this is set to true, don't error out on trying to select subnets."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 411
          },
          "name": "incompleteSubnetDefinition",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dependencies for internet connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1223
          },
          "name": "internetConnectivityEstablished",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "docs": {
            "remarks": "Note that in case the VPC is configured only\nwith ISOLATED subnets, this attribute will be `undefined`.",
            "stability": "stable",
            "summary": "Internet Gateway for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1221
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of isolated subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1210
          },
          "name": "isolatedSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "deprecated": "- This value is no longer used.",
            "stability": "deprecated",
            "summary": "Dependencies for NAT connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 406
          },
          "name": "natDependencies",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IConstruct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of private subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1205
          },
          "name": "privateSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of public subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1200
          },
          "name": "publicSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Arn of this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1170
          },
          "name": "vpcArn",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "CIDR range for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1175
          },
          "name": "vpcCidrBlock",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1185
          },
          "name": "vpcCidrBlockAssociations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1180
          },
          "name": "vpcDefaultNetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1190
          },
          "name": "vpcDefaultSecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Identifier for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1165
          },
          "name": "vpcId",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1195
          },
          "name": "vpcIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the id of the VPN Gateway (if enabled)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 527
          },
          "name": "vpnGatewayId",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:Vpc"
    },
    "@aws-cdk/aws-ec2.VpcAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const vpc = ec2.Vpc.fromVpcAttributes(this, 'VPC', {\n  vpcId: 'vpc-1234',\n  availabilityZones: ['us-east-1a', 'us-east-1b'],\n\n  // Either pass literals for all IDs\n  publicSubnetIds: ['s-12345', 's-67890'],\n\n  // OR: import a list of known length\n  privateSubnetIds: Fn.importListValue('PrivateSubnetIds', 2),\n\n  // OR: split an imported string to a list of known length\n  isolatedSubnetIds: Fn.split(',', ssm.StringParameter.valueForStringParameter(this, `MyParameter`), 2),\n});",
        "stability": "stable",
        "summary": "Properties that reference an external Vpc."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 650
      },
      "name": "VpcAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of availability zones for the subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 666
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "stable",
            "summary": "List of isolated subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 715
          },
          "name": "isolatedSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every isolated subnet group.",
            "stability": "stable",
            "summary": "List of names for the isolated subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 722
          },
          "name": "isolatedSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every isolated subnet group.",
            "stability": "stable",
            "summary": "List of IDs of routing tables for the isolated subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 729
          },
          "name": "isolatedSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "stable",
            "summary": "List of private subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 694
          },
          "name": "privateSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every private subnet group.",
            "stability": "stable",
            "summary": "List of names for the private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 701
          },
          "name": "privateSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every private subnet group.",
            "stability": "stable",
            "summary": "List of IDs of routing tables for the private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 708
          },
          "name": "privateSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "stable",
            "summary": "List of public subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 673
          },
          "name": "publicSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every public subnet group.",
            "stability": "stable",
            "summary": "List of names for the public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 680
          },
          "name": "publicSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every public subnet group.",
            "stability": "stable",
            "summary": "List of IDs of routing tables for the public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 687
          },
          "name": "publicSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Retrieving the CIDR from the VPC will fail",
            "stability": "stable",
            "summary": "VPC's CIDR range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 661
          },
          "name": "vpcCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC's identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 654
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPN gateway's identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 734
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:VpcAttributes"
    },
    "@aws-cdk/aws-ec2.VpcEndpoint": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 137
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 24
      },
      "methods": [
        {
          "docs": {
            "remarks": "Not all interface VPC endpoints support policy. For more information\nsee https://docs.aws.amazon.com/vpc/latest/userguide/vpce-interface.html",
            "stability": "stable",
            "summary": "Adds a statement to the policy document of the VPC endpoint. The statement must have a Principal."
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 38
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "the IAM statement to add."
              },
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        }
      ],
      "name": "VpcEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 27
          },
          "name": "policyDocument",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 25
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpoint",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:VpcEndpoint"
    },
    "@aws-cdk/aws-ec2.VpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPCEndpointService"
        },
        "example": "declare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});",
        "stability": "stable",
        "summary": "A VPC endpoint service."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpointService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint-service.ts",
          "line": 87
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcEndpointServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 45
      },
      "name": "VpcEndpointService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether to require manual acceptance of new connections to the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 57
          },
          "name": "acceptanceRequired",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "One or more Principal ARNs to allow inbound connections to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 69
          },
          "name": "allowedPrincipals",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of the VPC Endpoint Service, like vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 75
          },
          "name": "vpcEndpointServiceId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "One or more network load balancers to host the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 51
          },
          "name": "vpcEndpointServiceLoadBalancers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The service name of the VPC Endpoint Service that clients use to connect to, like com.amazonaws.vpce.<region>.vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 83
          },
          "name": "vpcEndpointServiceName",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "use `allowedPrincipals`",
            "stability": "deprecated",
            "summary": "One or more Principal ARNs to allow inbound connections to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 63
          },
          "name": "whitelistedPrincipals",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:VpcEndpointService"
    },
    "@aws-cdk/aws-ec2.VpcEndpointServiceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "declare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});",
        "stability": "stable",
        "summary": "Construction properties for a VpcEndpointService."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpointServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 129
      },
      "name": "VpcEndpointServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "One or more load balancers to host the VPC Endpoint Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 142
          },
          "name": "vpcEndpointServiceLoadBalancers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether requests from service consumers to connect to the service through an endpoint must be accepted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 150
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no principals",
            "remarks": "These principals can connect to your service using VPC endpoints. Takes a\nlist of one or more ArnPrincipal.",
            "stability": "stable",
            "summary": "IAM users, IAM roles, or AWS accounts to allow inbound connections from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 168
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CDK generated name",
            "deprecated": "This property is not used",
            "stability": "deprecated",
            "summary": "Name of the Vpc Endpoint Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 136
          },
          "name": "vpcEndpointServiceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no principals",
            "deprecated": "use `allowedPrincipals`",
            "remarks": "These principals can connect to your service using VPC endpoints. Takes a\nlist of one or more ArnPrincipal.",
            "stability": "deprecated",
            "summary": "IAM users, IAM roles, or AWS accounts to allow inbound connections from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 159
          },
          "name": "whitelistedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:VpcEndpointServiceProps"
    },
    "@aws-cdk/aws-ec2.VpcEndpointType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The type of VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpointType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 60
      },
      "members": [
        {
          "docs": {
            "remarks": "An interface endpoint is an elastic network interface with a private IP\naddress that serves as an entry point for traffic destined to a supported\nservice.",
            "stability": "stable",
            "summary": "Interface."
          },
          "name": "INTERFACE"
        },
        {
          "docs": {
            "remarks": "A gateway endpoint is a gateway that is a target for a specified route in\nyour route table, used for traffic destined to a supported AWS service.",
            "stability": "stable",
            "summary": "Gateway."
          },
          "name": "GATEWAY"
        }
      ],
      "name": "VpcEndpointType",
      "symbolId": "lib/vpc-endpoint:VpcEndpointType"
    },
    "@aws-cdk/aws-ec2.VpcLookupOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'FargateCluster', { vpc });\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  memoryMiB: '512',\n  cpu: '256',\n  compatibility: ecs.Compatibility.FARGATE,\n});\n\nconst containerDefinition = taskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'RunFargate', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  assignPublicIp: true,\n  containerOverrides: [{\n    containerDefinition,\n    environment: [{ name: 'SOME_KEY', value: sfn.JsonPath.stringAt('$.SomeKey') }],\n  }],\n  launchTarget: new tasks.EcsFargateLaunchTarget(),\n});",
        "remarks": "The combination of properties must specify filter down to exactly one\nnon-default VPC, otherwise an error is raised.",
        "stability": "stable",
        "summary": "Properties for looking up an existing VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcLookupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-lookup.ts",
        "line": 7
      },
      "name": "VpcLookupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Don't care whether we return the default VPC",
            "stability": "stable",
            "summary": "Whether to match the default VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 40
          },
          "name": "isDefault",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Current stack's environment region",
            "stability": "stable",
            "summary": "Optional to override inferred region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 57
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "aws-cdk:subnet-name",
            "remarks": "If not provided, we'll look at the aws-cdk:subnet-name tag.\nIf the subnet does not have the specified tag,\nwe'll use its type as the name.",
            "stability": "stable",
            "summary": "Optional tag for subnet group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 50
          },
          "name": "subnetGroupNameTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on tags",
            "remarks": "The VPC must have all of these tags",
            "stability": "stable",
            "summary": "Tags on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 33
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on vpcId",
            "remarks": "If given, will import exactly this VPC.",
            "stability": "stable",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 15
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on vpcName",
            "remarks": "If given, will import the VPC with this name.",
            "stability": "stable",
            "summary": "The name of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 24
          },
          "name": "vpcName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-lookup:VpcLookupOptions"
    },
    "@aws-cdk/aws-ec2.VpcProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "Configuration for Vpc."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 774
      },
      "name": "VpcProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Vpc.DEFAULT_CIDR_RANGE",
            "remarks": "Should be a minimum of /28 and maximum size of /16. The range will be\nsplit across all subnets per Availability Zone.",
            "stability": "stable",
            "summary": "The CIDR range to use for the VPC, e.g. '10.0.0.0/16'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 784
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultInstanceTenancy.Default (shared) tenancy",
            "remarks": "By setting this to dedicated tenancy, instances will be launched on\nhardware dedicated to a single AWS customer, unless specifically specified\nat instance launch time. Please note, not all instance types are usable\nwith Dedicated tenancy.",
            "stability": "stable",
            "summary": "The default tenancy of instances launched into the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 819
          },
          "name": "defaultInstanceTenancy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this attribute is true, instances in the VPC get public DNS hostnames,\nbut only if the enableDnsSupport attribute is also set to true.",
            "stability": "stable",
            "summary": "Indicates whether the instances launched in the VPC get public DNS hostnames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 794
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this attribute is false, the Amazon-provided DNS server in the VPC that\nresolves public DNS hostnames to IP addresses is not enabled. If this\nattribute is true, queries to the Amazon provided DNS server at the\n169.254.169.253 IP address, or the reserved IP address at the base of the\nVPC IPv4 network range plus two will succeed.",
            "stability": "stable",
            "summary": "Indicates whether the DNS resolution is supported for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 807
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No flow logs.",
            "stability": "stable",
            "summary": "Flow logs to add to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 955
          },
          "name": "flowLogs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.FlowLogOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "Gateway endpoints to add to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 948
          },
          "name": "gatewayEndpoints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "If the region has more AZs than you want to use (for example, because of\nEIP limits), pick a lower number here. The AZs will be sorted and picked\nfrom the start of the list.\n\nIf you pick a higher number than the number of AZs in the region, all AZs\nin the region will be selected. To use \"all AZs\" available to your\naccount, use a high number (such as 99).\n\nBe aware that environment-agnostic stacks will be created with access to\nonly 2 AZs, so to use more than 2 AZs, be sure to specify the account and\nregion on your stack.",
            "stability": "stable",
            "summary": "Define the maximum number of AZs to use in this region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 838
          },
          "name": "maxAzs",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NatProvider.gateway()",
            "remarks": "Select between NAT gateways or NAT instances. NAT gateways\nmay not be available in all AWS regions.",
            "stability": "stable",
            "summary": "What type of NAT provider to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 875
          },
          "name": "natGatewayProvider",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.NatProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- One NAT gateway/instance per Availability Zone",
            "remarks": "The type of NAT gateway or instance will be determined by the\n`natGatewayProvider` parameter.\n\nYou can set this number lower than the number of Availability Zones in your\nVPC in order to save on NAT cost. Be aware you may be charged for\ncross-AZ data traffic instead.",
            "stability": "stable",
            "summary": "The number of NAT Gateways/Instances to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 852
          },
          "name": "natGateways",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All public subnets.",
            "remarks": "You can pick a specific group of subnets by specifying the group name;\nthe picked subnets must be public subnets.\n\nOnly necessary if you have more than one public subnet group.",
            "stability": "stable",
            "summary": "Configures the subnets which will have NAT Gateways/Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 864
          },
          "name": "natGatewaySubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The VPC CIDR will be evenly divided between 1 public and 1\nprivate subnet per AZ.",
            "remarks": "Each entry in this list configures a Subnet Group; each group will contain a\nsubnet for each Availability Zone.\n\nFor example, if you want 1 public subnet, 1 private subnet, and 1 isolated\nsubnet in each AZ provide the following:\n\n```ts\nnew ec2.Vpc(this, 'VPC', {\n   subnetConfiguration: [\n      {\n        cidrMask: 24,\n        name: 'ingress',\n        subnetType: ec2.SubnetType.PUBLIC,\n      },\n      {\n        cidrMask: 24,\n        name: 'application',\n        subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n      },\n      {\n        cidrMask: 28,\n        name: 'rds',\n        subnetType: ec2.SubnetType.PRIVATE_ISOLATED,\n      }\n   ]\n});\n```",
            "stability": "stable",
            "summary": "Configure the subnets to build for each AZ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 911
          },
          "name": "subnetConfiguration",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No connections.",
            "stability": "stable",
            "summary": "VPN connections to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 932
          },
          "name": "vpnConnections",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true when vpnGatewayAsn or vpnConnections is specified",
            "stability": "stable",
            "summary": "Indicates whether a VPN gateway should be created and attached to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 918
          },
          "name": "vpnGateway",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon default ASN.",
            "stability": "stable",
            "summary": "The private Autonomous System Number (ASN) for the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 925
          },
          "name": "vpnGatewayAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- On the route tables associated with private subnets. If no\nprivate subnets exists, isolated subnets are used. If no isolated subnets\nexists, public subnets are used.",
            "stability": "stable",
            "summary": "Where to propagate VPN routes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 941
          },
          "name": "vpnRoutePropagation",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc:VpcProps"
    },
    "@aws-cdk/aws-ec2.VpnConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPNConnection"
        },
        "example": "// Across all tunnels in the account/region\nconst allDataOut = ec2.VpnConnection.metricAllTunnelDataOut();\n\n// For a specific vpn connection\nconst vpnConnection = vpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\nconst state = vpnConnection.metricTunnelState();",
        "stability": "stable",
        "summary": "Define a VPN Connection."
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnection",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpn.ts",
          "line": 217
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpnConnection"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 173
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this VPNConnection."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 35
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 177
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the tunnel data in of all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 199
          },
          "name": "metricAllTunnelDataIn",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the tunnel data out of all VPN connections."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 208
          },
          "name": "metricAllTunnelDataOut",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the tunnel state of all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 190
          },
          "name": "metricAllTunnelState",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes received through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 47
          },
          "name": "metricTunnelDataIn",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes sent through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 53
          },
          "name": "metricTunnelDataOut",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The state of the tunnel. 0 indicates DOWN and 1 indicates UP."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 41
          },
          "name": "metricTunnelState",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "VpnConnection",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 215
          },
          "name": "customerGatewayAsn",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The id of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 213
          },
          "name": "customerGatewayId",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 214
          },
          "name": "customerGatewayIp",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The id of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 212
          },
          "name": "vpnId",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnConnection"
    },
    "@aws-cdk/aws-ec2.VpnConnectionOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "example": "const vpc = new ec2.Vpc(this, 'MyVpc', {\n  vpnConnections: {\n    dynamic: { // Dynamic routing (BGP)\n      ip: '1.2.3.4'\n    },\n    static: { // Static routing\n      ip: '4.5.6.7',\n      staticRoutes: [\n        '192.168.10.0/24',\n        '192.168.20.0/24'\n      ]\n    }\n  }\n});",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 66
      },
      "name": "VpnConnectionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "65000",
            "stability": "stable",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 77
          },
          "name": "asn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 70
          },
          "name": "ip",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Dynamic routing (BGP)",
            "stability": "stable",
            "summary": "The static routes to be routed from the VPN gateway to the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 84
          },
          "name": "staticRoutes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Amazon generated tunnel options",
            "remarks": "At most two elements (one per tunnel).\nDuplicates not allowed.",
            "stability": "stable",
            "summary": "The tunnel options for the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 92
          },
          "name": "tunnelOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpnTunnelOption"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpn:VpnConnectionOptions"
    },
    "@aws-cdk/aws-ec2.VpnConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const vpc: ec2.Vpc;\n\nconst vpnConnectionProps: ec2.VpnConnectionProps = {\n  ip: 'ip',\n  vpc: vpc,\n\n  // the properties below are optional\n  asn: 123,\n  staticRoutes: ['staticRoutes'],\n  tunnelOptions: [{\n    preSharedKey: 'preSharedKey',\n    tunnelInsideCidr: 'tunnelInsideCidr',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.VpnConnectionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 123
      },
      "name": "VpnConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC to connect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 127
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnConnectionProps"
    },
    "@aws-cdk/aws-ec2.VpnConnectionType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The VPN connection type."
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 133
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The IPsec 1 VPN connection type."
          },
          "name": "IPSEC_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dummy member TODO: remove once https://github.com/aws/jsii/issues/231 is fixed."
          },
          "name": "DUMMY"
        }
      ],
      "name": "VpnConnectionType",
      "symbolId": "lib/vpn:VpnConnectionType"
    },
    "@aws-cdk/aws-ec2.VpnGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPNGateway"
        },
        "stability": "stable",
        "summary": "The VPN Gateway that shall be added to the VPC.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpnGateway = new ec2.VpnGateway(this, 'MyVpnGateway', {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnGateway",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpn.ts",
          "line": 158
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpnGateway"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 151
      },
      "name": "VpnGateway",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The virtual private gateway Id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 156
          },
          "name": "gatewayId",
          "overrides": "@aws-cdk/aws-ec2.IVpnGateway",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnGateway"
    },
    "@aws-cdk/aws-ec2.VpnGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The VpnGateway Properties.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpnGatewayProps: ec2.VpnGatewayProps = {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 98
      },
      "name": "VpnGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "65000",
            "stability": "stable",
            "summary": "Explicitly specify an Asn or let aws pick an Asn for you."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 109
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Default type ipsec.1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 103
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnGatewayProps"
    },
    "@aws-cdk/aws-ec2.VpnPort": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Port for client VPN."
      },
      "fqn": "@aws-cdk/aws-ec2.VpnPort",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 47
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTPS."
          },
          "name": "HTTPS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "OpenVPN."
          },
          "name": "OPENVPN"
        }
      ],
      "name": "VpnPort",
      "symbolId": "lib/client-vpn-endpoint-types:VpnPort"
    },
    "@aws-cdk/aws-ec2.VpnTunnelOption": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpnTunnelOption: ec2.VpnTunnelOption = {\n  preSharedKey: 'preSharedKey',\n  tunnelInsideCidr: 'tunnelInsideCidr',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnTunnelOption",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 46
      },
      "name": "VpnTunnelOption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "an Amazon generated pre-shared key",
            "remarks": "Allowed characters are alphanumeric characters\nand ._. Must be between 8 and 64 characters in length and cannot start with zero (0).",
            "stability": "stable",
            "summary": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 54
          },
          "name": "preSharedKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "an Amazon generated inside IP CIDR",
            "remarks": "Any specified CIDR blocks must be\nunique across all VPN connections that use the same virtual private gateway.\nA size /30 CIDR block from the 169.254.0.0/16 range.",
            "stability": "stable",
            "summary": "The range of inside IP addresses for the tunnel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 63
          },
          "name": "tunnelInsideCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnTunnelOption"
    },
    "@aws-cdk/aws-ec2.WindowsImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
      "docs": {
        "example": "// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.\n\nThe AMI ID is selected using the values published to the SSM parameter store.\n\nhttps://aws.amazon.com/blogs/mt/query-for-the-latest-windows-ami-using-systems-manager-parameter-store/",
        "stability": "stable",
        "summary": "Select the latest version of the indicated Windows version."
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 274
        },
        "parameters": [
          {
            "name": "version",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.WindowsVersion"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.WindowsImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 273
      },
      "name": "WindowsImage",
      "symbolId": "lib/machine-image:WindowsImage"
    },
    "@aws-cdk/aws-ec2.WindowsImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for WindowsImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\n\nconst windowsImageProps: ec2.WindowsImageProps = {\n  userData: userData,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 252
      },
      "name": "WindowsImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Windows machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 258
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:WindowsImageProps"
    },
    "@aws-cdk/aws-ec2.WindowsVersion": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSSMParameter('/my/ami', ec2.OperatingSystemType.LINUX);\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "The Windows version to use for the WindowsImage."
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/windows-versions.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_64BIT_SQL_2008_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CHINESE_SIMPLIFIED_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CHINESE_TRADITIONAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_DUTCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_HUNGARIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_CONTAINERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2016_GERMAN_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2016_GERMAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2008_R2_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_R2_SP1_PORTUGUESE_BRAZIL_64BIT_CORE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_R2_SP1_PORTUGESE_BRAZIL_64BIT_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ITALIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_DEEP_LEARNING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ITALIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_KOREAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_FQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_KOREAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_KOREAN_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2016_PORTUGUESE_PORTUGAL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2016_PORTUGESE_PORTUGAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_FRENCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_KOREAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_CHINESE_HONG_KONG_SAR_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_CHINESE_PRC_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_FRENCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_CONTAINERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_RUSSIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_CHINESE_SIMPLIFIED_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_HUNGARIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2007_R2_SP1_LANGUAGE_PACKS_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2012_SP4_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CHINESE_TRADITIONAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_POLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_DEEP_LEARNING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_GERMAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_RUSSIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CHINESE_TRADITIONAL_HONG_KONG_SAR_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_HUNGARIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_HYPERV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_64BIT_SQL_2005_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_GERMAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_JAPANESE_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_RUSSIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ITALIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_HYPERV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_CHINESE_TRADITIONAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_FRENCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_POLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_TURKISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_R2_RTM_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_R2_RTM_PORTUGUESE_PORTUGAL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_PORTUGESE_PORTUGAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_SWEDISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ITALIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_SPANISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_64BIT_SQL_2005_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2007_R2_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2016_PORTUGUESE_BRAZIL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2016_PORTUGESE_BRAZIL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CZECH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_SWEDISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_TURKISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_CORE_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_LANGUAGE_PACKS_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CZECH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_TURKISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_DUTCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_HUNGARIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_KOREAN_FULL_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_SPANISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_LANGUAGE_PACKS_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_SP2_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_SP2_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1709_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1803_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_64BIT_SQL_2008_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_RTM_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_RTM_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_P3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CHINESE_TRADITIONAL_HONG_KONG_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CHINESE_SIMPLIFIED_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2012_SP4_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1803_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_2014_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_SWEDISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_CHINESE_SIMPLIFIED_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_POLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2008_R2_SP3_WEB"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2008_R2_SP1_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_GERMAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_64BIT_SQL_2005_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_FRENCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_CZECH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1809_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1809_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_64BIT_SQL_2005_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_TURKISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2012_SP4_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_POLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_SPANISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1709_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_61BIT_SQL_2012_RTM_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2008_SP2_PORTUGUESE_BRAZIL_32BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2008_SP2_PORTUGESE_BRAZIL_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_RTM_PORTUGUESE_PORTUGAL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_RTM_PORTUGESE_PORTUGAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_CZECH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_DUTCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_KOREAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_DUTCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_64BIT_SQL_2012_SP4_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2019_PORTUGUESE_BRAZIL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2019_PORTUGESE_BRAZIL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SHAREPOINT_2010_SP2_FOUNDATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_P3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_SPANISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2019_PORTUGUESE_PORTUGAL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2019_PORTUGESE_PORTUGAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_SWEDISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_HYPERV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_KOREAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_RUSSIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_CHINESE_TRADITIONAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_EXPRESS"
        }
      ],
      "name": "WindowsVersion",
      "symbolId": "lib/windows-versions:WindowsVersion"
    }
  },
  "version": "1.134.0",
  "fingerprint": "**********"
}
