function _aws_cdk_aws_sqs_QueueEncryption(p) {
}
function _aws_cdk_aws_sqs_DeduplicationScope(p) {
}
function _aws_cdk_aws_sqs_FifoThroughputLimit(p) {
}
function _aws_cdk_aws_sqs_CfnQueuePolicyProps(p) {
}
function _aws_cdk_aws_sqs_QueueAttributes(p) {
}
function _aws_cdk_aws_sqs_QueuePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.queues))
        _aws_cdk_aws_sqs_IQueue(p.queues);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sqs_DeadLetterQueue(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.queue))
        _aws_cdk_aws_sqs_IQueue(p.queue);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sqs_CfnQueueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.tags))
        require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sqs_QueuePolicy(p) {
}
function _aws_cdk_aws_sqs_CfnQueuePolicy(p) {
}
function _aws_cdk_aws_sqs_Queue(p) {
}
function _aws_cdk_aws_sqs_CfnQueue(p) {
}
function _aws_cdk_aws_sqs_QueueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.deadLetterQueue))
        _aws_cdk_aws_sqs_DeadLetterQueue(p.deadLetterQueue);
    if (!visitedObjects.has(p.deduplicationScope))
        _aws_cdk_aws_sqs_DeduplicationScope(p.deduplicationScope);
    if (!visitedObjects.has(p.encryption))
        _aws_cdk_aws_sqs_QueueEncryption(p.encryption);
    if (!visitedObjects.has(p.fifoThroughputLimit))
        _aws_cdk_aws_sqs_FifoThroughputLimit(p.fifoThroughputLimit);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_sqs_IQueue(p) {
}
function _aws_cdk_aws_sqs_QueueBase(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
const visitedObjects = new Set();
class DeprecationError extends Error {
}
module.exports = { print, _aws_cdk_aws_sqs_QueueEncryption, _aws_cdk_aws_sqs_DeduplicationScope, _aws_cdk_aws_sqs_FifoThroughputLimit, _aws_cdk_aws_sqs_CfnQueuePolicyProps, _aws_cdk_aws_sqs_QueueAttributes, _aws_cdk_aws_sqs_QueuePolicyProps, _aws_cdk_aws_sqs_DeadLetterQueue, _aws_cdk_aws_sqs_CfnQueueProps, _aws_cdk_aws_sqs_QueuePolicy, _aws_cdk_aws_sqs_CfnQueuePolicy, _aws_cdk_aws_sqs_Queue, _aws_cdk_aws_sqs_CfnQueue, _aws_cdk_aws_sqs_QueueProps, _aws_cdk_aws_sqs_IQueue, _aws_cdk_aws_sqs_QueueBase };
module.exports.DeprecationError = DeprecationError;
